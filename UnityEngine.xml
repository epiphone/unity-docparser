<doc>
  <assembly>
    <name>UnityEngine</name>
  </assembly>
  <members>
    <member name="T:UnityEngine.Texture">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Texture.anisoLevel">
      <summary>Anisotropic filtering level of the texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Texture.filterMode">
      <summary>Filtering mode of the texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Texture.height">
      <summary>Height of the texture in pixels. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Texture.mipMapBias">
      <summary>Mip map bias of the texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Texture.width">
      <summary>Width of the texture in pixels. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Texture.wrapMode">
      <summary>Wrap mode (Repeat or Clamp) of the texture.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture.GetNativeTextureID()">
      <summary>Retrieve native ('hardware') handle to a texture.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture.GetNativeTexturePtr()">
      <summary>Retrieve native ('hardware') pointer to a texture.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture.SetGlobalAnisotropicFilteringLimits(int forcedMin,int globalMax)">
      <summary>Sets Anisotropic limits.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUI">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(Rect position)">
      <summary>Begin a group. Must be matched with a call to EndGroup.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginScrollView(Rect position,Vector2 scrollPosition,Rect viewRect)">
      <summary>Begin a scrolling view inside your GUI.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the ScrollView.</param>
      <param name="scrollPosition">The pixel distance that the view is scrolled in the X and Y directions.</param>
      <param name="viewRect">The rectangle used inside the scrollview.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when clientRect is wider than position.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when clientRect is taller than position.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Box(Rect position,string text)">
      <summary>Make a graphical box.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the box.</param>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.BringWindowToBack(int windowID)">
      <summary>Bring a specific window to back of the floating windows.</summary>
      <remarks></remarks>
      <param name="windowID">The identifier used when you created the window in the Window call.</param>
    </member>
    <member name="M:UnityEngine.GUI.BringWindowToFront(int windowID)">
      <summary>Bring a specific window to front of the floating windows.</summary>
      <remarks></remarks>
      <param name="windowID">The identifier used when you created the window in the Window call.</param>
    </member>
    <member name="M:UnityEngine.GUI.Button(Rect position,string text)">
      <summary>Make a single press button. The user clicks them and something happens immediately.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.DragWindow(Rect position)">
      <summary>Make a window draggable.</summary>
      <remarks></remarks>
      <param name="position">The part of the window that can be dragged. This is clipped to the actual window.</param>
    </member>
    <member name="M:UnityEngine.GUI.DragWindow()">
      <summary>If you want to have the entire window background to act as a drag area, use the version of DragWindow that takes no parameters and put it at the end of the window function.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUI.DrawTexture(Rect position,Texture image,ScaleMode scaleMode = ScaleMode.StretchToFill,bool alphaBlend = true,float imageAspect = 0)">
      <summary>Draw a texture within a rectangle.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="alphaBlend">Whether to apply alpha blending when drawing the image (enabled by default).</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.  Pass in w/h for the desired aspect ratio.  This allows the aspect ratio of the source image to be adjusted without changing the pixel width and height.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTextureWithTexCoords(Rect position,Texture image,Rect texCoords,bool alphaBlend = true)">
      <summary>Draw a texture within a rectangle with the given texture coordinates. Use this function for clipping or tiling the image within the given rectangle.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="texCoords">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="alphaBlend">Whether to alpha blend the image on to the display (the default). If false, the picture is drawn on to the display.</param>
    </member>
    <member name="M:UnityEngine.GUI.EndGroup()">
      <summary>End a group.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUI.EndScrollView()">
      <summary>Ends a scrollview started with a call to BeginScrollView.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUI.FocusControl(string name)">
      <summary>Move keyboard focus to a named control.</summary>
      <remarks></remarks>
      <param name="name">Name set using SetNextControlName.</param>
    </member>
    <member name="M:UnityEngine.GUI.FocusWindow(int windowID)">
      <summary>Make a window become the active window.</summary>
      <remarks></remarks>
      <param name="windowID">The identifier used when you created the window in the Window call.</param>
    </member>
    <member name="M:UnityEngine.GUI.GetNameOfFocusedControl()">
      <summary>Get the name of named control that has focus.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUI.HorizontalScrollbar(Rect position,float value,float size,float leftValue,float rightValue)">
      <summary>Make a horizontal scrollbar. Scrollbars are what you use to scroll through a document. Most likely, you want to use scrollViews instead.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the scrollbar.</param>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="leftValue">The value at the left end of the scrollbar.</param>
      <param name="rightValue">The value at the right end of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.HorizontalSlider(Rect position,float value,float leftValue,float rightValue)">
      <summary>A horizontal slider the user can drag to change a value between a min and a max.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Label(Rect position,string text)">
      <summary>Make a text or texture label on screen.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the label.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(int id,Rect clientRect,WindowFunction func,string text)">
      <summary>Show a Modal Window.</summary>
      <remarks></remarks>
      <param name="id">A unique id number.</param>
      <param name="clientRect">Position and size of the window.</param>
      <param name="func">A function which contains the immediate mode GUI code to draw the contents of your window.</param>
      <param name="text">Text to appear in the title-bar area of the window, if any.</param>
      <param name="image">An image to appear in the title bar of the window, if any.</param>
      <param name="content">GUIContent to appear in the title bar of the window, if any.</param>
      <param name="style">Style to apply to the window.</param>
    </member>
    <member name="M:UnityEngine.GUI.PasswordField(Rect position,string password,char maskChar)">
      <summary>Make a text field where the user can enter a password.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="password">Password to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maskChar">Character to mask the password with.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(Rect position,string text)">
      <summary>Make a button that is active as long as the user holds it down.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.ScrollTo(Rect position)">
      <summary>Scrolls all enclosing scrollviews so they try to make position visible.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(Rect position,int selected,string[] texts,int xCount)">
      <summary>Make a grid of buttons.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the grid.</param>
      <param name="selected">The index of the selected grid button.</param>
      <param name="texts">An array of strings to show on the grid buttons.</param>
      <param name="images">An array of textures on the grid buttons.</param>
      <param name="contents">An array of text, image and tooltips for the grid button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The controls will be scaled to fit unless the style defines a fixedWidth to use.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.SetNextControlName(string name)">
      <summary>Set the name of the next control.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUI.TextArea(Rect position,string text)">
      <summary>Make a Multi-line text area where the user can edit a string.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textArea style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.TextField(Rect position,string text)">
      <summary>Make a single-line text field where the user can edit a string.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(Rect position,bool value,string text)">
      <summary>Make an on/off toggle button.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="value">Is this button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the toggle style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(Rect position,int selected,string[] texts)">
      <summary>Make a toolbar.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the toolbar.</param>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the toolbar buttons.</param>
      <param name="images">An array of textures on the toolbar buttons.</param>
      <param name="contents">An array of text, image and tooltips for the toolbar buttons.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.UnfocusWindow()">
      <summary>Remove focus from all windows.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUI.VerticalScrollbar(Rect position,float value,float size,float topValue,float bottomValue)">
      <summary>Make a vertical scrollbar. Scrollbars are what you use to scroll through a document. Most likely, you want to use scrollViews instead.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the scrollbar.</param>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="topValue">The value at the top of the scrollbar.</param>
      <param name="bottomValue">The value at the bottom of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.VerticalSlider(Rect position,float value,float topValue,float bottomValue)">
      <summary>A vertical slider the user can drag to change a value between a min and a max.</summary>
      <remarks></remarks>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="topValue">The value at the top end of the slider.</param>
      <param name="bottomValue">The value at the bottom end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Window(int id,Rect clientRect,WindowFunction func,string text)">
      <summary>Make a popup window.</summary>
      <remarks></remarks>
      <param name="Style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="id">ID number for the window (can be any value as long as it is unique).</param>
      <param name="clientRect">Onscreen rectangle denoting the window's position and size.</param>
      <param name="func">Script function to display the window's contents.</param>
      <param name="text">Text to render inside the window.</param>
      <param name="image">Image to render inside the window.</param>
      <param name="content">GUIContent to render inside the window.</param>
      <param name="style">Style information for the window.</param>
      <param name="title">Text displayed in the window's title bar.</param>
    </member>
    <member name="T:UnityEngine.Handheld">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Handheld.GetActivityIndicatorStyle()">
      <summary>Gets the current activity indicator style.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Handheld.PlayFullScreenMovie(string path,Color bgColor = Color.black,FullScreenMovieControlMode controlMode = FullScreenMovieControlMode.Full,FullScreenMovieScalingMode scalingMode = FullScreenMovieScalingMode.AspectFit)">
      <summary>Plays a full-screen movie (pro only feature).</summary>
      <remarks></remarks>
      <param name="path">Filesystem path to the movie file.</param>
      <param name="bgColor">Background color.</param>
      <param name="controlMode">How the playback controls are to be displayed.</param>
      <param name="scalingMode">How the movie is to be scaled to fit the screen.</param>
    </member>
    <member name="M:UnityEngine.Handheld.SetActivityIndicatorStyle(iOSActivityIndicatorStyle style)">
      <summary>Sets the desired activity indicator style.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Handheld.StartActivityIndicator()">
      <summary>Starts os activity indicator.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Handheld.StopActivityIndicator()">
      <summary>Stops os activity indicator.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Handheld.Vibrate()">
      <summary>Triggers device vibration.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Display">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Display.colorBuffer">
      <summary>Color RenderBuffer.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Display.depthBuffer">
      <summary>Depth RenderBuffer.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Display.renderingHeight">
      <summary>Rendering Height.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Display.renderingWidth">
      <summary>Rendering Width.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Display.systemHeight">
      <summary>System Height.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Display.systemWidth">
      <summary>System Width.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Display.SetRenderingResolution(int w,int h)">
      <summary>Sets Rendering resolution for the display.</summary>
      <remarks></remarks>
      <param name="w">Rendering width.</param>
      <param name="h">Rendering height.</param>
    </member>
    <member name="T:UnityEngine.Keyframe">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Keyframe(float time,&#13;&#10;float value)">
      <summary>Create a keyframe.</summary>
      <remarks></remarks>
      <param name="time"></param>
      <param name="value)"></param>
    </member>
    <member name="C:UnityEngine.Keyframe(float time,&#13;&#10;float value,&#13;&#10;float inTangent,&#13;&#10;float outTangent)">
      <summary>Create a keyframe.</summary>
      <remarks></remarks>
      <param name="time"></param>
      <param name="value"></param>
      <param name="inTangent"></param>
      <param name="outTangent)"></param>
    </member>
    <member name="P:UnityEngine.Keyframe.inTangent">
      <summary>Describes the tangent when approaching this point from the previous point in the curve.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Keyframe.outTangent">
      <summary>Describes the tangent when leaving this point towards the next point in the curve.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Keyframe.time">
      <summary>The time of the keyframe.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Keyframe.value">
      <summary>The value of the curve at keyframe.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.HingeJoint2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.anchor">
      <summary>The joint's anchor point on the object that has the HingeJoint2D component.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.connectedAnchor">
      <summary>The joint's anchor point on the second object (ie, the one which doesn't have the component).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.limits">
      <summary>Limit of angular rotation on the joint.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.motor">
      <summary>Parameters for the motor force applied to the joint.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.useLimits">
      <summary>Should limits be placed on the range of rotation?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.useMotor">
      <summary>Should the joint be rotated automatically by a motor torque?</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Rigidbody">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.angularDrag">
      <summary>The angular drag of the object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.angularVelocity">
      <summary>The angular velocity vector of the rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.centerOfMass">
      <summary>The center of mass relative to the transform's origin.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.collisionDetectionMode">
      <summary>The Rigidbody's collision detection mode.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.constraints">
      <summary>Controls which degrees of freedom are allowed for the simulation of this Rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.detectCollisions">
      <summary>Should collision detection be enabled? (By default always enabled).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.drag">
      <summary>The drag of the object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.freezeRotation">
      <summary>Controls whether physics will change the rotation of the object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.inertiaTensor">
      <summary>The diagonal inertia tensor of mass relative to the center of mass.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.inertiaTensorRotation">
      <summary>The rotation of the inertia tensor.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.interpolation">
      <summary>Interpolation allows you to smooth out the effect of running physics at a fixed frame rate.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.isKinematic">
      <summary>Controls whether physics affects the rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.mass">
      <summary>The mass of the rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.maxAngularVelocity">
      <summary>The maximimum angular velocity of the rigidbody. (Default 7) range { 0, infinity }.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.position">
      <summary>The position of the rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.rotation">
      <summary>The rotation of the rigdibody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.sleepAngularVelocity">
      <summary>The angular velocity, below which objects start going to sleep.  (Default 0.14) range { 0, infinity }.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.sleepVelocity">
      <summary>The linear velocity, below which objects start going to sleep. (Default 0.14) range { 0, infinity }.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.solverIterationCount">
      <summary>Allows you to override the solver iteration count per rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.useConeFriction">
      <summary>Force cone friction to be used for this rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.useGravity">
      <summary>Controls whether gravity affects this rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.velocity">
      <summary>The velocity vector of the rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody.worldCenterOfMass">
      <summary>The center of mass of the rigidbody in world space (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddExplosionForce(float explosionForce,Vector3 explosionPosition,float explosionRadius,float upwardsModifier = 0.0F,ForceMode mode = ForceMode.Force)">
      <summary>Applies a force to the rigidbody that simulates explosion effects. The explosion force will fall off linearly with distance to the rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddForce(Vector3 force,ForceMode mode = ForceMode.Force)">
      <summary>Adds a force to the rigidbody. As a result the rigidbody will start moving.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddForce(float x,float y,float z,ForceMode mode = ForceMode.Force)">
      <summary>Adds a force to the rigidbody.  As a result the rigidbody will start moving.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddForceAtPosition(Vector3 force,Vector3 position,ForceMode mode = ForceMode.Force)">
      <summary>Applies force at position. As a result this will apply a torque and force on the object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeForce(Vector3 force,ForceMode mode = ForceMode.Force)">
      <summary>Adds a force to the rigidbody relative to its coordinate system.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeForce(float x,float y,float z,ForceMode mode = ForceMode.Force)">
      <summary>Adds a force to the rigidbody relative to its coordinate system.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeTorque(Vector3 torque,ForceMode mode = ForceMode.Force)">
      <summary>Adds a torque to the rigidbody relative to the rigidbodie's own coordinate system.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeTorque(float x,float y,float z,ForceMode mode = ForceMode.Force)">
      <summary>Adds a torque to the rigidbody relative to the rigidbodie's own coordinate system.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddTorque(Vector3 torque,ForceMode mode = ForceMode.Force)">
      <summary>Adds a torque to the rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddTorque(float x,float y,float z,ForceMode mode = ForceMode.Force)">
      <summary>Adds a torque to the rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.ClosestPointOnBounds(Vector3 position)">
      <summary>The closest point to the bounding box of the attached colliders.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.GetPointVelocity(Vector3 worldPoint)">
      <summary>The velocity of the rigidbody at the point worldPoint in global space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.GetRelativePointVelocity(Vector3 relativePoint)">
      <summary>The velocity relative to the rigidbody at the point relativePoint.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.IsSleeping()">
      <summary>Is the rigidbody sleeping?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.MovePosition(Vector3 position)">
      <summary>Moves the rigidbody to position.</summary>
      <remarks></remarks>
      <param name="position">The new position for the Rigidbody object.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.MoveRotation(Quaternion rot)">
      <summary>Rotates the rigidbody to rotation.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.SetDensity(float density)">
      <summary>Sets the mass based on the attached colliders assuming a constant density.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.Sleep()">
      <summary>Forces a rigidbody to sleep at least one frame.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody.SweepTest(Vector3 direction,RaycastHit hitInfo,float distance = Mathf.Infinity)">
      <summary>Tests if a rigidbody would collide with anything, if it was moved through the scene.</summary>
      <remarks></remarks>
      <param name="direction">The direction into which to sweep the rigidbody.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit (See Also: RaycastHit).</param>
      <param name="distance">The length of the sweep.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.SweepTestAll(Vector3 direction,float distance = Mathf.Infinity)">
      <summary>Like Rigidbody.SweepTest, but returns all hits.</summary>
      <remarks></remarks>
      <param name="direction">Direction to sweep the Rigidbody object.</param>
      <param name="distance">Length of the sweep.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.WakeUp()">
      <summary>Forces a rigidbody to wake up.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.TextAsset">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextAsset.bytes">
      <summary>The raw bytes of the text asset. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextAsset.text">
      <summary>The text contents of the .txt file as a string. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.HumanBone">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanBone.boneName">
      <summary>The name of the bone to which the Mecanim human bone is mapped.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanBone.humanName">
      <summary>The name of the Mecanim human bone to which the bone from the model is mapped.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanBone.limit">
      <summary>The rotation limits that define the muscle for this bone.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Animator">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.animatePhysics">
      <summary>When turned on, animations will be executed in the physics loop. This is only useful in conjunction with kinematic rigidbodies.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.applyRootMotion">
      <summary>Should root motion be applied?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.avatar">
      <summary>Gets/Sets the current Avatar.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.bodyPosition">
      <summary>The position of the body center of mass.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.bodyRotation">
      <summary>The rotation of the body center of mass.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.cullingMode">
      <summary>Controls culling of this Animator component.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.deltaPosition">
      <summary>Gets the avatar delta position for the last evaluated frame.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.deltaRotation">
      <summary>Gets the avatar delta rotation for the last evaluated frame.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.feetPivotActive">
      <summary>Blends pivot point between body center of mass and feet pivot. At 0%, the blending point is body center of mass. At 100%, the blending point is feet pivot.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.gravityWeight">
      <summary>The current gravity weight based on current animations that are played.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.humanScale">
      <summary>Returns the scale of the current Avatar for a humanoid rig, (1 by default if the rig is generic).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.isHuman">
      <summary>Returns true if the current rig is humanoid, false if it is generic.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.isMatchingTarget">
      <summary>If automatic matching is active.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.layerCount">
      <summary>The AnimatorController layer count.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.leftFeetBottomHeight">
      <summary>Get left foot bottom height.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.pivotPosition">
      <summary>Get the current position of the pivot.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.pivotWeight">
      <summary>Gets the pivot weight.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.playbackTime">
      <summary>Sets the playback position in the recording buffer.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.recorderStartTime">
      <summary>Start time of the first frame of the buffer relative to the frame at which StartRecording was called.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.recorderStopTime">
      <summary>End time of the recorded clip relative to when StartRecording was called.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.rightFeetBottomHeight">
      <summary>Get right foot bottom height.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.rootPosition">
      <summary>The root position, the position of the game object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.rootRotation">
      <summary>The root rotation, the rotation of the game object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.runtimeAnimatorController">
      <summary>The runtime representation of AnimatorController that controls the Animator.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.speed">
      <summary>The playback speed of the Animator. 1 is normal playback speed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.stabilizeFeet">
      <summary>Automatic stabilization of feet during transition and blending.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.targetPosition">
      <summary>Returns the position of the target specified by SetTarget(AvatarTarget targetIndex, float targetNormalizedTime)).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animator.targetRotation">
      <summary>Returns the rotation of the target specified by SetTarget(AvatarTarget targetIndex, float targetNormalizedTime)).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animator.CrossFade(string stateName,float transitionDuration,int layer = -1,float normalizedTime = float.NegativeInfinity)">
      <summary>Create a dynamic transition between the current state and the destination state.</summary>
      <remarks></remarks>
      <param name="stateName">The name of the destination state.</param>
      <param name="transitionDuration">The duration of the transition. Value is in source state normalized time.</param>
      <param name="normalizedTime">Start time of the current destination state. Value is in source state normalized time, should be between 0 and 1.</param>
      <param name="layer">Layer index containing the destination state.</param>
      <param name="stateNameHash">State hash of the destination state.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetAnimatorTransitionInfo(int layerIndex)">
      <summary>Gets the Transition information on a specified AnimatorController layer.</summary>
      <remarks></remarks>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetBoneTransform(HumanBodyBones humanBoneId)">
      <summary>Returns transform mapped to this human bone id.</summary>
      <remarks></remarks>
      <param name="humanBoneId">The human bone that is queried, see enum HumanBodyBones for a list of possible values.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetBool(string name)">
      <summary>Gets the value of a bool parameter.</summary>
      <remarks></remarks>
      <param name="name">The name of the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetBool(int id)">
      <summary>Gets the value of a bool parameter.</summary>
      <remarks></remarks>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimationClipState(int layerIndex)">
      <summary>Gets the list of AnimationInfo currently played by the current state.</summary>
      <remarks></remarks>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimatorStateInfo(int layerIndex)">
      <summary>Gets the current State information on a specified AnimatorController layer.</summary>
      <remarks></remarks>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetFloat(string name)">
      <summary>Gets the value of a float parameter.</summary>
      <remarks></remarks>
      <param name="name">The name of the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetFloat(int id)">
      <summary>Gets the value of a float parameter.</summary>
      <remarks></remarks>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetIKPosition(AvatarIKGoal goal)">
      <summary>Gets the position of an IK goal.</summary>
      <remarks></remarks>
      <param name="goal">The AvatarIKGoal that is queried.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetIKPositionWeight(AvatarIKGoal goal)">
      <summary>Gets the translative weight of an IK goal (0 = at the original animation before IK, 1 = at the goal).</summary>
      <remarks></remarks>
      <param name="goal">The AvatarIKGoal that is queried.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetIKRotation(AvatarIKGoal goal)">
      <summary>Gets the rotation of an IK goal.</summary>
      <remarks></remarks>
      <param name="goal">The AvatarIKGoal that is is queried.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetIKRotationWeight(AvatarIKGoal goal)">
      <summary>Gets the rotational weight of an IK goal (0 = rotation before IK, 1 = rotation at the IK goal).</summary>
      <remarks></remarks>
      <param name="goal">The AvatarIKGoal that is queried.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetInteger(string name)">
      <summary>Gets the value of an integer parameter.</summary>
      <remarks></remarks>
      <param name="name">The name of the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetInteger(int id)">
      <summary>Gets the value of an integer parameter.</summary>
      <remarks></remarks>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetLayerName(int layerIndex)">
      <summary>Gets name of the layer.</summary>
      <remarks></remarks>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetLayerWeight(int layerIndex)">
      <summary>Gets the layer's current weight.</summary>
      <remarks></remarks>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimationClipState(int layerIndex)">
      <summary>Gets the list of AnimationInfo currently played by the next state.</summary>
      <remarks></remarks>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimatorStateInfo(int layerIndex)">
      <summary>Gets the next State information on a specified AnimatorController layer.</summary>
      <remarks></remarks>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Animator.InterruptMatchTarget(bool completeMatch = true)">
      <summary>Interrupts the automatic target matching.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animator.IsInTransition(int layerIndex)">
      <summary>Is the specified AnimatorController layer in a transition.</summary>
      <remarks></remarks>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Animator.IsParameterControlledByCurve(string name)">
      <summary>Returns true if a parameter is controlled by an additional curve on an animation.</summary>
      <remarks></remarks>
      <param name="name">The name of the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.IsParameterControlledByCurve(int id)">
      <summary>Returns true if a parameter is controlled by an additional curve on an animation.</summary>
      <remarks></remarks>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Animator.MatchTarget(Vector3 matchPosition,Quaternion matchRotation,AvatarTarget targetBodyPart,MatchTargetWeightMask weightMask,float startNormalizedTime,float targetNormalizedTime = 1)">
      <summary>Automatically adjust the gameobject position and rotation so that the AvatarTarget reaches the matchPosition when the current state is at the specified progress.</summary>
      <remarks></remarks>
      <param name="matchPosition">The position we want the body part to reach.</param>
      <param name="matchRotation">The rotation in which we want the body part to be.</param>
      <param name="targetBodyPart">The body part that is involved in the match.</param>
      <param name="weightMask">Structure that contains weights for matching position and rotation.</param>
      <param name="startNormalizedTime">Start time within the animation clip (0 - beginning of clip, 1 - end of clip).</param>
      <param name="targetNormalizedTime">End time within the animation clip (0 - beginning of clip, 1 - end of clip), values greater than 1 can be set to trigger a match after a certain number of loops. Ex: 2.3 means at 30% of 2nd loop.</param>
    </member>
    <member name="M:UnityEngine.Animator.Play(string stateName,int layer = -1,float normalizedTime = float.NegativeInfinity)">
      <summary>Plays a state.</summary>
      <remarks></remarks>
      <param name="stateName">The name of the state the will be played.</param>
      <param name="layer">The layer where the state is.</param>
      <param name="normalizedTime">The normalized time at which the state will play.</param>
      <param name="stateNameHash">The  hash of the state.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetBool(string name,bool value)">
      <summary>Sets the value of a bool parameter.</summary>
      <remarks></remarks>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetBool(int id,bool value)">
      <summary>Sets the value of a bool parameter.</summary>
      <remarks></remarks>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
      <param name="value">The new value for the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(string name,float value)">
      <summary>Sets the value of a float parameter.</summary>
      <remarks></remarks>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(string name,float value,float dampTime,float deltaTime)">
      <summary>Sets the value of a float parameter.</summary>
      <remarks></remarks>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
      <param name="dampTime">The time allowed to parameter to reach the value.</param>
      <param name="deltaTime">The current frame deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(int id,float value)">
      <summary>Sets the value of a float parameter.</summary>
      <remarks></remarks>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
      <param name="value">The new value for the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(int id,float value,float dampTime,float deltaTime)">
      <summary>Sets the value of a float parameter.</summary>
      <remarks></remarks>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
      <param name="value">The new value for the parameter.</param>
      <param name="dampTime">The time allowed to parameter to reach the value.</param>
      <param name="deltaTime">The current frame deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKPosition(AvatarIKGoal goal,Vector3 goalPosition)">
      <summary>Sets the position of an IK goal.</summary>
      <remarks></remarks>
      <param name="goal">The AvatarIKGoal that is set.</param>
      <param name="goalPosition">The position in world space.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKPositionWeight(AvatarIKGoal goal,float value)">
      <summary>Sets the translative weight of an IK goal (0 = at the original animation before IK, 1 = at the goal).</summary>
      <remarks></remarks>
      <param name="goal">The AvatarIKGoal that is set.</param>
      <param name="value">The translative weight.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKRotation(AvatarIKGoal goal,Quaternion goalRotation)">
      <summary>Sets the rotation of an IK goal.</summary>
      <remarks></remarks>
      <param name="goal">The AvatarIKGoal that is set.</param>
      <param name="goalRotation">The rotation in world space.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKRotationWeight(AvatarIKGoal goal,float value)">
      <summary>Sets the rotational weight of an IK goal (0 = rotation before IK, 1 = rotation at the IK goal).</summary>
      <remarks></remarks>
      <param name="goal">The AvatarIKGoal that is set.</param>
      <param name="value">The rotational weight.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetInteger(string name,int value)">
      <summary>Sets the value of an integer parameter.</summary>
      <remarks></remarks>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetInteger(int id,int value)">
      <summary>Sets the value of an integer parameter.</summary>
      <remarks></remarks>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
      <param name="value">The new value for the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLayerWeight(int layerIndex,float weight)">
      <summary>Sets the layer's current weight.</summary>
      <remarks></remarks>
      <param name="layerIndex">The layer's index.</param>
      <param name="weight">The weight of the layer.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtPosition(Vector3 lookAtPosition)">
      <summary>Sets the look at position.</summary>
      <remarks></remarks>
      <param name="lookAtPosition">The position to lookAt.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtWeight(float weight,float bodyWeight = 0.00f,float headWeight = 1.00f,float eyesWeight = 0.00f,float clampWeight = 0.50f)">
      <summary>Set look at weights.</summary>
      <remarks></remarks>
      <param name="weight">(0-1) the global weight of the LookAt, multiplier for other parameters.</param>
      <param name="bodyWeight">(0-1) determines how much the body is involved in the LookAt.</param>
      <param name="headWeight">(0-1) determines how much the head is involved in the LookAt.</param>
      <param name="eyesWeight">(0-1) determines how much the eyes are involved in the LookAt.</param>
      <param name="clampWeight">(0-1) 0.0 means the character is completely unrestrained in motion, 1.0 means he's completely clamped (look at becomes impossible), and 0.5 means he'll be able to move on half of the possible range (180 degrees).</param>
    </member>
    <member name="M:UnityEngine.Animator.SetTarget(AvatarTarget targetIndex,float targetNormalizedTime)">
      <summary>Sets an AvatarTarget and a targetNormalizedTime for the current state.</summary>
      <remarks></remarks>
      <param name="targetIndex">The avatar body part that is queried.</param>
      <param name="targetNormalizedTime">The current state Time that is queried.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetTrigger(string name)">
      <summary>Sets a trigger parameter to active or inactive.</summary>
      <remarks></remarks>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Animator.StartPlayback()">
      <summary>Sets the animator in playback mode.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animator.StartRecording(int frameCount)">
      <summary>Sets the animator in recording mode, and allocates a circular buffer of size frameCount.</summary>
      <remarks></remarks>
      <param name="frameCount">The number of frames (updates) that will be recorded. If frameCount is 0, the recording will continue until the user calls StopRecording. The maximum value for frameCount is 10000.</param>
    </member>
    <member name="M:UnityEngine.Animator.StopPlayback()">
      <summary>Stops the animator playback mode. When playback stops, the avatar resumes getting control from game logic.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animator.StopRecording()">
      <summary>Stops animator record mode.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animator.StringToHash(string name)">
      <summary>Generates an parameter id from a string.</summary>
      <remarks></remarks>
      <param name="name">The string to convert to Id.</param>
    </member>
    <member name="T:UnityEngine.WWW">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.WWW(string url)">
      <summary>Creates a WWW request with the given URL.</summary>
      <remarks></remarks>
      <param name="url)"></param>
    </member>
    <member name="C:UnityEngine.WWW(string url,&#13;&#10;WWWForm form)">
      <summary>Creates a WWW request with the given URL.</summary>
      <remarks></remarks>
      <param name="url"></param>
      <param name="form)"></param>
    </member>
    <member name="C:UnityEngine.WWW(string url,&#13;&#10;byte[] postData)">
      <summary>Creates a WWW request with the given URL.</summary>
      <remarks></remarks>
      <param name="url"></param>
      <param name="postData)"></param>
    </member>
    <member name="C:UnityEngine.WWW(string url,&#13;&#10;byte[] postData,&#13;&#10;Hashtable headers)">
      <summary>Creates a WWW request with the given URL.</summary>
      <remarks></remarks>
      <param name="url"></param>
      <param name="postData"></param>
      <param name="headers)"></param>
    </member>
    <member name="P:UnityEngine.WWW.assetBundle">
      <summary>Streams an AssetBundle that can contain any kind of asset from the project folder.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.audioClip">
      <summary>Returns a AudioClip generated from the downloaded data (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.bytes">
      <summary>Returns the contents of the fetched web page as a byte array (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.bytesDownloaded">
      <summary>The number of bytes downloaded by this WWW query (read only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.error">
      <summary>Returns an error message if there was an error during the download (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.isDone">
      <summary>Is the download already finished? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.movie">
      <summary>Returns a MovieTexture generated from the downloaded data (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.progress">
      <summary>How far has the download progressed (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.text">
      <summary>Returns the contents of the fetched web page as a string (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.texture">
      <summary>Returns a Texture2D generated from the downloaded data (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.textureNonReadable">
      <summary>Returns a non-readable Texture2D generated from the downloaded data (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.threadPriority">
      <summary>Priority of AssetBundle decompression thread.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.uploadProgress">
      <summary>How far has the upload progressed (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWW.url">
      <summary>The URL of this WWW request (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WWW.GetAudioClip(bool threeD)">
      <summary>Returns an AudioClip generated from the downloaded data (Read Only).</summary>
      <remarks></remarks>
      <param name="threeD">Use this to specify whether the clip should be a 2D or 3D clip&#13;
the .audioClip property defaults to 3D.</param>
      <param name="stream">Sets whether the clip should be completely downloaded before it's ready to play (false) or the stream can be played even if only part of the clip is downloaded (true).&#13;
The latter will disable seeking on the clip (with .time and/or .timeSamples).</param>
      <param name="set">The AudioType of the content your downloading. If this is not set Unity will try to determine the type from URL.</param>
    </member>
    <member name="M:UnityEngine.WWW.LoadImageIntoTexture(Texture2D tex)">
      <summary>Replaces the contents of an existing Texture2D with an image from the downloaded data.</summary>
      <remarks></remarks>
      <param name="tex">An existing texture object to be overwritten with the image data.</param>
    </member>
    <member name="M:UnityEngine.WWW.LoadUnityWeb()">
      <summary>Loads the new web player data file.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WWW.EscapeURL(string s,Encoding e = System.Text.Encoding.UTF8)">
      <summary>Escapes characters in a string to ensure they are URL-friendly.</summary>
      <remarks></remarks>
      <param name="s">A string with characters to be escaped.</param>
      <param name="e">The text encoding to use.</param>
    </member>
    <member name="M:UnityEngine.WWW.LoadFromCacheOrDownload(string url,int version,uint crc = 0)">
      <summary>Loads an AssetBundle with the specified version number from the cache. If the AssetBundle is not currently cached, it will automatically be downloaded and stored in the cache for future retrieval from local storage.</summary>
      <remarks></remarks>
      <param name="url">The URL to download the AssetBundle from, if it is not present in the cache. Must be '%' escaped.</param>
      <param name="version">Version of the AssetBundle. The file will only be loaded from the disk cache if it has previously been downloaded with the same version parameter. By incrementing the version number requested by your application, you can force Caching to download a new copy of the AssetBunlde from url.</param>
      <param name="crc">An optional CRC-32 Checksum of the uncompressed contents. If this is non-zero, then the content will be compared against the checksum before loading it, and give an error if it does not match. You can use this to avoid data corruption from bad downloads or users tampering with the cached files on disk. If the CRC does not match, Unity will try to redownload the data, and if the CRC on the server does not match it will fail with an error. Look at the error string returned to see the correct CRC value to use for an AssetBundle.</param>
    </member>
    <member name="M:UnityEngine.WWW.UnEscapeURL(string s,Encoding e = System.Text.Encoding.UTF8)">
      <summary>Converts URL-friendly escape sequences back to normal text.</summary>
      <remarks></remarks>
      <param name="s">A string containing escaped characters.</param>
      <param name="e">The text encoding to use.</param>
    </member>
    <member name="T:UnityEngine.NavMeshTriangulation">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshTriangulation.indices">
      <summary>Triangle indices for the navmesh triangulation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshTriangulation.layers">
      <summary>NavMeshLayer values for the navmesh triangulation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshTriangulation.vertices">
      <summary>Vertices for the navmesh triangulation.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.OffMeshLinkData">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLinkData.activated">
      <summary>Is link active (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLinkData.endPos">
      <summary>Link end world position (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLinkData.linkType">
      <summary>Link type specifier (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLinkData.offMeshLink">
      <summary>The OffMeshLink if the link type is a manually placed Offmeshlink (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLinkData.startPos">
      <summary>Link start world position (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLinkData.valid">
      <summary>Is link valid (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.NavMesh">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NavMesh.CalculatePath(Vector3 sourcePosition,Vector3 targetPosition,int passableMask,NavMeshPath path)">
      <summary>Calculate a path between two points and store the resulting path.</summary>
      <remarks></remarks>
      <param name="sourcePosition">The initial postion of the path requested.</param>
      <param name="targetPosition">The final position of the path requested.</param>
      <param name="passableMask">A mask specifying which NavMesh layers can be passed when calculating a path.</param>
      <param name="path">The resulting path.</param>
    </member>
    <member name="M:UnityEngine.NavMesh.CalculateTriangulation()">
      <summary>Triangulation of the current navmesh.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NavMesh.FindClosestEdge(Vector3 sourcePosition,NavMeshHit hit,int passableMask)">
      <summary>Locate the closest NavMesh edge from a point on the NavMesh.</summary>
      <remarks></remarks>
      <param name="sourcePosition">The origin of the distance query.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <param name="passableMask">A mask specifying which NavMesh layers can be passed when finding the nearest edge.</param>
    </member>
    <member name="M:UnityEngine.NavMesh.GetLayerCost(int layer)">
      <summary>Gets the cost for traversing over geometry of the layer type on all agents.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NavMesh.GetNavMeshLayerFromName(string layerName)">
      <summary>Returns the layer index for a named layer.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NavMesh.Raycast(Vector3 sourcePosition,Vector3 targetPosition,NavMeshHit hit,int passableMask)">
      <summary>Trace a line between two points on the NavMesh.</summary>
      <remarks></remarks>
      <param name="sourcePosition">The origin of the ray.</param>
      <param name="targetPosition">The end of the ray.</param>
      <param name="hit">Holds the properties of the ray cast resulting location.</param>
      <param name="passableMask">A mask specifying which NavMesh layers can be passed when tracing the ray.</param>
    </member>
    <member name="M:UnityEngine.NavMesh.SamplePosition(Vector3 sourcePosition,NavMeshHit hit,float maxDistance,int allowedMask)">
      <summary>Sample the NavMesh closest to the point specified.</summary>
      <remarks></remarks>
      <param name="sourcePosition">The origin of the sample query.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <param name="maxDistance">Sample within this distance from sourcePosition.</param>
      <param name="allowedMask">A mask specifying which NavMesh layers are allowed when finding the nearest point.</param>
    </member>
    <member name="M:UnityEngine.NavMesh.SetLayerCost(int layer,float cost)">
      <summary>Sets the cost for traversing over geometry of the layer type on all agents.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.MeshRenderer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ParticleSystem">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.duration">
      <summary>The duration of the particle system in seconds (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.emissionRate">
      <summary>The rate of emission.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.enableEmission">
      <summary>When set to false, the particle system will not emit particles.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.gravityModifier">
      <summary>Scale being applied to the gravity defined by Physics.gravity.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.isPaused">
      <summary>Is the particle system paused right now ?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.isPlaying">
      <summary>Is the particle system playing right now ?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.isStopped">
      <summary>Is the particle system stopped right now ?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.loop">
      <summary>Is the particle system looping?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.maxParticles">
      <summary>The maximum number of particles to emit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.particleCount">
      <summary>The current number of particles (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.playbackSpeed">
      <summary>The playback speed of the particle system. 1 is normal playback speed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.playOnAwake">
      <summary>If set to true, the particle system will automatically start playing on startup.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.randomSeed">
      <summary>Random seed used for the particle system emission. If set to 0, it will be assigned a random value on awake.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.safeCollisionEventSize">
      <summary>Safe array size for use with ParticleSystem.GetCollisionEvents.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.simulationSpace">
      <summary>This selects the space in which to simulate particles. It can be either world or local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startColor">
      <summary>The initial color of particles when emitted.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startDelay">
      <summary>Start delay in seconds.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startLifetime">
      <summary>The total lifetime in seconds that particles will have when emitted. When using curves, this values acts as a scale on the curve. This value is set in the particle when it is create by the particle system.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startRotation">
      <summary>The initial rotation of particles when emitted. When using curves, this values acts as a scale on the curve.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startSize">
      <summary>The initial size of particles when emitted. When using curves, this values acts as a scale on the curve.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startSpeed">
      <summary>The initial speed of particles when emitted. When using curves, this values acts as a scale on the curve.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystem.time">
      <summary>Playback position in seconds.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Clear(bool withChildren = true)">
      <summary>Remove all particles in the particle system.</summary>
      <remarks></remarks>
      <param name="withChildren">Clear all child particle systems as well.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Emit(int count)">
      <summary>Emit count particles immediately.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Emit(Vector3 position,Vector3 velocity,float size,float lifetime,Color32 color)">
      <summary>Emit a single particle with given parameters.</summary>
      <remarks></remarks>
      <param name="position">The position of the particle.</param>
      <param name="velocity">The velocity of the particle.</param>
      <param name="size">The size of the particle.</param>
      <param name="lifetime">The remaining lifetime of the particle.</param>
      <param name="color">The color of the particle.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Emit(Particle particle)">
      <summary>Emit a single particle.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ParticleSystem.GetCollisionEvents(GameObject go,CollisionEvent[] collisionEvents)">
      <summary>Get the particle collision events for a GameObject. Returns the number of events written to the array.</summary>
      <remarks></remarks>
      <param name="go">The GameObject for which to retrieve collision events.</param>
      <param name="collisionEvents">Array to write collision events to.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.GetParticles(Particle[] particles)">
      <summary>Get the particles of this particle system. Returns the number of particles written to the input particle array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ParticleSystem.IsAlive(bool withChildren = true)">
      <summary>Does the system have any live particles (or will produce more)?</summary>
      <remarks></remarks>
      <param name="withChildren">Check all child particle systems as well.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Pause(bool withChildren = true)">
      <summary>Pauses playing the particle system.</summary>
      <remarks></remarks>
      <param name="withChildren">Pause all child particle systems as well.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Play(bool withChildren = true)">
      <summary>Plays the particle system.</summary>
      <remarks></remarks>
      <param name="withChildren">Play all child particle systems as well.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.SetParticles(Particle[] particles,int size)">
      <summary>Set the particles of this particle system. size is the number of particles that is set.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Simulate(float t,bool withChildren = true,bool restart = true)">
      <summary>Fastforwards the particle system by simulating particles over given period of time, then pauses it.</summary>
      <remarks></remarks>
      <param name="t">Time to fastforward the particle system.</param>
      <param name="withChildren">Fastforward all child particle systems as well.</param>
      <param name="restart">Restart and start from the beginning.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Stop(bool withChildren = true)">
      <summary>Stops playing the particle system.</summary>
      <remarks></remarks>
      <param name="withChildren">Stop all child particle systems as well.</param>
    </member>
    <member name="T:UnityEngine.PlayerPrefsException">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUIStyleState">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyleState.background">
      <summary>The background image used by GUI elements in this given state.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyleState.textColor">
      <summary>The text color used by GUI elements in this state.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.IAchievementDescription">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievementDescription.achievedDescription">
      <summary>Description when the achivement is completed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievementDescription.hidden">
      <summary>Hidden achievement are not shown in the list until the percentCompleted has been touched (even if it's 0.0).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievementDescription.id">
      <summary>Unique identifier for this achievement description.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievementDescription.image">
      <summary>Image representation of the achievement.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievementDescription.points">
      <summary>Point value of this achievement.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievementDescription.title">
      <summary>Human readable title.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievementDescription.unachievedDescription">
      <summary>Description when the achivement has not been completed.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Gizmos">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawCube(Vector3 center,Vector3 size)">
      <summary>Draw a solid box with center and size.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawFrustum(Vector3 center,float fov,float maxRange,float minRange,float aspect)">
      <summary>Draw a camera frustum using the currently set Gizmos.matrix for it's location and rotation.</summary>
      <remarks></remarks>
      <param name="center">The apex of the truncated pyramid.</param>
      <param name="fov">Vertical field of view (ie, the angle at the apex).</param>
      <param name="maxRange">Distance of the frustum's far plane.</param>
      <param name="minRange">Distance of the frustum's near plane.</param>
      <param name="aspect">Width/height ratio.</param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawGUITexture(Rect screenRect,Texture texture,Material mat = null)">
      <summary>Draw a texture in the scene.</summary>
      <remarks></remarks>
      <param name="screenRect">The size and position of the texture on the "screen" defined by the XY plane.</param>
      <param name="texture">The texture to be displayed.</param>
      <param name="mat">An optional material to apply the texture.</param>
      <param name="leftBorder">Inset from the rectangle's left edge.</param>
      <param name="rightBorder">Inset from the rectangle's right edge.</param>
      <param name="topBorder">Inset from the rectangle's top edge.</param>
      <param name="bottomBorder">Inset from the rectangle's bottom edge.</param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawIcon(Vector3 center,string name,bool allowScaling = true)">
      <summary>Draw an icon at a position in the scene view.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawLine(Vector3 from,Vector3 to)">
      <summary>Draws a line starting at from towards to.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawRay(Ray r)">
      <summary>Draws a ray starting at from to from + direction.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawSphere(Vector3 center,float radius)">
      <summary>Draws a solid sphere with center and radius.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawWireCube(Vector3 center,Vector3 size)">
      <summary>Draw a wireframe box with center and size.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawWireSphere(Vector3 center,float radius)">
      <summary>Draws a wireframe sphere with center and radius.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.TreePrototype">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TreePrototype.bendFactor">
      <summary>Bend factor of the tree prototype.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TreePrototype.prefab">
      <summary>Retrieves the actual GameObect used by the tree.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Rigidbody2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.angularDrag">
      <summary>Coefficient of angular drag.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.angularVelocity">
      <summary>Angular velocity in degrees per second.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.collisionDetectionMode">
      <summary>The method used by the physics engine to check if two objects have collided.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.drag">
      <summary>Coefficient of drag.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.fixedAngle">
      <summary>Should the rigidbody be prevented from rotating?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.gravityScale">
      <summary>The degree to which this object is affected by gravity.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.interpolation">
      <summary>Physics interpolation used between updates.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.isKinematic">
      <summary>Should this rigidbody be taken out of physics control?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.mass">
      <summary>Mass of the rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.sleepMode">
      <summary>The sleep state that the rigidbody will initially be in.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.velocity">
      <summary>Linear velocity of the rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.AddForce(Vector2 force)">
      <summary>Apply a force to the rigidbody.</summary>
      <remarks></remarks>
      <param name="force">Components of the force in the X and Y axes.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.AddForceAtPosition(Vector2 force,Vector2 position)">
      <summary>Apply a force at a given position in space.</summary>
      <remarks></remarks>
      <param name="force">Components of the force in the X and Y axes.</param>
      <param name="position">Position in world space to apply the force.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.AddTorque(float torque)">
      <summary>Apply a torque at the rigidbody's centre of mass.</summary>
      <remarks></remarks>
      <param name="torque">Value of torque to apply.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsAwake()">
      <summary>Is the rigidbody "awake"?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsSleeping()">
      <summary>Is the rigidbody "sleeping"?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.Sleep()">
      <summary>Make the rigidbody "sleep".</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.WakeUp()">
      <summary>Disables the "sleeping" state of a rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.MonoBehaviour">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MonoBehaviour.useGUILayout">
      <summary>Disabling this lets you skip the GUI layout phase.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.CancelInvoke()">
      <summary>Cancels all Invoke calls on this MonoBehaviour.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.CancelInvoke(string methodName)">
      <summary>Cancels all Invoke calls with name methodName on this behaviour.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.Invoke(string methodName,float time)">
      <summary>Invokes the method methodName in time seconds.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.InvokeRepeating(string methodName,float time,float repeatRate)">
      <summary>Invokes the method methodName in time seconds.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.IsInvoking(string methodName)">
      <summary>Is any invoke on methodName pending?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.IsInvoking()">
      <summary>Is any invoke pending on this MonoBehaviour?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.StartCoroutine(IEnumerator routine)">
      <summary>Starts a coroutine.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.StartCoroutine(string methodName,object value = null)">
      <summary>Starts a coroutine named methodName.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.StopAllCoroutines()">
      <summary>Stops all coroutines running on this behaviour.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.StopCoroutine(string methodName)">
      <summary>Stops all coroutines named methodName running on this behaviour.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.print(object message)">
      <summary>Logs message to the Unity Console. This function is identical to Debug.Log.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AndroidJavaObject">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.AndroidJavaObject(string className,&#13;&#10;params object[] args)">
      <summary>Construct an AndroidJavaObject based on the name of the class.</summary>
      <remarks></remarks>
      <param name="className"></param>
      <param name="args)"></param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.Call(string methodName,params object[] args)">
      <summary>Calls a Java method on an object (non-static).</summary>
      <remarks></remarks>
      <param name="methodName">Specifies which method to call.</param>
      <param name="args">An array of parameters passed to the method.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.Call(string methodName,params object[] args)">
      <summary>Call a Java method on an object.</summary>
      <remarks></remarks>
      <param name="methodName">Specifies which method to call.</param>
      <param name="args">An array of parameters passed to the method.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.CallStatic(string methodName,params object[] args)">
      <summary>Call a static Java method on a class.</summary>
      <remarks></remarks>
      <param name="methodName">Specifies which method to call.</param>
      <param name="args">An array of parameters passed to the method.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.CallStatic(string methodName,params object[] args)">
      <summary>Call a static Java method on a class.</summary>
      <remarks></remarks>
      <param name="methodName">Specifies which method to call.</param>
      <param name="args">An array of parameters passed to the method.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.Dispose()">
      <summary>IDisposable callback.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.Get(string fieldName)">
      <summary>Get the value of a field in an object (non-static).</summary>
      <remarks></remarks>
      <param name="fieldName">The name of the field (e.g. int counter; would have fieldName = "counter").</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.GetRawClass()">
      <summary>Retrieve the raw jclass pointer to the Java class.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.GetRawObject()">
      <summary>Retrieve the raw jobject pointer to the Java object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.GetStatic(string fieldName)">
      <summary>Get the value of a static field in an object type.</summary>
      <remarks></remarks>
      <param name="fieldName">The name of the field (e.g. &lt;i&gt;int counter;&lt;/i&gt; would have fieldName = "counter").</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.Set(string fieldName,FieldType val)">
      <summary>Set the value of a field in an object (non-static).</summary>
      <remarks></remarks>
      <param name="fieldName">The name of the field (e.g. int counter; would have fieldName = "counter").</param>
      <param name="val">The value to assign to the field. It has to match the field type.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.SetStatic(string fieldName,FieldType val)">
      <summary>Set the value of a static field in an object type.</summary>
      <remarks></remarks>
      <param name="fieldName">The name of the field (e.g. int counter; would have fieldName = "counter").</param>
      <param name="val">The value to assign to the field. It has to match the field type.</param>
    </member>
    <member name="T:UnityEngine.GUILayer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayer.HitTest(Vector3 screenPosition)">
      <summary>Get the GUI element at a specific screen position.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.StaticBatchingUtility">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.StaticBatchingUtility.Combine(GameObject staticBatchRoot)">
      <summary>Combine will prepare all children of the staticBatchRoot for static batching.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.StaticBatchingUtility.Combine(GameObject[] gos,GameObject staticBatchRoot)">
      <summary>Combine will prepare all gos for the static batching. staticBatchRoot will be treated as their parent.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AndroidJavaRunnable.AndroidJavaRunnable">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.LocationInfo">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocationInfo.altitude">
      <summary>Geographical device location altitude.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocationInfo.horizontalAccuracy">
      <summary>Horizontal accuracy of the location.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocationInfo.latitude">
      <summary>Geographical device location latitude.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocationInfo.longitude">
      <summary>Geographical device location latitude.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocationInfo.timestamp">
      <summary>Timestamp (in seconds since 1970) when location was last time updated.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocationInfo.verticalAccuracy">
      <summary>Vertical accuracy of the location.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Terrain">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.basemapDistance">
      <summary>Heightmap patches beyond basemap distance will use a precomputed low res basemap.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.castShadows">
      <summary>Should terrain cast shadows?.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.detailObjectDensity">
      <summary>Density of detail objects.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.detailObjectDistance">
      <summary>Detail objects will be displayed up to this distance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.heightmapMaximumLOD">
      <summary>Lets you essentially lower the heightmap resolution used for rendering.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.heightmapPixelError">
      <summary>An approximation of how many pixels the terrain will pop in the worst case when switching lod.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.lightmapIndex">
      <summary>The index of the lightmap applied to this renderer.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.terrainData">
      <summary>The Terrain Data that stores heightmaps, terrain textures, detail meshes and trees.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.treeBillboardDistance">
      <summary>Distance from the camera where trees will be rendered as billboards only.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.treeCrossFadeLength">
      <summary>Total distance delta that trees will use to transition from billboard orientation to mesh orientation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.treeDistance">
      <summary>The maximum distance at which trees are rendered.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Terrain.treeMaximumFullLODCount">
      <summary>Maximum number of trees rendered at full LOD.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Terrain.AddTreeInstance(TreeInstance instance)">
      <summary>Adds a tree instance to the terrain.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Terrain.Flush()">
      <summary>Flushes any change done in the terrain so it takes effect.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Terrain.GetPosition()">
      <summary>Get the position of the terrain.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Terrain.SampleHeight(Vector3 worldPosition)">
      <summary>Samples the height at the given position defined in world space, relative to the terrain space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Terrain.SetNeighbors(Terrain left,Terrain top,Terrain right,Terrain bottom)">
      <summary>Lets you setup the connection between neighboring Terrains.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Terrain.CreateTerrainGameObject(TerrainData assignTerrain)">
      <summary>Creates a Terrain including collider from TerrainData.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.LensFlare">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LensFlare.brightness">
      <summary>The strength of the flare.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LensFlare.color">
      <summary>The color of the flare.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LensFlare.fadeSpeed">
      <summary>The fade speed of the flare.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LensFlare.flare">
      <summary>The flare asset to use.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Toast">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Toast.activated">
      <summary>true if toast was activated by user.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Toast.arguments">
      <summary>Arguments to be passed for application when toast notification is activated.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Toast.dismissed">
      <summary>true if toast notification was dismissed (for any reason).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Toast.dismissedByUser">
      <summary>true if toast notification was explicitly dismissed by user.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WSA.Toast.Hide()">
      <summary>Hide displayed toast notification.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WSA.Toast.Show()">
      <summary>Show toast notification.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WSA.Toast.Create(string xml)">
      <summary>Create toast notification.</summary>
      <remarks></remarks>
      <param name="xml">XML document with tile data.</param>
      <param name="image">Uri to image to show on a toast, can be empty, in that case text-only notification will be shown.</param>
      <param name="text">A text to display on a toast notification.</param>
    </member>
    <member name="M:UnityEngine.WSA.Toast.GetTemplate(ToastTemplate templ)">
      <summary>Get template XML for toast notification.</summary>
      <remarks></remarks>
      <param name="templ">A template identifier.</param>
    </member>
    <member name="T:UnityEngine.Collision">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision.collider">
      <summary>The Collider we hit (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision.contacts">
      <summary>The contact points generated by the physics engine.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision.gameObject">
      <summary>The GameObject whose collider we are colliding with. (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision.relativeVelocity">
      <summary>The relative linear velocity of the two colliding objects (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision.rigidbody">
      <summary>The Rigidbody we hit (Read Only). This is null if the object we hit is a collider with no rigidbody attached.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision.transform">
      <summary>The Transform of the object we hit (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AssetBundleRequest">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AssetBundleRequest.asset">
      <summary>Asset object being loaded (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Light">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.alreadyLightmapped">
      <summary>Has the light already been lightmapped.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.areaSize">
      <summary>The size of the area light. Editor only.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.color">
      <summary>The color of the light.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.cookie">
      <summary>The cookie texture projected by the light.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.cookieSize">
      <summary>The size of a directional light's cookie.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.cullingMask">
      <summary>This is used to light certain objects in the scene selectively.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.flare">
      <summary>The flare asset to use for this light.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.intensity">
      <summary>The Intensity of a light is multiplied with the Light color.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.range">
      <summary>The range of the light.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.renderMode">
      <summary>How to render the light.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.shadowBias">
      <summary>Shadow mapping bias.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.shadows">
      <summary>How this light casts shadows?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.shadowSoftness">
      <summary>Softness of directional light's soft shadows.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.shadowSoftnessFade">
      <summary>Fadeout speed of directional light's soft shadows.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.shadowStrength">
      <summary>Strength of light's shadows.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.spotAngle">
      <summary>The angle of the light's spotlight cone in degrees.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Light.type">
      <summary>The type of the light.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.CollisionEvent">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CollisionEvent.collider">
      <summary>The Collider for the GameObject struck by the particles.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CollisionEvent.intersection">
      <summary>Intersection point of the collision in world coordinates.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CollisionEvent.normal">
      <summary>Geometry normal at the intersection point of the collision.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CollisionEvent.velocity">
      <summary>Incident velocity at the intersection point of the collision.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Behaviour">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Behaviour.enabled">
      <summary>Enabled Behaviours are Updated, disabled Behaviours are not.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.MaterialPropertyBlock">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.AddColor(string name,Color value)">
      <summary>Add a color material property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.AddFloat(string name,float value)">
      <summary>Add a float material property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.AddMatrix(string name,Matrix4x4 value)">
      <summary>Add a matrix material property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.AddTexture(string name,Texture value)">
      <summary>Add a texture material property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.AddVector(string name,Vector4 value)">
      <summary>Add a vector material property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.Clear()">
      <summary>Clear material property values.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetFloat(string name)">
      <summary>Get a float from the property block.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetMatrix(string name)">
      <summary>Get a matrix from the property block.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetTexture(string name)">
      <summary>Get a texture from the property block.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetVector(string name)">
      <summary>Get a vector from the property block.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.BlackBerry">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerSettings.BlackBerry.HasCameraPermissions()">
      <summary>Returns true when camera access has been requested in the player settings.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerSettings.BlackBerry.HasGPSPermissions()">
      <summary>Returns true when GPS permission has been requested in the player settings.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerSettings.BlackBerry.HasIdentificationPermissions()">
      <summary>Returns true when access the device's Unique identifier has been requested.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerSettings.BlackBerry.HasMicrophonePermissions()">
      <summary>Returns true if microphone access has been requested in player settings.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerSettings.BlackBerry.HasSharedPermissions()">
      <summary>Returns true if shared permissions are requested in player settings.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerSettings.BlackBerry.SetCameraPermissions(bool enable)">
      <summary>Enable or disable camera permissions. (Will prompt user for access).</summary>
      <remarks></remarks>
      <param name="enable">New permission value.</param>
    </member>
    <member name="M:UnityEngine.PlayerSettings.BlackBerry.SetGPSPermissions(bool enable)">
      <summary>Enable / Disable access to the device GPS. (Will prompt for user for access).</summary>
      <remarks></remarks>
      <param name="enable">New permission value.</param>
    </member>
    <member name="M:UnityEngine.PlayerSettings.BlackBerry.SetIdentificationPermissions(bool enable)">
      <summary>Enable / Disable device identification permission. (Will prompt user for access).</summary>
      <remarks></remarks>
      <param name="enable">New permission value.</param>
    </member>
    <member name="M:UnityEngine.PlayerSettings.BlackBerry.SetMicrophonePermissions(bool enable)">
      <summary>Enable / Disable microphone permission level. (Will prompt user for access).</summary>
      <remarks></remarks>
      <param name="enable">New permission value.</param>
    </member>
    <member name="M:UnityEngine.PlayerSettings.BlackBerry.SetSharedPermissions(bool enable)">
      <summary>Enable / Disable access to QNX shared folders (accesible via the rst://drive).</summary>
      <remarks></remarks>
      <param name="enable">New permission value.</param>
    </member>
    <member name="T:UnityEngine.MasterServer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MasterServer.ClearHostList()">
      <summary>Clear the host list which was received by MasterServer.PollHostList.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MasterServer.PollHostList()">
      <summary>Check for the latest host list received by using MasterServer.RequestHostList.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MasterServer.RegisterHost(string gameTypeName,string gameName,string comment = &quot;&quot;)">
      <summary>Register this server on the master server.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MasterServer.RequestHostList(string gameTypeName)">
      <summary>Request a host list from the master server.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MasterServer.UnregisterHost()">
      <summary>Unregister this server from the master server.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.RenderBuffer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.WaitForFixedUpdate">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SphereCollider">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SphereCollider.center">
      <summary>The center of the sphere, measured in the object's local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SphereCollider.radius">
      <summary>The radius of the sphere, measured in the object's local space.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.WebCamDevice">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WebCamDevice.isFrontFacing">
      <summary>True if camera faces the same direction a screen does, false otherwise.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WebCamDevice.name">
      <summary>A human-readable name of the device. Varies across different systems.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GameCenterPlatform">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.GameCenter.GameCenterPlatform.ResetAllAchievements(Action&lt;bool&gt; callback)">
      <summary>Reset all the achievements for the local user.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.GameCenter.GameCenterPlatform.ShowDefaultAchievementCompletionBanner(bool value)">
      <summary>Show the default iOS banner when achievements are completed.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.GameCenter.GameCenterPlatform.ShowLeaderboardUI(string leaderboardID,TimeScope timeScope)">
      <summary>Show the leaderboard UI with a specific leaderboard shown initially with a specific time scope selected.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.RemoteNotification">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RemoteNotification.alertBody">
      <summary>The message displayed in the notification alert. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RemoteNotification.applicationIconBadgeNumber">
      <summary>The number to display as the application's icon badge. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RemoteNotification.hasAction">
      <summary>A boolean value that controls whether the alert action is visible or not. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RemoteNotification.soundName">
      <summary>The name of the sound file to play when an alert is displayed. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RemoteNotification.userInfo">
      <summary>A dictionary for passing custom information to the notified application. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.IScore">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IScore.date">
      <summary>The date the score was achieved.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IScore.formattedValue">
      <summary>The correctly formatted value of the score, like X points or X kills.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IScore.leaderboardID">
      <summary>The ID of the leaderboard this score belongs to.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IScore.rank">
      <summary>The rank or position of the score in the leaderboard.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IScore.userID">
      <summary>The user who owns this score.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IScore.value">
      <summary>The score value achieved.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.IScore.ReportScore(Action&lt;bool&gt; callback)">
      <summary>Report this score instance.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Camera">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.actualRenderingPath">
      <summary>Actually used rendering path (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.aspect">
      <summary>The aspect ratio (width divided by height).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.backgroundColor">
      <summary>The color with which the screen will be cleared.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.cameraToWorldMatrix">
      <summary>Matrix that transforms from camera space to world space (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.clearFlags">
      <summary>How the camera clears the background.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.cullingMask">
      <summary>This is used to render parts of the scene selectively.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.depth">
      <summary>Camera's depth in the camera rendering order.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.depthTextureMode">
      <summary>How and if camera generates a depth texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.eventMask">
      <summary>Mask to select which layers can trigger events on the camera.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.farClipPlane">
      <summary>The far clipping plane distance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.fieldOfView">
      <summary>The field of view of the camera in degrees.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.hdr">
      <summary>High dynamic range rendering.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.layerCullDistances">
      <summary>Per-layer culling distances.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.layerCullSpherical">
      <summary>How to perform per-layer culling for a Camera.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.nearClipPlane">
      <summary>The near clipping plane distance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.orthographic">
      <summary>Is the camera orthographic (true) or perspective (false)?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.orthographicSize">
      <summary>Camera's half-size when in orthographic mode.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.pixelHeight">
      <summary>How tall is the camera in pixels (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.pixelRect">
      <summary>Where on the screen is the camera rendered in pixel coordinates.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.pixelWidth">
      <summary>How wide is the camera in pixels (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.projectionMatrix">
      <summary>Set a custom projection matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.rect">
      <summary>Where on the screen is the camera rendered in normalized coordinates.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.renderingPath">
      <summary>Rendering path.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.targetTexture">
      <summary>Destination render texture (Unity Pro only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.transparencySortMode">
      <summary>Transparent object sorting mode.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.useOcclusionCulling">
      <summary>Whether or not the Camera will use occlusion culling during rendering.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.velocity">
      <summary>Get the world-space speed of the camera (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Camera.worldToCameraMatrix">
      <summary>Matrix that transforms from world to camera space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.CopyFrom(Camera other)">
      <summary>Makes this camera's settings match other camera.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.Render()">
      <summary>Render the camera manually.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.RenderToCubemap(Cubemap cubemap,int faceMask = 63)">
      <summary>Render into a static cubemap from this camera.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.RenderToCubemap(RenderTexture cubemap,int faceMask = 63)">
      <summary>Render into a cubemap from this camera.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.RenderWithShader(Shader shader,string replacementTag)">
      <summary>Render the camera with shader replacement.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.ResetAspect()">
      <summary>Revert the aspect ratio to the screen's aspect ratio.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.ResetProjectionMatrix()">
      <summary>Make the projection reflect normal camera's parameters.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.ResetReplacementShader()">
      <summary>Remove shader replacement from camera.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.ResetWorldToCameraMatrix()">
      <summary>Make the rendering position reflect the camera's position in the scene.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.ScreenPointToRay(Vector3 position)">
      <summary>Returns a ray going from camera through a screen point.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.ScreenToViewportPoint(Vector3 position)">
      <summary>Transforms position from screen space into viewport space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.ScreenToWorldPoint(Vector3 position)">
      <summary>Transforms position from screen space into world space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.SetReplacementShader(Shader shader,string replacementTag)">
      <summary>Make the camera render with shader replacement.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.SetTargetBuffers(RenderBuffer colorBuffer,RenderBuffer depthBuffer)">
      <summary>Sets the Camera to render to the chosen buffers of one or more RenderTextures.</summary>
      <remarks></remarks>
      <param name="colorBuffer">The RenderBuffer to which color information will be rendered.</param>
      <param name="depthBuffer">The RenderBuffer to which depth information will be rendered.</param>
    </member>
    <member name="M:UnityEngine.Camera.ViewportPointToRay(Vector3 position)">
      <summary>Returns a ray going from camera through a viewport point.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.ViewportToScreenPoint(Vector3 position)">
      <summary>Transforms position from viewport space into screen space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.ViewportToWorldPoint(Vector3 position)">
      <summary>Transforms position from viewport space into world space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.WorldToScreenPoint(Vector3 position)">
      <summary>Transforms position from world space into screen space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Camera.WorldToViewportPoint(Vector3 position)">
      <summary>Transforms position from world space into viewport space.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GeometryUtility">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GeometryUtility.CalculateFrustumPlanes(Camera camera)">
      <summary>Calculates frustum planes.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GeometryUtility.CalculateFrustumPlanes(Matrix4x4 worldToProjectionMatrix)">
      <summary>Calculates frustum planes.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GeometryUtility.TestPlanesAABB(Plane[] planes,Bounds bounds)">
      <summary>Returns true if bounds are inside the plane array.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AssetBundle">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AssetBundle.mainAsset">
      <summary>Main asset that was supplied when building the asset bundle (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AssetBundle.Contains(string name)">
      <summary>Check if an AssetBundle contains a specific object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AssetBundle.Load(string name)">
      <summary>Loads object with name from the bundle.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AssetBundle.Load(string name,Type type)">
      <summary>Loads object with name of a given type from the bundle.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAll(Type type)">
      <summary>Loads all objects contained in the asset bundle that inherit from type.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAll()">
      <summary>Loads all objects contained in the asset bundle.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAsync(string name,Type type)">
      <summary>Asynchronously loads object with name of a given type from the bundle.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AssetBundle.Unload(bool unloadAllLoadedObjects)">
      <summary>Unloads all assets in the bundle.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AssetBundle.CreateFromFile(string path)">
      <summary>Loads an asset bundle from a disk.</summary>
      <remarks></remarks>
      <param name="path">Path of the file on disk&#13;
See Also: WWW.assetBundle, WWW.LoadFromCacheOrDownload.</param>
    </member>
    <member name="M:UnityEngine.AssetBundle.CreateFromMemory(byte[] binary)">
      <summary>Asynchronously create an AssetBundle from a memory region.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ADBannerView">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.ADBannerView(Type type,&#13;&#10;Layout layout)">
      <summary>Creates a banner view with given type and auto-layout params.</summary>
      <remarks></remarks>
      <param name="type"></param>
      <param name="layout)"></param>
    </member>
    <member name="P:UnityEngine.ADBannerView.layout">
      <summary>Banner layout.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ADBannerView.loaded">
      <summary>Checks if banner contents are loaded.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ADBannerView.position">
      <summary>The position of the banner view.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ADBannerView.size">
      <summary>The size of the banner view.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ADBannerView.visible">
      <summary>Banner visibility. Initially banner is not visible.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ADBannerView.IsAvailable(Type type)">
      <summary>Checks if the banner type is available (e.g. MediumRect is available only starting with ios6).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Quaternion">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Quaternion(float x,&#13;&#10;float y,&#13;&#10;float z,&#13;&#10;float w)">
      <summary>Constructs new Quaternion with given x,y,z,w components.</summary>
      <remarks></remarks>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
      <param name="w)"></param>
    </member>
    <member name="P:UnityEngine.Quaternion.eulerAngles">
      <summary>Returns the euler angle representation of the rotation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Quaternion.this[int]">
      <summary>Access the x, y, z, w components using [0], [1], [2], [3] respectively.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Quaternion.w">
      <summary>W component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Quaternion.x">
      <summary>X component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Quaternion.y">
      <summary>Y component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Quaternion.z">
      <summary>Z component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.Set(float new_x,float new_y,float new_z,float new_w)">
      <summary>Set x, y, z and w components of an existing Quaternion.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.SetFromToRotation(Vector3 fromDirection,Vector3 toDirection)">
      <summary>Creates a rotation which rotates from fromDirection to toDirection.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.SetLookRotation(Vector3 view,Vector3 up = Vector3.up)">
      <summary>Creates a rotation with the specified forward and upwards directions.</summary>
      <remarks></remarks>
      <param name="view">The direction to look in.</param>
      <param name="up">The vector that defines in which direction up is.</param>
    </member>
    <member name="M:UnityEngine.Quaternion.ToAngleAxis(float angle,Vector3 axis)">
      <summary>Converts a rotation to angle-axis representation.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.ToString()">
      <summary>Returns a nicely formatted string of the Quaternion.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.Angle(Quaternion a,Quaternion b)">
      <summary>Returns the angle in degrees between two rotations a and b.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.AngleAxis(float angle,Vector3 axis)">
      <summary>Creates a rotation which rotates angle degrees around axis.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.Dot(Quaternion a,Quaternion b)">
      <summary>The dot product between two rotations.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.Euler(float x,float y,float z)">
      <summary>Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.Euler(Vector3 euler)">
      <summary>Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.FromToRotation(Vector3 fromDirection,Vector3 toDirection)">
      <summary>Creates a rotation which rotates from fromDirection to toDirection.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.Inverse(Quaternion rotation)">
      <summary>Returns the Inverse of rotation.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.Lerp(Quaternion from,Quaternion to,float t)">
      <summary>Interpolates between from and to by t and normalizes the result afterwards.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.LookRotation(Vector3 forward,Vector3 upwards = Vector3.up)">
      <summary>Creates a rotation with the specified forward and upwards directions.</summary>
      <remarks></remarks>
      <param name="forward">The direction to look in.</param>
      <param name="upwards">The vector that defines in which direction up is.</param>
    </member>
    <member name="M:UnityEngine.Quaternion.RotateTowards(Quaternion from,Quaternion to,float maxDegreesDelta)">
      <summary>Rotates a rotation from towards to.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Quaternion.Slerp(Quaternion from,Quaternion to,float t)">
      <summary>Spherically interpolates between from and to by t.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Texture3D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Texture3D(int width,&#13;&#10;int height,&#13;&#10;int depth,&#13;&#10;TextureFormat format,&#13;&#10;bool mipmap)">
      <summary>Create a new empty 3D Texture.</summary>
      <remarks></remarks>
      <param name="width"></param>
      <param name="height"></param>
      <param name="depth"></param>
      <param name="format"></param>
      <param name="mipmap)"></param>
    </member>
    <member name="P:UnityEngine.Texture3D.depth">
      <summary>The depth of the texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Texture3D.format">
      <summary>The format of the pixel data in the texture (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture3D.Apply(bool updateMipmaps = true)">
      <summary>Actually apply all previous SetPixels changes.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture3D.GetPixels(int miplevel = 0)">
      <summary>This function returns an array of pixel colors representing one mip level of the 3D texture.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.NetworkMessageInfo">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkMessageInfo.networkView">
      <summary>The NetworkView who sent this message.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkMessageInfo.sender">
      <summary>The player who sent this network message (owner).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkMessageInfo.timestamp">
      <summary>The time stamp when the Message was sent in seconds.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.NavMeshAgent">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.acceleration">
      <summary>The maximum acceleration of an agent as it follows a path, given in units / sec^2.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.angularSpeed">
      <summary>Maximum turning speed in (deg/s) while following a path.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.autoBraking">
      <summary>Should the agent brake automatically to avoid overshooting the destination point?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.autoRepath">
      <summary>Should the agent attempt to acquire a new path if the existing path becomes invalid?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.autoTraverseOffMeshLink">
      <summary>Should the agent move via OffMeshLinks automatically?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.avoidancePriority">
      <summary>The avoidance priority level.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.baseOffset">
      <summary>The relative vertical displacement of the owning GameObject.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.currentOffMeshLinkData">
      <summary>The current OffMeshLinkData.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.desiredVelocity">
      <summary>The desired velocity of the agent including any potential contribution from avoidance. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.destination">
      <summary>Destination point for the agent to navigate towards.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.hasPath">
      <summary>Does the agent currently have a path? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.height">
      <summary>The height of the agent for purposes of passing under obstacles, etc.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.isOnOffMeshLink">
      <summary>Is the agent currently positioned on an OffMeshLink? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.isPathStale">
      <summary>Is the current path stale. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.nextOffMeshLinkData">
      <summary>The next OffMeshLinkData on the current path.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.nextPosition">
      <summary>The next position on the path.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.obstacleAvoidanceType">
      <summary>The level of quality of avoidance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.path">
      <summary>Property to get and set the current path.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.pathPending">
      <summary>Is a path in the process of being computed but not yet ready? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.pathStatus">
      <summary>The status of the current path (complete, partial or invalid).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.radius">
      <summary>The avoidance radius for the agent.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.remainingDistance">
      <summary>The distance between the agent's position and the destination on the current path. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.speed">
      <summary>Maximum movement speed when following a path.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.steeringTarget">
      <summary>The current steering target - usually the next corner or end point of the current path. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.stoppingDistance">
      <summary>Stop within this distance from the target position.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.updatePosition">
      <summary>Should the agent update the transform position?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.updateRotation">
      <summary>Should the agent update the transform orientation?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.velocity">
      <summary>The current velocity of the NavMeshAgent component.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshAgent.walkableMask">
      <summary>Specifies which NavMesh layers are passable (bitfield). Changing walkableMask will make the path stale (see isPathStale).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.ActivateCurrentOffMeshLink(bool activated)">
      <summary>Enables or disables the current off-mesh link.</summary>
      <remarks></remarks>
      <param name="activated">Is the link activated?</param>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.CalculatePath(Vector3 targetPosition,NavMeshPath path)">
      <summary>Calculate a path to a specified point and store the resulting path.</summary>
      <remarks></remarks>
      <param name="targetPosition">The final position of the path requested.</param>
      <param name="path">The resulting path.</param>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.CompleteOffMeshLink()">
      <summary>Follow the current OffMeshLink.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.FindClosestEdge(NavMeshHit hit)">
      <summary>Locate the closest NavMesh edge.</summary>
      <remarks></remarks>
      <param name="hit">Holds the properties of the resulting location.</param>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.GetLayerCost(int layer)">
      <summary>Gets the cost for crossing ground of a particular type.</summary>
      <remarks></remarks>
      <param name="layer">Layer index.</param>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.Move(Vector3 offset)">
      <summary>Apply relative movement to current position.</summary>
      <remarks></remarks>
      <param name="offset">The relative movement vector.</param>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.Raycast(Vector3 targetPosition,NavMeshHit hit)">
      <summary>Trace a straight path towards a target postion in the NavMesh without moving the agent.</summary>
      <remarks></remarks>
      <param name="targetPosition">The desired end position of movement.</param>
      <param name="hit">Properties of the obstacle detected by the ray (if any).</param>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.ResetPath()">
      <summary>Clears the current path.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.Resume()">
      <summary>Resumes the movement along the current path after a pause.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.SamplePathPosition(int passableMask,float maxDistance,NavMeshHit hit)">
      <summary>Sample a position along the current path.</summary>
      <remarks></remarks>
      <param name="passableMask">A mask specifying which NavMesh layers can be passed when tracing the path.</param>
      <param name="maxDistance">Terminate scanning the path at this distance.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.SetDestination(Vector3 target)">
      <summary>Sets or updates the destination thus triggering the calculation for a new path.</summary>
      <remarks></remarks>
      <param name="target">The target point to navigate to.</param>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.SetLayerCost(int layer,float cost)">
      <summary>Sets the cost for traversing over geometry of the layer type.</summary>
      <remarks></remarks>
      <param name="layer">Layer index.</param>
      <param name="cost">New cost for the specified layer.</param>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.SetPath(NavMeshPath path)">
      <summary>Assign a new path to this agent.</summary>
      <remarks></remarks>
      <param name="path">New path to follow.</param>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.Stop(bool stopUpdates = false)">
      <summary>Stop movement of this agent along its current path.</summary>
      <remarks></remarks>
      <param name="stopUpdates">If true, the GameObject is stopped immediately and not affected by the avoidance system.&#13;
If false, the NavMeshAgent controls the deceleration.</param>
    </member>
    <member name="M:UnityEngine.NavMeshAgent.Warp(Vector3 newPosition)">
      <summary>Warps agent to the provided position.</summary>
      <remarks></remarks>
      <param name="newPosition">New position to warp the agent to.</param>
    </member>
    <member name="T:UnityEngine.ADInterstitialAd">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.ADInterstitialAd()">
      <summary>Creates an interstitial ad.</summary>
      <remarks></remarks>
      <param name="ADInterstitialAd()"></param>
    </member>
    <member name="P:UnityEngine.ADInterstitialAd.loaded">
      <summary>Has the interstitial ad object downloaded an advertisement? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ADInterstitialAd.ReloadAd()">
      <summary>Reload advertisement.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ADInterstitialAd.Show()">
      <summary>Shows full-screen advertisement to user.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUIElement">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIElement.GetScreenRect(Camera camera = null)">
      <summary>Returns bounding rectangle of GUIElement in screen coordinates.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIElement.HitTest(Vector3 screenPosition,Camera camera = null)">
      <summary>Is a point on screen inside the element.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AudioHighPassFilter">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioHighPassFilter.cutoffFrequency">
      <summary>Highpass cutoff frequency in hz. 10.0 to 22000.0. Default = 5000.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioHighPassFilter.highpassResonaceQ">
      <summary>Determines how much the filter's self-resonance isdampened.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.NotificationServices">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NotificationServices.CancelAllLocalNotifications()">
      <summary>Cancels the delivery of all scheduled local notifications.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NotificationServices.CancelLocalNotification(LocalNotification notification)">
      <summary>Cancels the delivery of the specified scheduled local notification.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NotificationServices.ClearLocalNotifications()">
      <summary>Discards of all received local notifications.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NotificationServices.ClearRemoteNotifications()">
      <summary>Discards of all received remote notifications.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NotificationServices.GetLocalNotification(int index)">
      <summary>Returns an object representing a specific local notification. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NotificationServices.GetRemoteNotification(int index)">
      <summary>Returns an object representing a specific remote notification. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NotificationServices.PresentLocalNotificationNow(LocalNotification notification)">
      <summary>Presents a local notification immediately.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NotificationServices.RegisterForRemoteNotificationTypes(RemoteNotificationType notificationTypes)">
      <summary>Register to receive remote notifications of the specified types from a provider via Apple Push Service.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NotificationServices.ScheduleLocalNotification(LocalNotification notification)">
      <summary>Schedules a local notification.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NotificationServices.UnregisterForRemoteNotifications()">
      <summary>Unregister for remote notifications.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AudioEchoFilter">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.decayRatio">
      <summary>Echo decay per delay. 0 to 1. 1.0 = No decay, 0.0 = total decay (i.e. simple 1 line delay). Default = 0.5.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.delay">
      <summary>Echo delay in ms. 10 to 5000. Default = 500.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.dryMix">
      <summary>Volume of original signal to pass to output. 0.0 to 1.0. Default = 1.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.wetMix">
      <summary>Volume of echo signal to pass to output. 0.0 to 1.0. Default = 1.0.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.TouchScreenKeyboard">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.active">
      <summary>Is the keyboard visible or sliding into the position on the screen?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.done">
      <summary>Specifies if input process was finished. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.text">
      <summary>Returns the text displayed by the input field of the keyboard.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.wasCanceled">
      <summary>Specifies if input process was canceled. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TouchScreenKeyboard.Open(string text,TouchScreenKeyboardType keyboardType = TouchScreenKeyboardType.Default,bool autocorrection = true,bool multiline = false,bool secure = false,bool alert = false,string textPlaceholder = &quot;&quot;)">
      <summary>Opens the native keyboard provided by OS on the screen.</summary>
      <remarks></remarks>
      <param name="text">Text to edit.</param>
      <param name="keyboardType">Type of keyboard (eg, any text, numbers only, etc).</param>
      <param name="autocorrection">Is autocorrection applied?</param>
      <param name="multiline">Can more than one line of text be entered?</param>
      <param name="secure">Is the text masked (for passwords, etc)?</param>
      <param name="alert">Is the keyboard opened in alert mode?</param>
      <param name="textPlaceholder">Text to be used if no other text is present.</param>
    </member>
    <member name="T:UnityEngine.LOD">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.LOD(float screenRelativeTransitionHeight,&#13;&#10;Renderer[] renderers)">
      <summary>Construct a LOD.</summary>
      <remarks></remarks>
      <param name="screenRelativeTransitionHeight"></param>
      <param name="renderers)"></param>
    </member>
    <member name="P:UnityEngine.LOD.renderers">
      <summary>List of renderers for this LOD level.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LOD.screenRelativeTransitionHeight">
      <summary>The screen relative height to use for the transition [0-1].</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.OcclusionArea">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OcclusionArea.center">
      <summary>Center of the occlusion area relative to the transform.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OcclusionArea.size">
      <summary>Size that the occlusion area will have.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUIContent">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.GUIContent()">
      <summary>Constructor for GUIContent in all shapes and sizes.</summary>
      <remarks></remarks>
      <param name="GUIContent()"></param>
    </member>
    <member name="C:UnityEngine.GUIContent(string text)">
      <summary>Build a GUIContent object containing only text.</summary>
      <remarks></remarks>
      <param name="text)"></param>
    </member>
    <member name="C:UnityEngine.GUIContent(Texture image)">
      <summary>Build a GUIContent object containing only an image.</summary>
      <remarks></remarks>
      <param name="image)"></param>
    </member>
    <member name="C:UnityEngine.GUIContent(string text,&#13;&#10;Texture image)">
      <summary>Build a GUIContent object containing both text and an image.</summary>
      <remarks></remarks>
      <param name="text"></param>
      <param name="image)"></param>
    </member>
    <member name="C:UnityEngine.GUIContent(string text,&#13;&#10;string tooltip)">
      <summary>Build a GUIContent containing some text. When the user hovers the mouse over it, the global GUI.tooltip is set to the tooltip.</summary>
      <remarks></remarks>
      <param name="text"></param>
      <param name="tooltip)"></param>
    </member>
    <member name="C:UnityEngine.GUIContent(Texture image,&#13;&#10;string tooltip)">
      <summary>Build a GUIContent containing an image. When the user hovers the mouse over it, the global GUI.tooltip is set to the tooltip.</summary>
      <remarks></remarks>
      <param name="image"></param>
      <param name="tooltip)"></param>
    </member>
    <member name="C:UnityEngine.GUIContent(string text,&#13;&#10;Texture image,&#13;&#10;string tooltip)">
      <summary>Build a GUIContent that contains both text, an image and has a tooltip defined. When the user hovers the mouse over it, the global GUI.tooltip is set to the tooltip.</summary>
      <remarks></remarks>
      <param name="text"></param>
      <param name="image"></param>
      <param name="tooltip)"></param>
    </member>
    <member name="C:UnityEngine.GUIContent(GUIContent src)">
      <summary>Build a GUIContent as a copy of another GUIContent.</summary>
      <remarks></remarks>
      <param name="src)"></param>
    </member>
    <member name="P:UnityEngine.GUIContent.image">
      <summary>The icon image contained.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIContent.text">
      <summary>The text contained.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIContent.tooltip">
      <summary>The tooltip of this element.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SkinnedCloth">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkinnedCloth.coefficients">
      <summary>The cloth skinning coefficients used to set up how the cloth interacts with the skinned mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkinnedCloth.worldAccelerationScale">
      <summary>How much world-space acceleration of the character will affect cloth vertices.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkinnedCloth.worldVelocityScale">
      <summary>How much world-space movement of the character will affect cloth vertices.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SkinnedCloth.SetEnabledFading(bool enabled,float interpolationTime = 0.5f)">
      <summary>Fade the cloth simulation in or out, and enabled or disable the SkinnedCloth.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Microphone">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Microphone.End(string deviceName)">
      <summary>Stops recording.</summary>
      <remarks></remarks>
      <param name="deviceName">The name of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.GetDeviceCaps(string deviceName,int minFreq,int maxFreq)">
      <summary>Get the frequency capabilities of a device.</summary>
      <remarks></remarks>
      <param name="deviceName">The name of the device.</param>
      <param name="minFreq">Returns the minimum sampling frequency of the device.</param>
      <param name="maxFreq">Returns the maximum sampling frequency of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.GetPosition(string deviceName)">
      <summary>Get the position in samples of the recording.</summary>
      <remarks></remarks>
      <param name="deviceName">The name of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.IsRecording(string deviceName)">
      <summary>Query if a device is currently recording.</summary>
      <remarks></remarks>
      <param name="deviceName">The name of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.Start(string deviceName,bool loop,int lengthSec,int frequency)">
      <summary>Start Recording with device.</summary>
      <remarks></remarks>
      <param name="deviceName">The name of the device.</param>
      <param name="lengthSec">Is the length of the AudioClip produced by the recording.</param>
      <param name="loop">Indicates whether the recording should continue recording if lengthSec is reached, and wrap around and record from the beginning of the AudioClip.</param>
      <param name="frequency">The sample rate of the AudioClip produced by the recording.</param>
    </member>
    <member name="T:UnityEngine.Bounds">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Bounds(Vector3 center,&#13;&#10;Vector3 size)">
      <summary>Creates new Bounds with a given center and total size. Bound extents will be half the given size.</summary>
      <remarks></remarks>
      <param name="center"></param>
      <param name="size)"></param>
    </member>
    <member name="P:UnityEngine.Bounds.center">
      <summary>The center of the bounding box.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Bounds.extents">
      <summary>The extents of the box. This is always half of the size.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Bounds.max">
      <summary>The maximal point of the box. This is always equal to center+extents.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Bounds.min">
      <summary>The minimal point of the box. This is always equal to center-extents.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Bounds.size">
      <summary>The total size of the box. This is always twice as large as the extents.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Bounds.Contains(Vector3 point)">
      <summary>Is point contained in the bounding box?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Bounds.Encapsulate(Vector3 point)">
      <summary>Grows the Bounds to include the point.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Bounds.Encapsulate(Bounds bounds)">
      <summary>Grow the bounds to encapsulate the bounds.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Bounds.Expand(float amount)">
      <summary>Expand the bounds by increasing its size by amount along each side.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Bounds.Expand(Vector3 amount)">
      <summary>Expand the bounds by increasing its size by amount along each side.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Bounds.IntersectRay(Ray ray)">
      <summary>Does ray intersect this bounding box?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Bounds.IntersectRay(Ray ray,float distance)">
      <summary>Does ray intersect this bounding box?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Bounds.Intersects(Bounds bounds)">
      <summary>Does another bounding box intersect with this bounding box?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Bounds.SetMinMax(Vector3 min,Vector3 max)">
      <summary>Sets the bounds to the min and max value of the box.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Bounds.SqrDistance(Vector3 point)">
      <summary>The smallest squared distance between the point and this bounding box.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Bounds.ToString()">
      <summary>Returns a nicely formatted string for the bounds.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Event">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.alt">
      <summary>Is Alt/Option key held down? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.button">
      <summary>Which mouse button was pressed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.capsLock">
      <summary>Is Caps Lock on? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.character">
      <summary>The character typed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.clickCount">
      <summary>How many consecutive mouse clicks have we received.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.command">
      <summary>Is Command/Windows key held down? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.commandName">
      <summary>The name of an ExecuteCommand or ValidateCommand Event.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.control">
      <summary>Is Control key held down? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.delta">
      <summary>The relative movement of the mouse compared to last event.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.functionKey">
      <summary>Is the current keypress a function key? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.isKey">
      <summary>Is this event a keyboard event? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.isMouse">
      <summary>Is this event a mouse event? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.keyCode">
      <summary>The raw key code for keyboard events.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.modifiers">
      <summary>Which modifier keys are held down.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.mousePosition">
      <summary>The mouse position.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.numeric">
      <summary>Is the current keypress on the numeric keyboard? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.shift">
      <summary>Is Shift held down? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Event.type">
      <summary>The type of event.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Event.GetTypeForControl(int controlID)">
      <summary>Get a filtered event type for a given control ID.</summary>
      <remarks></remarks>
      <param name="controlID">The ID of the control you are querying from.</param>
    </member>
    <member name="M:UnityEngine.Event.Use()">
      <summary>Use this event.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Event.KeyboardEvent(string key)">
      <summary>Create a keyboard event.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AsyncOperation">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AsyncOperation.allowSceneActivation">
      <summary>Allow scenes to be activated as soon as it is ready.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AsyncOperation.isDone">
      <summary>Has the operation finished? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AsyncOperation.priority">
      <summary>Priority lets you tweak in which order async operation calls will be performed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AsyncOperation.progress">
      <summary>What's the operation's progress. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Cloth">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Cloth.bendingStiffness">
      <summary>Bending stiffness of the cloth.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Cloth.damping">
      <summary>Damp cloth motion.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Cloth.enabled">
      <summary>Is this cloth enabled?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Cloth.externalAcceleration">
      <summary>A constant, external acceleration applied to the cloth.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Cloth.normals">
      <summary>The current normals of the cloth object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Cloth.randomAcceleration">
      <summary>A random, external acceleration applied to the cloth.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Cloth.selfCollision">
      <summary>Will the cloth collide with itself?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Cloth.stretchingStiffness">
      <summary>Stretching stiffness of the cloth.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Cloth.thickness">
      <summary>The thickness of the cloth surface.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Cloth.useGravity">
      <summary>Should gravity affect the cloth simulation?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Cloth.vertices">
      <summary>The current vertex positions of the cloth object.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUIStyle">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.GUIStyle()">
      <summary>Constructor for empty GUIStyle.</summary>
      <remarks></remarks>
      <param name="GUIStyle()"></param>
    </member>
    <member name="C:UnityEngine.GUIStyle(GUIStyle other)">
      <summary>Constructs GUIStyle identical to given other GUIStyle.</summary>
      <remarks></remarks>
      <param name="other)"></param>
    </member>
    <member name="P:UnityEngine.GUIStyle.active">
      <summary>Rendering settings for when the control is pressed down.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.alignment">
      <summary>Text alignment.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.border">
      <summary>The borders of all background images.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.clipping">
      <summary>What to do when the contents to be rendered is too large to fit within the area given.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.contentOffset">
      <summary>Pixel offset to apply to the content of this GUIstyle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.fixedHeight">
      <summary>If non-0, any GUI elements rendered with this style will have the height specified here.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.fixedWidth">
      <summary>If non-0, any GUI elements rendered with this style will have the width specified here.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.focused">
      <summary>Rendering settings for when the element has keyboard focus.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.font">
      <summary>The font to use for rendering. If null, the default font for the current GUISkin is used instead.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.fontSize">
      <summary>The font size to use (for dynamic fonts).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.fontStyle">
      <summary>The font style to use (for dynamic fonts).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.hover">
      <summary>Rendering settings for when the mouse is hovering over the control.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.imagePosition">
      <summary>How image and text of the GUIContent is combined.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.lineHeight">
      <summary>The height of one line of text with this style, measured in pixels. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.margin">
      <summary>The margins between elements rendered in this style and any other GUI elements.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.name">
      <summary>The name of this GUIStyle. Used for getting them based on name.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.normal">
      <summary>Rendering settings for when the component is displayed normally.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.onActive">
      <summary>Rendering settings for when the element is turned on and pressed down.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.onFocused">
      <summary>Rendering settings for when the element has keyboard and is turned on.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.onHover">
      <summary>Rendering settings for when the control is turned on and the mouse is hovering it.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.onNormal">
      <summary>Rendering settings for when the control is turned on.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.overflow">
      <summary>Extra space to be added to the background image.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.padding">
      <summary>Space from the edge of GUIStyle to the start of the contents.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.richText">
      <summary>Enable HTML-style tags for Text Formatting Markup.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.stretchHeight">
      <summary>Can GUI elements of this style be stretched vertically for better layout?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.stretchWidth">
      <summary>Can GUI elements of this style be stretched horizontally for better layouting?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIStyle.wordWrap">
      <summary>Should the text be wordwrapped?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcHeight(GUIContent content,float width)">
      <summary>How tall this element will be when rendered with content and a specific width.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcMinMaxWidth(GUIContent content,float minWidth,float maxWidth)">
      <summary>Calculate the minimum and maximum widths for this style rendered with content.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcScreenSize(Vector2 contentSize)">
      <summary>Calculate the size of an element formatted with this style, and a given space to content.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcSize(GUIContent content)">
      <summary>Calculate the size of a some content if it is rendered with this style.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(Rect position,bool isHover,bool isActive,bool on,bool hasKeyboardFocus)">
      <summary>Draw this GUIStyle on to the screen, internal version.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(Rect position,string text,bool isHover,bool isActive,bool on,bool hasKeyboardFocus)">
      <summary>Draw the GUIStyle with a text string inside.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(Rect position,Texture image,bool isHover,bool isActive,bool on,bool hasKeyboardFocus)">
      <summary>Draw the GUIStyle with an image inside. If the image is too large to fit within the content area of the style it is scaled down.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(Rect position,GUIContent content,int controlID,bool on = false)">
      <summary>Draw the GUIStyle with text and an image inside. If the image is too large to fit within the content area of the style it is scaled down.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.DrawCursor(Rect position,GUIContent content,int controlID,int Character)">
      <summary>Draw this GUIStyle with selected content.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.DrawWithTextSelection(Rect position,GUIContent content,int controlID,int firstSelectedCharacter,int lastSelectedCharacter)">
      <summary>Draw this GUIStyle with selected content.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.GetCursorPixelPosition(Rect position,GUIContent content,int cursorStringIndex)">
      <summary>Get the pixel position of a given string index.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIStyle.GetCursorStringIndex(Rect position,GUIContent content,Vector2 cursorPixelPosition)">
      <summary>Get the cursor position (indexing into contents.text) when the user clicked at cursorPixelPosition.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.JointSpring">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointSpring.damper">
      <summary>The damper force uses to dampen the spring.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointSpring.spring">
      <summary>The spring forces used to reach the target position.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointSpring.targetPosition">
      <summary>The target position the joint attempts to reach.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Input">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetAccelerationEvent(int index)">
      <summary>Returns specific acceleration measurement which occurred during last frame. (Does not allocate temporary variables).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetAxis(string axisName)">
      <summary>Returns the value of the virtual axis identified by axisName.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetAxisRaw(string axisName)">
      <summary>Returns the value of the virtual axis identified by axisName with no smoothing filtering applied.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetButton(string buttonName)">
      <summary>Returns true while the virtual button identified by buttonName is held down.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetButtonDown(string buttonName)">
      <summary>Returns true during the frame the user pressed down the virtual button identified by buttonName.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetButtonUp(string buttonName)">
      <summary>Returns true the first frame the user releases the virtual button identified by buttonName.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetJoystickNames()">
      <summary>Returns an array of strings describing the connected joysticks.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetKey(string name)">
      <summary>Returns true while the user holds down the key identified by name. Think auto fire.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetKey(KeyCode key)">
      <summary>Returns true while the user holds down the key identified by the key KeyCode enum parameter.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetKeyDown(string name)">
      <summary>Returns true during the frame the user starts pressing down the key identified by name.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetKeyDown(KeyCode key)">
      <summary>Returns true during the frame the user starts pressing down the key identified by the key KeyCode enum parameter.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetKeyUp(string name)">
      <summary>Returns true during the frame the user releases the key identified by name.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetKeyUp(KeyCode key)">
      <summary>Returns true during the frame the user releases the key identified by the key KeyCode enum parameter.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetMouseButton(int button)">
      <summary>Returns whether the given mouse button is held down.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetMouseButtonDown(int button)">
      <summary>Returns true during the frame the user pressed the given mouse button.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetMouseButtonUp(int button)">
      <summary>Returns true during the frame the user releases the given mouse button.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.GetTouch(int index)">
      <summary>Returns object representing status of a specific touch. (Does not allocate temporary variables).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Input.ResetInputAxes()">
      <summary>Resets all input. After ResetInputAxes all axes return to 0 and all buttons return to 0 for one frame.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.JointAngleLimits2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointAngleLimits2D.max">
      <summary>Upper angular limit of rotation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointAngleLimits2D.min">
      <summary>Lower angular limit of rotation.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SplatPrototype">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SplatPrototype.normalMap">
      <summary>Normal map of the splat applied to the Terrain.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SplatPrototype.texture">
      <summary>Texture of the splat applied to the Terrain.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SplatPrototype.tileOffset">
      <summary>Offset of the tile texture of the SplatPrototype.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SplatPrototype.tileSize">
      <summary>Size of the tile used in the texture of the SplatPrototype.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ControllerColliderHit">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.collider">
      <summary>The collider that was hit by the controller.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.controller">
      <summary>The controller that hit the collider.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.gameObject">
      <summary>The game object that was hit by the controller.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.moveDirection">
      <summary>Approximately the direction from the center of the capsule to the point we touch.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.moveLength">
      <summary>How far the character has travelled until it hit the collider.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.normal">
      <summary>The normal of the surface we collided with in world space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.point">
      <summary>The impact point in world space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.rigidbody">
      <summary>The rigidbody that was hit by the controller.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.transform">
      <summary>The transform that was hit by the controller.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.CircleCollider2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CircleCollider2D.center">
      <summary>Center point of the circle in local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CircleCollider2D.radius">
      <summary>Radius of the circle.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.CharacterController">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterController.center">
      <summary>The center of the character's capsule relative to the transform's position.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterController.collisionFlags">
      <summary>What part of the capsule collided with the environment during the last CharacterController.Move call.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterController.detectCollisions">
      <summary>Determines whether other rigidbodies or character controllers collide with this character controller (by default this is always enabled).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterController.height">
      <summary>The height of the character's capsule.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterController.isGrounded">
      <summary>Was the CharacterController touching the ground during the last move?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterController.radius">
      <summary>The radius of the character's capsule.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterController.slopeLimit">
      <summary>The character controllers slope limit in degrees.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterController.stepOffset">
      <summary>The character controllers step offset in meters.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterController.velocity">
      <summary>The current relative velocity of the Character (see notes).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.CharacterController.Move(Vector3 motion)">
      <summary>A more complex move function taking absolute movement deltas.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.CharacterController.SimpleMove(Vector3 speed)">
      <summary>Moves the character with speed.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Range">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Range(int fromValue,&#13;&#10;int valueCount)">
      <summary>Constructor for a score range, the range starts from a specific value and contains a maxium score count.</summary>
      <remarks></remarks>
      <param name="fromValue"></param>
      <param name="valueCount)"></param>
    </member>
    <member name="P:UnityEngine.Range.count">
      <summary>The total amount of scores retreived.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Range.from">
      <summary>The rank of the first score which is returned.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.NetworkPlayer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkPlayer.externalIP">
      <summary>Returns the external IP address of the network interface.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkPlayer.externalPort">
      <summary>Returns the external port of the network interface.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkPlayer.guid">
      <summary>The GUID for this player, used when connecting with NAT punchthrough.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkPlayer.ipAddress">
      <summary>The IP address of this player.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkPlayer.port">
      <summary>The port of this player.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NetworkPlayer.ToString()">
      <summary>Returns the index number for this network player.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.LightProbes">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LightProbes.cellCount">
      <summary>The number of cells (tetrahedra + outer cells) the space is divided to.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LightProbes.coefficients">
      <summary>Coefficients of the baked light probes. The coefficients represent a 3-band RGB spherical harmonics probe, with a total of 27 floats per light probe, laid out: rgbrgbrgb...</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LightProbes.count">
      <summary>The number of light probes.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LightProbes.positions">
      <summary>Positions of the baked light probes.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.LightProbes.GetInterpolatedLightProbe(Vector3 position,Renderer renderer,float[] coefficients)">
      <summary>Returns spherical harmonics coefficients of a light probe at the given position. The light probe is interpolated from the light probes baked.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.TrailRenderer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TrailRenderer.autodestruct">
      <summary>Does the GameObject of this trail renderer auto destructs?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TrailRenderer.endWidth">
      <summary>The width of the trail at the end of the trail.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TrailRenderer.startWidth">
      <summary>The width of the trail at the spawning point.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TrailRenderer.time">
      <summary>How long does the trail take to fade out.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AvatarBuilder">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AvatarBuilder.BuildGenericAvatar(GameObject go,string rootMotionTransformName)">
      <summary>Create a new generic avatar.</summary>
      <remarks></remarks>
      <param name="go">Root object of your transform hierarchy.</param>
      <param name="rootMotionTransformName">Transform name of the root motion transform. If empty no root motion is defined and you must take care of avatar movement yourself.</param>
    </member>
    <member name="M:UnityEngine.AvatarBuilder.BuildHumanAvatar(GameObject go,HumanDescription monoHumanDescription)">
      <summary>Create a humanoid avatar.</summary>
      <remarks></remarks>
      <param name="go">Root object of your transform hierachy.</param>
      <param name="monoHumanDescription">Description of the avatar.</param>
    </member>
    <member name="T:UnityEngine.ScriptableObject">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ScriptableObject.CreateInstance(string className)">
      <summary>Creates an instance of a scriptable object with className.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ScriptableObject.CreateInstance(Type type)">
      <summary>Creates an instance of a scriptable object with type.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ScriptableObject.CreateInstance()">
      <summary>Creates an instance of a scriptable object with T.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ParticleEmitter">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.angularVelocity">
      <summary>The angular velocity of new particles in degrees per second.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.emit">
      <summary>Should particles be automatically emitted each frame?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.emitterVelocityScale">
      <summary>The amount of the emitter's speed that the particles inherit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.enabled">
      <summary>Turns the ParticleEmitter on or off.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.localVelocity">
      <summary>The starting speed of particles along X, Y, and Z, measured in the object's orientation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.maxEmission">
      <summary>The maximum number of particles that will be spawned every second.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.maxEnergy">
      <summary>The maximum lifetime of each particle, measured in seconds.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.maxSize">
      <summary>The maximum size each particle can be at the time when it is spawned.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.minEmission">
      <summary>The minimum number of particles that will be spawned every second.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.minEnergy">
      <summary>The minimum lifetime of each particle, measured in seconds.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.minSize">
      <summary>The minimum size each particle can be at the time when it is spawned.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.particleCount">
      <summary>The current number of particles (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.particles">
      <summary>Returns a copy of all particles and assigns an array of all particles to be the current particles.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.rndAngularVelocity">
      <summary>A random angular velocity modifier for new particles.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.rndRotation">
      <summary>If enabled, the particles will be spawned with random rotations.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.rndVelocity">
      <summary>A random speed along X, Y, and Z that is added to the velocity.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.useWorldSpace">
      <summary>If enabled, the particles don't move when the emitter moves. If false, when you move the emitter, the particles follow it around.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.worldVelocity">
      <summary>The starting speed of particles in world space, along X, Y, and Z.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.ClearParticles()">
      <summary>Removes all particles from the particle emitter.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.Emit()">
      <summary>Emit a number of particles.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.Emit(int count)">
      <summary>Emit count particles immediately.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.Emit(Vector3 pos,Vector3 velocity,float size,float energy,Color color)">
      <summary>Emit a single particle with given parameters.</summary>
      <remarks></remarks>
      <param name="pos">The position of the particle.</param>
      <param name="velocity">The velocity of the particle.</param>
      <param name="size">The size of the particle.</param>
      <param name="energy">The remaining lifetime of the particle.</param>
      <param name="color">The color of the particle.</param>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.Emit(Vector3 pos,Vector3 velocity,float size,float energy,Color color,float rotation,float angularVelocity)">
      <summary></summary>
      <remarks></remarks>
      <param name="rotation">The initial rotation of the particle in degrees.</param>
      <param name="angularVelocity">The angular velocity of the particle in degrees per second.</param>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.Simulate(float deltaTime)">
      <summary>Advance particle simulation by given time.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.JointTranslationLimits2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointTranslationLimits2D.max">
      <summary>Maximum distance the Rigidbody2D object can move from the Slider Joint's anchor.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointTranslationLimits2D.min">
      <summary>Minimum distance the Rigidbody2D object can move from the Slider Joint's anchor.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AndroidJavaProxy">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.AndroidJavaProxy(string javaInterface)">
      <summary></summary>
      <remarks></remarks>
      <param name="javaInterface)"></param>
    </member>
    <member name="P:UnityEngine.AndroidJavaProxy.javaInterface">
      <summary>Java interface implemented by the proxy.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJavaProxy.Invoke(string methodName,object[] args)">
      <summary>Called by the java vm whenever a method is invoked on the java proxy interface. You can override this to run special code on method invokation, or you can leave the implementation as is, and leave the default behavior which is to look for c# methods matching the signature of the java method.</summary>
      <remarks></remarks>
      <param name="methodName">Name of the invoked java method.</param>
      <param name="args">Arguments passed from the java vm - converted into AndroidJavaObject, AndroidJavaClass or a primitive.</param>
      <param name="javaArgs">Arguments passed from the java vm - all objects are represented by AndroidJavaObject, int for instance is represented by a java.lang.Integer object.</param>
    </member>
    <member name="T:UnityEngine.GL">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.Begin(int mode)">
      <summary>Begin drawing 3D primitives.</summary>
      <remarks></remarks>
      <param name="mode">Primitives to draw: can be TRIANGLES, TRIANGLE_STRIP, QUADS or LINES.</param>
    </member>
    <member name="M:UnityEngine.GL.Clear(bool clearDepth,bool clearColor,Color backgroundColor,float depth = 1.0f)">
      <summary>Clear the current render buffer.</summary>
      <remarks></remarks>
      <param name="clearDepth">Should the depth buffer be cleared?</param>
      <param name="clearColor">Should the color buffer be cleared?</param>
      <param name="backgroundColor">The color to clear with, used only if clearColor is true.</param>
      <param name="depth">The depth to clear Z buffer with, used only if clearDepth is true.</param>
    </member>
    <member name="M:UnityEngine.GL.ClearWithSkybox(bool clearDepth,Camera camera)">
      <summary>Clear the current render buffer with camera's skybox.</summary>
      <remarks></remarks>
      <param name="clearDepth">Should the depth buffer be cleared?</param>
      <param name="camera">Camera to get projection parameters and skybox from.</param>
    </member>
    <member name="M:UnityEngine.GL.Color(Color c)">
      <summary>Sets current vertex color.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.End()">
      <summary>End drawing 3D primitives.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.GetGPUProjectionMatrix(Matrix4x4 proj,bool renderIntoTexture)">
      <summary>Compute GPU projection matrix from camera's projection matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.InvalidateState()">
      <summary>Invalidate the internally cached renderstates.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.IssuePluginEvent(int eventID)">
      <summary>Send a user-defined event to a native code plugin.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.LoadIdentity()">
      <summary>Load the identity matrix to the current modelview matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.LoadOrtho()">
      <summary>Helper function to set up an ortho perspective transform.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.LoadPixelMatrix()">
      <summary>Setup a matrix for pixel-correct rendering.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.LoadPixelMatrix(float left,float right,float bottom,float top)">
      <summary>Setup a matrix for pixel-correct rendering.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.LoadProjectionMatrix(Matrix4x4 mat)">
      <summary>Load an arbitrary matrix to the current projection matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.MultiTexCoord(int unit,Vector3 v)">
      <summary>Sets current texture coordinate (v.x,v.y,v.z) to the actual texture unit.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.MultiTexCoord2(int unit,float x,float y)">
      <summary>Sets current texture coordinate (x,y) for the actual texture unit.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.MultiTexCoord3(int unit,float x,float y,float z)">
      <summary>Sets current texture coordinate (x,y,z) to the actual texture unit.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.MultMatrix(Matrix4x4 mat)">
      <summary>Multiplies the current modelview matrix with the one specified.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.PopMatrix()">
      <summary>Restores both projection and modelview matrices off the top of the matrix stack.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.PushMatrix()">
      <summary>Saves both projection and modelview matrices to the matrix stack.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.SetRevertBackfacing(bool revertBackFaces)">
      <summary>Select whether to invert the backface culling (true) or not (false).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.TexCoord(Vector3 v)">
      <summary>Sets current texture coordinate (v.x,v.y,v.z) for all texture units.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.TexCoord2(float x,float y)">
      <summary>Sets current texture coordinate (x,y) for all texture units.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.TexCoord3(float x,float y,float z)">
      <summary>Sets current texture coordinate (x,y,z) for all texture units.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.Vertex(Vector3 v)">
      <summary>Submit a vertex.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.Vertex3(float x,float y,float z)">
      <summary>Submit a vertex.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GL.Viewport(Rect pixelRect)">
      <summary>Set the rendering viewport.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.JointMotor2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointMotor2D.maxMotorTorque">
      <summary>The maximum force that can be applied to the Rigidbody2D at the joint to attain the target speed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointMotor2D.motorSpeed">
      <summary>The desired speed for the Rigidbody2D to reach as it moves with the joint.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Tile">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Tile.exists">
      <summary>Whether secondary tile is pinned to start screen.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Tile.hasUserConsent">
      <summary>Whether secondary tile was approved (pinned to start screen) or rejected by user.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Tile.id">
      <summary>A unique string, identifying secondary tile</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WSA.Tile.Delete()">
      <summary>Show a request to unpin secondary tile from start screen.</summary>
      <remarks></remarks>
      <param name="pos">The coordinates for a request to unpin tile.</param>
      <param name="area">The area on the screen above which the request to unpin tile will be displayed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.PeriodicBadgeUpdate(string uri,float interval)">
      <summary>Starts periodic update of a  badge on a tile.</summary>
      <remarks></remarks>
      <param name="uri">A remote location from where to retrieve tile update</param>
      <param name="interval">A time interval in minutes, will be rounded to a value, supported by the system</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.PeriodicUpdate(string uri,float interval)">
      <summary>Starts periodic update of a tile.</summary>
      <remarks></remarks>
      <param name="uri">a remote location fromwhere to retrieve tile update</param>
      <param name="interval">a time interval in minutes, will be rounded to a value, supported by the system</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.RemoveBadge()">
      <summary>Remove badge from tile.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WSA.Tile.StopPeriodicBadgeUpdate()">
      <summary>Stops previously started periodic update of a tile.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WSA.Tile.StopPeriodicUpdate()">
      <summary>Stops previously started periodic update of a tile.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WSA.Tile.Update(string xml)">
      <summary>Send a notification for tile (update tiles look).</summary>
      <remarks></remarks>
      <param name="xml">A string containing XML document for new tile look.</param>
      <param name="medium">An uri to 150x150 image, shown on medium tile.</param>
      <param name="wide">An uri to a 310x150 image to be shown on a wide tile (if such issupported).</param>
      <param name="large">An uri to a 310x310 image to be shown on a large tile (if such is supported).</param>
      <param name="text">A text to shown on a tile.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.UpdateBadgeImage(string image)">
      <summary>Sets or updates badge on a tile to an image.</summary>
      <remarks></remarks>
      <param name="image">Image identifier.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.UpdateBadgeNumber(float number)">
      <summary>Set or update a badge on a tile to a number.</summary>
      <remarks></remarks>
      <param name="number">Number to be shown on a badge.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.CreateOrUpdateSecondary(SecondaryTileData data)">
      <summary>Creates new or updates existing secondary tile.</summary>
      <remarks></remarks>
      <param name="data">The data used to create or update secondary tile.</param>
      <param name="pos">The coordinates for a request to create new tile.</param>
      <param name="area">The area on the screen above which the request to create new tile will be displayed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.DeleteSecondary(string tileId)">
      <summary>Show a request to unpin secondary tile from start screen.</summary>
      <remarks></remarks>
      <param name="tileId">An identifier for secondary tile.</param>
      <param name="pos">The coordinates for a request to unpin tile.</param>
      <param name="area">The area on the screen above which the request to unpin tile will be displayed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.Exists(string tileId)">
      <summary>Whether secondary tile is pinned to start screen.</summary>
      <remarks></remarks>
      <param name="tileId">An identifier for secondary tile.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.GetSecondaries()">
      <summary>Gets all secondary tiles.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WSA.Tile.GetSecondary(string tileId)">
      <summary>Returns the secondary tile, identified by tile id.</summary>
      <remarks></remarks>
      <param name="tileId">A tile identifier.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.GetTemplate(TileTemplate templ)">
      <summary>Get template XML for tile notification.</summary>
      <remarks></remarks>
      <param name="templ">A template identifier.</param>
    </member>
    <member name="T:UnityEngine.Tree">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Tree.data">
      <summary>Data asociated to the Tree.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ParticleAnimator">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.autodestruct">
      <summary>Does the GameObject of this particle animator auto destructs?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.colorAnimation">
      <summary>Colors the particles will cycle through over their lifetime.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.damping">
      <summary>How much particles are slowed down every frame.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.doesAnimateColor">
      <summary>Do particles cycle their color over their lifetime?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.force">
      <summary>The force being applied to particles every frame.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.localRotationAxis">
      <summary>Local space axis the particles rotate around.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.rndForce">
      <summary>A random force added to particles every frame.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.sizeGrow">
      <summary>How the particle sizes grow over their lifetime.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.worldRotationAxis">
      <summary>World space axis the particles rotate around.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.BoxCollider">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoxCollider.center">
      <summary>The center of the box, measured in the object's local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoxCollider.size">
      <summary>The size of the box, measured in the object's local space.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ComputeShader">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ComputeShader.Dispatch(int kernelIndex,int threadsX,int threadsY,int threadsZ)">
      <summary>Execute a compute shader.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ComputeShader.FindKernel(string name)">
      <summary>Find ComputeShader kernel index.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetBuffer(int kernelIndex,string name,ComputeBuffer buffer)">
      <summary>This function can either set an input or output compute buffer.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetFloat(string name,float val)">
      <summary>Set a float parameter.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetFloats(string name,params float[] values)">
      <summary>Set multiple consecutive float parameters at once.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetInt(string name,int val)">
      <summary>Set an integer parameter.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetInts(string name,params int[] values)">
      <summary>Set multiple consecutive integer parameters at once.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetTexture(int kernelIndex,string name,Texture texture)">
      <summary>Set a texture parameter.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetVector(string name,Vector4 val)">
      <summary>Set a vector parameter.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Texture2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Texture2D(int width,&#13;&#10;int height)">
      <summary>Create a new empty texture.</summary>
      <remarks></remarks>
      <param name="width"></param>
      <param name="height)"></param>
    </member>
    <member name="C:UnityEngine.Texture2D(int width,&#13;&#10;int height,&#13;&#10;TextureFormat format,&#13;&#10;bool mipmap)">
      <summary>Create a new empty texture.</summary>
      <remarks></remarks>
      <param name="width"></param>
      <param name="height"></param>
      <param name="format"></param>
      <param name="mipmap)"></param>
    </member>
    <member name="C:UnityEngine.Texture2D(int width,&#13;&#10;int height,&#13;&#10;TextureFormat format,&#13;&#10;bool mipmap,&#13;&#10;bool linear)">
      <summary>See Also: SetPixel, SetPixels, Apply functions.</summary>
      <remarks></remarks>
      <param name="width"></param>
      <param name="height"></param>
      <param name="format"></param>
      <param name="mipmap"></param>
      <param name="linear)"></param>
    </member>
    <member name="P:UnityEngine.Texture2D.format">
      <summary>The format of the pixel data in the texture (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Texture2D.mipmapCount">
      <summary>How many mipmap levels are in this texture (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.Apply(bool updateMipmaps = true,bool makeNoLongerReadable = false)">
      <summary>Actually apply all previous SetPixel and SetPixels changes.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.Compress(bool highQuality)">
      <summary>Compress texture into DXT format.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.EncodeToPNG()">
      <summary>Encodes this texture into PNG format.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.GetPixel(int x,int y)">
      <summary>Returns pixel color at coordinates (x, y).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.GetPixelBilinear(float u,float v)">
      <summary>Returns filtered pixel color at normalized coordinates (u, v).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.GetPixels(int miplevel = 0)">
      <summary>Get a block of pixel colors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.GetPixels(int x,int y,int blockWidth,int blockHeight,int miplevel = 0)">
      <summary>Get a block of pixel colors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.GetPixels32(int miplevel = 0)">
      <summary>Get a block of pixel colors in Color32 format.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.LoadImage(byte[] data)">
      <summary>Loads an image from a byte array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.PackTextures(Texture2D[] textures,int padding,int maximumAtlasSize = 2048,bool makeNoLongerReadable = false)">
      <summary>Packs multiple Textures into a texture atlas.</summary>
      <remarks></remarks>
      <param name="textures">Array of textures to pack into the atlas.</param>
      <param name="padding">Padding in pixels between the packed textures.</param>
      <param name="maximumAtlasSize">Maximum size of the resulting texture.</param>
      <param name="makeNoLongerReadable">Should the texture be marked as no longer readable?</param>
    </member>
    <member name="M:UnityEngine.Texture2D.ReadPixels(Rect source,int destX,int destY,bool recalculateMipMaps = true)">
      <summary>Read screen pixels into the saved texture data.</summary>
      <remarks></remarks>
      <param name="source">Rectangular region of the view to read from.</param>
      <param name="destX">Horizontal pixel position in the texture to place the pixels that are read.</param>
      <param name="destY">Vertical pixel position in the texture to place the pixels that are read.</param>
      <param name="recalculateMipMaps">Should the texture's mipmaps be recalculated after reading?</param>
    </member>
    <member name="M:UnityEngine.Texture2D.Resize(int width,int height,TextureFormat format,bool hasMipMap)">
      <summary>Resizes the texture.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.Resize(int width,int height)">
      <summary>Resizes the texture.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.SetPixel(int x,int y,Color color)">
      <summary>Sets pixel color at coordinates (x,y).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.SetPixels(Color[] colors,int miplevel = 0)">
      <summary>Set a block of pixel colors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.SetPixels(int x,int y,int blockWidth,int blockHeight,Color[] colors,int miplevel = 0)">
      <summary>Set a block of pixel colors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.SetPixels32(Color32[] colors,int miplevel = 0)">
      <summary>Set a block of pixel colors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Texture2D.UpdateExternalTexture(IntPtr nativeTex)">
      <summary>Updates Unity Texture to use different native texture object.</summary>
      <remarks></remarks>
      <param name="nativeTex">Native texture object.</param>
    </member>
    <member name="M:UnityEngine.Texture2D.CreateExternalTexture(int width,int height,TextureFormat format,bool mipmap,bool linear,IntPtr nativeTex)">
      <summary>Creates Unity Texture on top of already inited native texture object.</summary>
      <remarks></remarks>
      <param name="nativeTex">Native texture object.</param>
    </member>
    <member name="T:UnityEngine.QualitySettings">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.QualitySettings.DecreaseLevel(bool applyExpensiveChanges = false)">
      <summary>Decrease the current quality level.</summary>
      <remarks></remarks>
      <param name="applyExpensiveChanges">Should expensive changes be applied (Anti-aliasing etc).</param>
    </member>
    <member name="M:UnityEngine.QualitySettings.GetQualityLevel()">
      <summary>Returns the current graphics quality level.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.QualitySettings.IncreaseLevel(bool applyExpensiveChanges = false)">
      <summary>Increase the current quality level.</summary>
      <remarks></remarks>
      <param name="applyExpensiveChanges">Should expensive changes be applied (Anti-aliasing etc).</param>
    </member>
    <member name="M:UnityEngine.QualitySettings.SetQualityLevel(int index,bool applyExpensiveChanges = true)">
      <summary>Sets a new graphics quality level.</summary>
      <remarks></remarks>
      <param name="index">Quality index to set.</param>
      <param name="applyExpensiveChanges">Should expensive changes be applied (Anti-aliasing etc).</param>
    </member>
    <member name="T:UnityEngine.GUISkin">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.box">
      <summary>Style used by default for GUI.Box controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.button">
      <summary>Style used by default for GUI.Button controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.customStyles">
      <summary>Array of GUI styles for specific needs.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.font">
      <summary>The default font to use for all styles.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbar">
      <summary>Style used by default for the background part of GUI.HorizontalScrollbar controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbarLeftButton">
      <summary>Style used by default for the left button on GUI.HorizontalScrollbar controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbarRightButton">
      <summary>Style used by default for the right button on GUI.HorizontalScrollbar controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbarThumb">
      <summary>Style used by default for the thumb that is dragged in GUI.HorizontalScrollbar controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalSlider">
      <summary>Style used by default for the background part of GUI.HorizontalSlider controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalSliderThumb">
      <summary>Style used by default for the thumb that is dragged in GUI.HorizontalSlider controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.label">
      <summary>Style used by default for GUI.Label controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.scrollView">
      <summary>Style used by default for the background of ScrollView controls (see GUI.BeginScrollView).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.settings">
      <summary>Generic settings for how controls should behave with this skin.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.textArea">
      <summary>Style used by default for GUI.TextArea controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.textField">
      <summary>Style used by default for GUI.TextField controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.toggle">
      <summary>Style used by default for GUI.Toggle controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbar">
      <summary>Style used by default for the background part of GUI.VerticalScrollbar controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbarDownButton">
      <summary>Style used by default for the down button on GUI.VerticalScrollbar controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbarThumb">
      <summary>Style used by default for the thumb that is dragged in GUI.VerticalScrollbar controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbarUpButton">
      <summary>Style used by default for the up button on GUI.VerticalScrollbar controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalSlider">
      <summary>Style used by default for the background part of GUI.VerticalSlider controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalSliderThumb">
      <summary>Style used by default for the thumb that is dragged in GUI.VerticalSlider controls.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISkin.window">
      <summary>Style used by default for Window controls (SA GUI.Window).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUISkin.FindStyle(string styleName)">
      <summary>Try to search for a GUIStyle. This functions returns NULL and does not give an error.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUISkin.GetStyle(string styleName)">
      <summary>Get a named GUIStyle.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Gradient">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Gradient()">
      <summary>Create a new Gradient object.</summary>
      <remarks></remarks>
      <param name="Gradient()"></param>
    </member>
    <member name="P:UnityEngine.Gradient.alphaKeys">
      <summary>All alpha keys defined in the gradient.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Gradient.colorKeys">
      <summary>All color keys defined in the gradient.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Gradient.Evaluate(float time)">
      <summary>Calculate color at a given time.</summary>
      <remarks></remarks>
      <param name="time">Time of the key (0 - 1).</param>
    </member>
    <member name="M:UnityEngine.Gradient.SetKeys(GradientColorKey[] colorKeys,GradientAlphaKey[] alphaKeys)">
      <summary>Setup Gradient with an array of color keys and alpha keys.</summary>
      <remarks></remarks>
      <param name="colorKeys">Color keys of the gradient (maximum 8 color keys).</param>
      <param name="alphaKeys">Alpha keys of the gradient (maximum 8 alpha keys).</param>
    </member>
    <member name="T:UnityEngine.ProceduralTexture">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralTexture.GetPixels32(int x,int y,int blockWidth,int blockHeight)">
      <summary>Grab pixel values from a ProceduralTexture.</summary>
      <remarks></remarks>
      <param name="x">X-coord of the top-left corner of the rectangle to grab.</param>
      <param name="y">Y-coord of the top-left corner of the rectangle to grab.</param>
      <param name="blockWidth">Width of rectangle to grab.</param>
      <param name="blockHeight">Height of the rectangle to grab.&#13;
Get the pixel values from a rectangular area of a ProceduralTexture into an array.&#13;
The block is specified by its x,y offset in the texture and by its width and height. The block is "flattened" into the array by scanning the pixel values across rows one by one.</param>
    </member>
    <member name="M:UnityEngine.ProceduralTexture.GetProceduralOutputType()">
      <summary>The output type of this ProceduralTexture.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AndroidJNI">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.AllocObject(IntPtr clazz)">
      <summary>Allocates a new Java object without invoking any of the constructors for the object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.AttachCurrentThread()">
      <summary>Attaches the current thread to a Java (Dalvik) VM.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallBooleanMethod(IntPtr obj,IntPtr methodID,jvalue[] args)">
      <summary>Calls an instance (nonstatic) Java method defined by methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallByteMethod(IntPtr obj,IntPtr methodID,jvalue[] args)">
      <summary>Calls an instance (nonstatic) Java method defined by methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallCharMethod(IntPtr obj,IntPtr methodID,jvalue[] args)">
      <summary>Calls an instance (nonstatic) Java method defined by methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallDoubleMethod(IntPtr obj,IntPtr methodID,jvalue[] args)">
      <summary>Calls an instance (nonstatic) Java method defined by methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallFloatMethod(IntPtr obj,IntPtr methodID,jvalue[] args)">
      <summary>Calls an instance (nonstatic) Java method defined by methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallIntMethod(IntPtr obj,IntPtr methodID,jvalue[] args)">
      <summary>Calls an instance (nonstatic) Java method defined by methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallLongMethod(IntPtr obj,IntPtr methodID,jvalue[] args)">
      <summary>Calls an instance (nonstatic) Java method defined by methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallObjectMethod(IntPtr obj,IntPtr methodID,jvalue[] args)">
      <summary>Calls an instance (nonstatic) Java method defined by methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallShortMethod(IntPtr obj,IntPtr methodID,jvalue[] args)">
      <summary>Calls an instance (nonstatic) Java method defined by methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticBooleanMethod(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Invokes a static method on a Java object, according to the specified methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticByteMethod(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Invokes a static method on a Java object, according to the specified methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticCharMethod(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Invokes a static method on a Java object, according to the specified methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticDoubleMethod(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Invokes a static method on a Java object, according to the specified methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticFloatMethod(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Invokes a static method on a Java object, according to the specified methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticIntMethod(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Invokes a static method on a Java object, according to the specified methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticLongMethod(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Invokes a static method on a Java object, according to the specified methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticObjectMethod(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Invokes a static method on a Java object, according to the specified methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticShortMethod(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Invokes a static method on a Java object, according to the specified methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticStringMethod(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Invokes a static method on a Java object, according to the specified methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticVoidMethod(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Invokes a static method on a Java object, according to the specified methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStringMethod(IntPtr obj,IntPtr methodID,jvalue[] args)">
      <summary>Calls an instance (nonstatic) Java method defined by methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallVoidMethod(IntPtr obj,IntPtr methodID,jvalue[] args)">
      <summary>Calls an instance (nonstatic) Java method defined by methodID, optionally passing an array of arguments (args) to the method.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.DeleteGlobalRef(IntPtr obj)">
      <summary>Deletes the global reference pointed to by obj.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.DeleteLocalRef(IntPtr obj)">
      <summary>Deletes the local reference pointed to by obj.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.DetachCurrentThread()">
      <summary>Detaches the current thread from a Java (Dalvik) VM.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.EnsureLocalCapacity(int capacity)">
      <summary>Ensures that at least a given number of local references can be created in the current thread.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ExceptionClear()">
      <summary>Clears any exception that is currently being thrown.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ExceptionDescribe()">
      <summary>Prints an exception and a backtrace of the stack to the logcat</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ExceptionOccurred()">
      <summary>Determines if an exception is being thrown.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FatalError(string message)">
      <summary>Raises a fatal error and does not expect the VM to recover. This function does not return.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FindClass(string name)">
      <summary>This function loads a locally-defined class.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromBooleanArray(IntPtr array)">
      <summary>Convert a Java array of boolean to a managed array of System.Boolean.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromByteArray(IntPtr array)">
      <summary>Convert a Java array of byte to a managed array of System.Byte.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromCharArray(IntPtr array)">
      <summary>Convert a Java array of char to a managed array of System.Char.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromDoubleArray(IntPtr array)">
      <summary>Convert a Java array of double to a managed array of System.Double.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromFloatArray(IntPtr array)">
      <summary>Convert a Java array of float to a managed array of System.Single.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromIntArray(IntPtr array)">
      <summary>Convert a Java array of int to a managed array of System.Int32.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromLongArray(IntPtr array)">
      <summary>Convert a Java array of long to a managed array of System.Int64.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromObjectArray(IntPtr array)">
      <summary>Convert a Java array of java.lang.Object to a managed array of System.IntPtr, representing Java objects.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromReflectedField(IntPtr refField)">
      <summary>Converts a java.lang.reflect.Field to a field ID.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromReflectedMethod(IntPtr refMethod)">
      <summary>Converts a java.lang.reflect.Method or java.lang.reflect.Constructor object to a method ID.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromShortArray(IntPtr array)">
      <summary>Convert a Java array of short to a managed array of System.Int16.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetArrayLength(IntPtr array)">
      <summary>Returns the number of elements in the array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetBooleanArrayElement(IntPtr array,int index)">
      <summary>Returns the value of one element of a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetBooleanField(IntPtr obj,IntPtr fieldID)">
      <summary>This function returns the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetByteArrayElement(IntPtr array,int index)">
      <summary>Returns the value of one element of a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetByteField(IntPtr obj,IntPtr fieldID)">
      <summary>This function returns the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetCharArrayElement(IntPtr array,int index)">
      <summary>Returns the value of one element of a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetCharField(IntPtr obj,IntPtr fieldID)">
      <summary>This function returns the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetDoubleArrayElement(IntPtr array,int index)">
      <summary>Returns the value of one element of a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetDoubleField(IntPtr obj,IntPtr fieldID)">
      <summary>This function returns the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetFieldID(IntPtr clazz,string name,string sig)">
      <summary>Returns the field ID for an instance (nonstatic) field of a class.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetFloatArrayElement(IntPtr array,int index)">
      <summary>Returns the value of one element of a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetFloatField(IntPtr obj,IntPtr fieldID)">
      <summary>This function returns the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetIntArrayElement(IntPtr array,int index)">
      <summary>Returns the value of one element of a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetIntField(IntPtr obj,IntPtr fieldID)">
      <summary>This function returns the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetLongArrayElement(IntPtr array,int index)">
      <summary>Returns the value of one element of a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetLongField(IntPtr obj,IntPtr fieldID)">
      <summary>This function returns the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetMethodID(IntPtr clazz,string name,string sig)">
      <summary>Returns the method ID for an instance (nonstatic) method of a class or interface.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetObjectArrayElement(IntPtr array,int index)">
      <summary>Returns an element of an Object array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetObjectClass(IntPtr obj)">
      <summary>Returns the class of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetObjectField(IntPtr obj,IntPtr fieldID)">
      <summary>This function returns the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetShortArrayElement(IntPtr array,int index)">
      <summary>Returns the value of one element of a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetShortField(IntPtr obj,IntPtr fieldID)">
      <summary>This function returns the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticBooleanField(IntPtr clazz,IntPtr fieldID)">
      <summary>This function returns the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticByteField(IntPtr clazz,IntPtr fieldID)">
      <summary>This function returns the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticCharField(IntPtr clazz,IntPtr fieldID)">
      <summary>This function returns the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticDoubleField(IntPtr clazz,IntPtr fieldID)">
      <summary>This function returns the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticFieldID(IntPtr clazz,string name,string sig)">
      <summary>Returns the field ID for a static field of a class.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticFloatField(IntPtr clazz,IntPtr fieldID)">
      <summary>This function returns the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticIntField(IntPtr clazz,IntPtr fieldID)">
      <summary>This function returns the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticLongField(IntPtr clazz,IntPtr fieldID)">
      <summary>This function returns the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticMethodID(IntPtr clazz,string name,string sig)">
      <summary>Returns the method ID for a static method of a class.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticObjectField(IntPtr clazz,IntPtr fieldID)">
      <summary>This function returns the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticShortField(IntPtr clazz,IntPtr fieldID)">
      <summary>This function returns the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticStringField(IntPtr clazz,IntPtr fieldID)">
      <summary>This function returns the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStringField(IntPtr obj,IntPtr fieldID)">
      <summary>This function returns the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStringUTFChars(IntPtr str)">
      <summary>Returns a managed string object representing the string in modified UTF-8 encoding.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStringUTFLength(IntPtr str)">
      <summary>Returns the length in bytes of the modified UTF-8 representation of a string.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetSuperclass(IntPtr clazz)">
      <summary>If clazz represents any class other than the class Object, then this function returns the object that represents the superclass of the class specified by clazz.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetVersion()">
      <summary>Returns the version of the native method interface.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.IsAssignableFrom(IntPtr clazz1,IntPtr clazz2)">
      <summary>Determines whether an object of clazz1 can be safely cast to clazz2.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.IsInstanceOf(IntPtr obj,IntPtr clazz)">
      <summary>Tests whether an object is an instance of a class.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.IsSameObject(IntPtr obj1,IntPtr obj2)">
      <summary>Tests whether two references refer to the same Java object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewBooleanArray(int size)">
      <summary>Construct a new primitive array object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewByteArray(int size)">
      <summary>Construct a new primitive array object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewCharArray(int size)">
      <summary>Construct a new primitive array object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewDoubleArray(int size)">
      <summary>Construct a new primitive array object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewFloatArray(int size)">
      <summary>Construct a new primitive array object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewGlobalRef(IntPtr obj)">
      <summary>Creates a new global reference to the object referred to by the obj argument.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewIntArray(int size)">
      <summary>Construct a new primitive array object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewLocalRef(IntPtr obj)">
      <summary>Creates a new local reference that refers to the same object as obj.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewLongArray(int size)">
      <summary>Construct a new primitive array object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewObject(IntPtr clazz,IntPtr methodID,jvalue[] args)">
      <summary>Constructs a new Java object. The method ID indicates which constructor method to invoke. This ID must be obtained by calling GetMethodID() with &lt;init&gt; as the method name and void (V) as the return type.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewObjectArray(int size,IntPtr clazz,IntPtr obj)">
      <summary>Constructs a new array holding objects in class clazz. All elements are initially set to obj.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewShortArray(int size)">
      <summary>Construct a new primitive array object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewStringUTF(string bytes)">
      <summary>Constructs a new java.lang.String object from an array of characters in modified UTF-8 encoding.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.PopLocalFrame(IntPtr result)">
      <summary>Pops off the current local reference frame, frees all the local references, and returns a local reference in the previous local reference frame for the given result object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.PushLocalFrame(int capacity)">
      <summary>Creates a new local reference frame, in which at least a given number of local references can be created.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetBooleanArrayElement(IntPtr array,int index,byte val)">
      <summary>Sets the value of one element in a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetBooleanField(IntPtr obj,IntPtr fieldID,bool val)">
      <summary>This function sets the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetByteArrayElement(IntPtr array,int index,sbyte val)">
      <summary>Sets the value of one element in a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetByteField(IntPtr obj,IntPtr fieldID,byte val)">
      <summary>This function sets the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetCharArrayElement(IntPtr array,int index,char val)">
      <summary>Sets the value of one element in a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetCharField(IntPtr obj,IntPtr fieldID,char val)">
      <summary>This function sets the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetDoubleArrayElement(IntPtr array,int index,double val)">
      <summary>Sets the value of one element in a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetDoubleField(IntPtr obj,IntPtr fieldID,double val)">
      <summary>This function sets the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetFloatArrayElement(IntPtr array,int index,float val)">
      <summary>Sets the value of one element in a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetFloatField(IntPtr obj,IntPtr fieldID,float val)">
      <summary>This function sets the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetIntArrayElement(IntPtr array,int index,int val)">
      <summary>Sets the value of one element in a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetIntField(IntPtr obj,IntPtr fieldID,int val)">
      <summary>This function sets the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetLongArrayElement(IntPtr array,int index,long val)">
      <summary>Sets the value of one element in a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetLongField(IntPtr obj,IntPtr fieldID,long val)">
      <summary>This function sets the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetObjectArrayElement(IntPtr array,int index,IntPtr obj)">
      <summary>Sets an element of an Object array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetObjectField(IntPtr obj,IntPtr fieldID,IntPtr val)">
      <summary>This function sets the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetShortArrayElement(IntPtr array,int index,short val)">
      <summary>Sets the value of one element in a primitive array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetShortField(IntPtr obj,IntPtr fieldID,short val)">
      <summary>This function sets the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticBooleanField(IntPtr clazz,IntPtr fieldID,bool val)">
      <summary>This function ets the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticByteField(IntPtr clazz,IntPtr fieldID,byte val)">
      <summary>This function ets the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticCharField(IntPtr clazz,IntPtr fieldID,char val)">
      <summary>This function ets the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticDoubleField(IntPtr clazz,IntPtr fieldID,double val)">
      <summary>This function ets the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticFloatField(IntPtr clazz,IntPtr fieldID,float val)">
      <summary>This function ets the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticIntField(IntPtr clazz,IntPtr fieldID,int val)">
      <summary>This function ets the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticLongField(IntPtr clazz,IntPtr fieldID,long val)">
      <summary>This function ets the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticObjectField(IntPtr clazz,IntPtr fieldID,IntPtr val)">
      <summary>This function ets the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticShortField(IntPtr clazz,IntPtr fieldID,short val)">
      <summary>This function ets the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticStringField(IntPtr clazz,IntPtr fieldID,string val)">
      <summary>This function ets the value of a static field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStringField(IntPtr obj,IntPtr fieldID,string val)">
      <summary>This function sets the value of an instance (nonstatic) field of an object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.Throw(IntPtr obj)">
      <summary>Causes a java.lang.Throwable object to be thrown.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ThrowNew(IntPtr clazz,string message)">
      <summary>Constructs an exception object from the specified class with the message specified by message and causes that exception to be thrown.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToBooleanArray(bool[] array)">
      <summary>Convert a managed array of System.Boolean to a Java array of boolean.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToByteArray(byte[] array)">
      <summary>Convert a managed array of System.Byte to a Java array of byte.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToCharArray(char[] array)">
      <summary>Convert a managed array of System.Char to a Java array of char.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToDoubleArray(double[] array)">
      <summary>Convert a managed array of System.Double to a Java array of double.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToFloatArray(float[] array)">
      <summary>Convert a managed array of System.Single to a Java array of float.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToIntArray(int[] array)">
      <summary>Convert a managed array of System.Int32 to a Java array of int.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToLongArray(long[] array)">
      <summary>Convert a managed array of System.Int64 to a Java array of long.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToObjectArray(IntPtr[] array)">
      <summary>Convert a managed array of System.IntPtr, representing Java objects, to a Java array of java.lang.Object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToReflectedField(IntPtr clazz,IntPtr fieldID,bool isStatic)">
      <summary>Converts a field ID derived from cls to a java.lang.reflect.Field object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToReflectedMethod(IntPtr clazz,IntPtr methodID,bool isStatic)">
      <summary>Converts a method ID derived from clazz to a java.lang.reflect.Method or java.lang.reflect.Constructor object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToShortArray(short[] array)">
      <summary>Convert a managed array of System.Int16 to a Java array of short.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.NavMeshHit">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshHit.distance">
      <summary>Distance to the point of hit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshHit.hit">
      <summary>Flag set when hit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshHit.mask">
      <summary>Mask specifying NavMeshLayers at point of hit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshHit.normal">
      <summary>Normal at the point of hit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshHit.position">
      <summary>Position of hit.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.WheelFrictionCurve">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelFrictionCurve.asymptoteSlip">
      <summary>Asymptote point slip (default 2).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelFrictionCurve.asymptoteValue">
      <summary>Force at the asymptote slip (default 10000).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelFrictionCurve.extremumSlip">
      <summary>Extremum point slip (default 1).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelFrictionCurve.extremumValue">
      <summary>Force at the extremum slip (default 20000).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelFrictionCurve.stiffness">
      <summary>Multiplier for the extremumValue and asymptoteValue values (default 1).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Cursor">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Debug">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Debug.Break()">
      <summary>Pauses the editor.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Debug.ClearDeveloperConsole()">
      <summary>Clears errors from the developer console.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Debug.DrawLine(Vector3 start,Vector3 end,Color color = Color.white,float duration = 0.0f,bool depthTest = true)">
      <summary>Draws a line between specified start and end points.</summary>
      <remarks></remarks>
      <param name="start">Point in world space where the line should start.</param>
      <param name="end">Point in world space where the line should end.</param>
      <param name="color">Color of the line.</param>
      <param name="duration">How long the line should be visible for.</param>
      <param name="depthTest">Should the line be obscured by objects closer to the camera?</param>
    </member>
    <member name="M:UnityEngine.Debug.DrawRay(Vector3 start,Vector3 dir,Color color = Color.white,float duration = 0.0f,bool depthTest = true)">
      <summary>Draws a line from start to start + dir in world coordinates.</summary>
      <remarks></remarks>
      <param name="start">Point in world space where the ray should start.</param>
      <param name="dir">Direction and length of the ray.</param>
      <param name="color">Color of the drawn line.</param>
      <param name="duration">How long the line will be visible for (in seconds).</param>
      <param name="depthTest">Should the line be obscured by other objects closer to the camera?</param>
    </member>
    <member name="M:UnityEngine.Debug.Log(object message)">
      <summary>Logs message to the Unity Console.</summary>
      <remarks></remarks>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogError(object message)">
      <summary>A variant of Debug.Log that logs an error message to the console.</summary>
      <remarks></remarks>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogException(Exception exception)">
      <summary>A variant of Debug.Log that logs an error message to the console.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Debug.LogWarning(object message)">
      <summary>A variant of Debug.Log that logs a warning message to the console.</summary>
      <remarks></remarks>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="T:UnityEngine.Mathf">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Abs(float f)">
      <summary>Returns the absolute value of f.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Abs(int value)">
      <summary>Returns the absolute value of value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Acos(float f)">
      <summary>Returns the arc-cosine of f - the angle in radians whose cosine is f.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Approximately(float a,float b)">
      <summary>Compares two floating point values if they are similar.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Asin(float f)">
      <summary>Returns the arc-sine of f - the angle in radians whose sine is f.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Atan(float f)">
      <summary>Returns the arc-tangent of f - the angle in radians whose tangent is f.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Atan2(float y,float x)">
      <summary>Returns the angle in radians whose Tan is y/x.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Ceil(float f)">
      <summary>Returns the smallest integer greater to or equal to f.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.CeilToInt(float f)">
      <summary>Returns the smallest integer greater to or equal to f.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Clamp(float value,float min,float max)">
      <summary>Clamps a value between a minimum float and maximum float value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Clamp(int value,int min,int max)">
      <summary>Clamps value between min and max and returns value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Clamp01(float value)">
      <summary>Clamps value between 0 and 1 and returns value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.ClosestPowerOfTwo(int value)">
      <summary>Returns the closest power of two value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Cos(float f)">
      <summary>Returns the cosine of angle f in radians.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.DeltaAngle(float current,float target)">
      <summary>Calculates the shortest difference between two given angles.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Exp(float power)">
      <summary>Returns e raised to the specified power.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Floor(float f)">
      <summary>Returns the largest integer smaller to or equal to f.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.FloorToInt(float f)">
      <summary>Returns the largest integer smaller to or equal to f.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.GammaToLinearSpace(float value)">
      <summary>Converts the given value from gamma to linear color space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.InverseLerp(float from,float to,float value)">
      <summary>Calculates the Lerp parameter between of two values.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.IsPowerOfTwo(int value)">
      <summary>Returns true if the value is power of two.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Lerp(float from,float to,float t)">
      <summary>Interpolates between a and b by t. t is clamped between 0 and 1.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.LerpAngle(float a,float b,float t)">
      <summary>Same as Lerp but makes sure the values interpolate correctly when they wrap around 360 degrees.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.LinearToGammaSpace(float value)">
      <summary>Converts the given value from linear to gamma color space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Log(float f,float p)">
      <summary>Returns the logarithm of a specified number in a specified base.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Log(float f)">
      <summary>Returns the natural (base e) logarithm of a specified number.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Log10(float f)">
      <summary>Returns the base 10 logarithm of a specified number.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Max(float a,float b)">
      <summary>Returns largest of two or more values.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Max(int a,int b)">
      <summary>Returns the largest of two or more values.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Min(float a,float b)">
      <summary>Returns the smallest of two or more values.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Min(int a,int b)">
      <summary>Returns the smallest of two or more values.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.MoveTowards(float current,float target,float maxDelta)">
      <summary>Moves a value current towards target.</summary>
      <remarks></remarks>
      <param name="current">The current value.</param>
      <param name="target">The value to move towards.</param>
      <param name="maxDelta">The maximum change that should be applied to the value.</param>
    </member>
    <member name="M:UnityEngine.Mathf.MoveTowardsAngle(float current,float target,float maxDelta)">
      <summary>Same as MoveTowards but makes sure the values interpolate correctly when they wrap around 360 degrees.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.NextPowerOfTwo(int value)">
      <summary>Returns the next power of two value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.PerlinNoise(float x,float y)">
      <summary>Generate 2D Perlin noise.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.PingPong(float t,float length)">
      <summary>PingPongs the value t, so that it is never larger than length and never smaller than 0.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Pow(float f,float p)">
      <summary>Returns f raised to power p.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Repeat(float t,float length)">
      <summary>Loops the value t, so that it is never larger than length and never smaller than 0.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Round(float f)">
      <summary>Returns f rounded to the nearest integer.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.RoundToInt(float f)">
      <summary>Returns f rounded to the nearest integer.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Sign(float f)">
      <summary>Returns the sign of f.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Sin(float f)">
      <summary>Returns the sine of angle f in radians.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.SmoothDamp(float current,float target,float currentVelocity,float smoothTime,float maxSpeed = Mathf.Infinity,float deltaTime = Time.deltaTime)">
      <summary>Gradually changes a value towards a desired goal over time.</summary>
      <remarks></remarks>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Mathf.SmoothDampAngle(float current,float target,float currentVelocity,float smoothTime,float maxSpeed = Mathf.Infinity,float deltaTime = Time.deltaTime)">
      <summary>Gradually changes an angle given in degrees towards a desired goal angle over time.</summary>
      <remarks></remarks>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Mathf.SmoothStep(float from,float to,float t)">
      <summary>Interpolates between min and max with smoothing at the limits.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Sqrt(float f)">
      <summary>Returns square root of f.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mathf.Tan(float f)">
      <summary>Returns the tangent of angle f in radians.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Profiler">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Profiler.AddFramesFromFile(string file)">
      <summary>Displays the recorded profiledata in the profiler.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Profiler.BeginSample(string name)">
      <summary>Begin profiling a piece of code with a custom label.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Profiler.EndSample()">
      <summary>End profiling a piece of code with a custom label.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Profiler.GetMonoHeapSize()">
      <summary>Returns the size of the mono heap.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Profiler.GetMonoUsedSize()">
      <summary>Returns the used size from mono.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Profiler.GetRuntimeMemorySize(Object o)">
      <summary>Returns the runtime memory usage of the resource.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Skybox">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Skybox.material">
      <summary>The material used by the skybox.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AndroidJavaClass">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.AndroidJavaClass(string className)">
      <summary>Construct an AndroidJavaClass from the class name.</summary>
      <remarks></remarks>
      <param name="className)"></param>
    </member>
    <member name="T:UnityEngine.Crypto">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Windows.Crypto.ComputeMD5Hash(byte[] buffer)">
      <summary>Computes MD5 hash value for the specified byte array.</summary>
      <remarks></remarks>
      <param name="buffer">The input to compute the hash code for.</param>
    </member>
    <member name="M:UnityEngine.Windows.Crypto.ComputeSHA1Hash(byte[] buffer)">
      <summary>Computes SHA1 hash value for the specified byte array.</summary>
      <remarks></remarks>
      <param name="buffer">The input to compute the hash code for.</param>
    </member>
    <member name="T:UnityEngine.IUserProfile">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IUserProfile.id">
      <summary>This users unique identifier.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IUserProfile.image">
      <summary>Avatar image of the user.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IUserProfile.isFriend">
      <summary>Is this user a friend of the current logged in user?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IUserProfile.state">
      <summary>Presence state of the user.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IUserProfile.userName">
      <summary>This user's username or alias.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Network">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.AllocateViewID()">
      <summary>Query for the next available network view ID number and allocate it (reserve).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.CloseConnection(NetworkPlayer target,bool sendDisconnectionNotification)">
      <summary>Close the connection to another system.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.Connect(string IP,int remotePort,string password = &quot;&quot;)">
      <summary>Connect to the specified host (ip or domain name) and server port.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.Connect(string[] IPs,int remotePort,string password = &quot;&quot;)">
      <summary>This function is exactly like Network.Connect but can accept an array of IP addresses.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.Connect(string GUID,string password = &quot;&quot;)">
      <summary>Connect to a server GUID. NAT punchthrough can only be performed this way.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.Connect(HostData hostData,string password = &quot;&quot;)">
      <summary>Connect to the host represented by a HostData structure returned by the Master Server.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.Destroy(NetworkViewID viewID)">
      <summary>Destroy the object associated with this view ID across the network.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.Destroy(GameObject gameObject)">
      <summary>Destroy the object across the network.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.DestroyPlayerObjects(NetworkPlayer playerID)">
      <summary>Destroy all the objects based on view IDs belonging to this player.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.Disconnect(int timeout = 200)">
      <summary>Close all open connections and shuts down the network interface.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.GetAveragePing(NetworkPlayer player)">
      <summary>The last average ping time to the given player in milliseconds.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.GetLastPing(NetworkPlayer player)">
      <summary>The last ping time to the given player in milliseconds.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.HavePublicAddress()">
      <summary>Check if this machine has a public IP address.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.InitializeSecurity()">
      <summary>Initializes security layer.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.InitializeServer(int connections,int listenPort,bool useNat)">
      <summary>Initialize the server.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.Instantiate(Object prefab,Vector3 position,Quaternion rotation,int group)">
      <summary>Network instantiate a prefab.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.RemoveRPCs(NetworkPlayer playerID)">
      <summary>Remove all RPC functions which belong to this player ID.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.RemoveRPCs(NetworkPlayer playerID,int group)">
      <summary>Remove all RPC functions which belong to this player ID and were sent based on the given group.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.RemoveRPCs(NetworkViewID viewID)">
      <summary>Remove the RPC function calls accociated with this view ID number.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.RemoveRPCsInGroup(int group)">
      <summary>Remove all RPC functions which belong to given group number.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.SetLevelPrefix(int prefix)">
      <summary>Set the level prefix which will then be prefixed to all network ViewID numbers.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.SetReceivingEnabled(NetworkPlayer player,int group,bool enabled)">
      <summary>Enable or disables the reception of messages in a specific group number from a specific player.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.SetSendingEnabled(int group,bool enabled)">
      <summary>Enables or disables transmission of messages and RPC calls on a specific network group number.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.SetSendingEnabled(NetworkPlayer player,int group,bool enabled)">
      <summary>Enable or disable transmission of messages and RPC calls based on target network player as well as the network group.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.TestConnection(bool forceTest = false)">
      <summary>Test this machines network connection.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Network.TestConnectionNAT(bool forceTest = false)">
      <summary>Test the connecction specifically for NAT punchthrough connectivity.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.JointMotor">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointMotor.force">
      <summary>The motor will apply a force.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointMotor.freeSpin">
      <summary>If freeSpin is enabled the motor will only accelerate but never slow down.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointMotor.targetVelocity">
      <summary>The motor will apply a force up to force to achieve targetVelocity.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ContactPoint">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ContactPoint.normal">
      <summary>Normal of the contact point.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ContactPoint.otherCollider">
      <summary>The other collider in contact.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ContactPoint.point">
      <summary>The point of contact.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ContactPoint.thisCollider">
      <summary>The first collider in contact.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Projector">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Projector.aspectRatio">
      <summary>The aspect ratio of the projection.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Projector.farClipPlane">
      <summary>The far clipping plane distance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Projector.fieldOfView">
      <summary>The field of view of the projection in degrees.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Projector.ignoreLayers">
      <summary>Which object layers are ignored by the projector.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Projector.material">
      <summary>The material that will be projected onto every object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Projector.nearClipPlane">
      <summary>The near clipping plane distance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Projector.orthographic">
      <summary>Is the projection orthographic (true) or perspective (false)?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Projector.orthographicSize">
      <summary>Projection's half-size when in orthographic mode.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Projector.orthoGraphicSize">
      <summary>Projection's half-size when in orthographic mode.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.LayerMask">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LayerMask.value">
      <summary>Converts a layer mask value to an integer value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.LayerMask.LayerToName(int layer)">
      <summary>Given a layer number, returns the name of the layer as defined in either a Builtin or a User Layer in the Tag Manager.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.LayerMask.NameToLayer(string layerName)">
      <summary>Given a layer name, returns the layer index as defined by either a Builtin or a User Layer in the Tag Manager.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Vector3">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Vector3(float x,&#13;&#10;float y,&#13;&#10;float z)">
      <summary>Creates a new vector with given x, y, z components.</summary>
      <remarks></remarks>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z)"></param>
    </member>
    <member name="C:UnityEngine.Vector3(float x,&#13;&#10;float y)">
      <summary>Creates a new vector with given x, y components and sets z to zero.</summary>
      <remarks></remarks>
      <param name="x"></param>
      <param name="y)"></param>
    </member>
    <member name="P:UnityEngine.Vector3.magnitude">
      <summary>Returns the length of this vector (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector3.normalized">
      <summary>Returns this vector with a magnitude of 1 (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector3.sqrMagnitude">
      <summary>Returns the squared length of this vector (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector3.this[int]">
      <summary>Access the x, y, z components using [0], [1], [2] respectively.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector3.x">
      <summary>X component of the vector.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector3.y">
      <summary>Y component of the vector.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector3.z">
      <summary>Z component of the vector.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Set(float new_x,float new_y,float new_z)">
      <summary>Set x, y and z components of an existing Vector3.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.ToString()">
      <summary>Returns a nicely formatted string for this vector.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Angle(Vector3 from,Vector3 to)">
      <summary>Returns the angle in degrees between from and to.</summary>
      <remarks></remarks>
      <param name="from">The angle extends round from this vector.</param>
      <param name="to">The angle extends round to this vector.</param>
    </member>
    <member name="M:UnityEngine.Vector3.ClampMagnitude(Vector3 vector,float maxLength)">
      <summary>Returns a copy of vector with its magnitude clamped to maxLength.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Cross(Vector3 lhs,Vector3 rhs)">
      <summary>Cross Product of two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Distance(Vector3 a,Vector3 b)">
      <summary>Returns the distance between a and b.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Dot(Vector3 lhs,Vector3 rhs)">
      <summary>Dot Product of two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Lerp(Vector3 from,Vector3 to,float t)">
      <summary>Linearly interpolates between two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Max(Vector3 lhs,Vector3 rhs)">
      <summary>Returns a vector that is made from the largest components of two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Min(Vector3 lhs,Vector3 rhs)">
      <summary>Returns a vector that is made from the smallest components of two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.MoveTowards(Vector3 current,Vector3 target,float maxDistanceDelta)">
      <summary>Moves a point current in a straight line towards a target point.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Normalize()">
      <summary>Makes this vector have a magnitude of 1.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.OrthoNormalize(Vector3 normal,Vector3 tangent)">
      <summary>Makes vectors normalized and orthogonal to each other.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.OrthoNormalize(Vector3 normal,Vector3 tangent,Vector3 binormal)">
      <summary>Makes vectors normalized and orthogonal to each other.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Project(Vector3 vector,Vector3 onNormal)">
      <summary>Projects a vector onto another vector.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Reflect(Vector3 inDirection,Vector3 inNormal)">
      <summary>Reflects a vector off the plane defined by a normal.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.RotateTowards(Vector3 current,Vector3 target,float maxRadiansDelta,float maxMagnitudeDelta)">
      <summary>Rotates a vector current towards target.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Scale(Vector3 a,Vector3 b)">
      <summary>Multiplies two vectors component-wise.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Scale(Vector3 scale)">
      <summary>Multiplies every component of this vector by the same component of scale.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.Slerp(Vector3 from,Vector3 to,float t)">
      <summary>Spherically interpolates between two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector3.SmoothDamp(Vector3 current,Vector3 target,Vector3 currentVelocity,float smoothTime,float maxSpeed = Mathf.Infinity,float deltaTime = Time.deltaTime)">
      <summary>Gradually changes a vector towards a desired goal over time.</summary>
      <remarks></remarks>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="T:UnityEngine.PhysicsMaterial2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.PhysicsMaterial2D.bounciness">
      <summary>The degree of elasticity during collisions.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.PhysicsMaterial2D.friction">
      <summary>Coefficient of friction.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Matrix4x4">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Matrix4x4.inverse">
      <summary>The inverse of this matrix (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Matrix4x4.isIdentity">
      <summary>Is this the identity matrix?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Matrix4x4.this[int,int]">
      <summary>Access element at [row, column].</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Matrix4x4.transpose">
      <summary>Returns the transpose of this matrix (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.GetColumn(int i)">
      <summary>Get a column of the matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.GetRow(int i)">
      <summary>Returns a row of the matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.MultiplyPoint(Vector3 v)">
      <summary>Transforms a position by this matrix (generic).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.MultiplyPoint3x4(Vector3 v)">
      <summary>Transforms a position by this matrix (fast).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.MultiplyVector(Vector3 v)">
      <summary>Transforms a direction by this matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.SetColumn(int i,Vector4 v)">
      <summary>Sets a column of the matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.SetRow(int i,Vector4 v)">
      <summary>Sets a row of the matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.SetTRS(Vector3 pos,Quaternion q,Vector3 s)">
      <summary>Sets this matrix to a translation, rotation and scaling matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.ToString()">
      <summary>Returns a nicely formatted string for this matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.Ortho(float left,float right,float bottom,float top,float zNear,float zFar)">
      <summary>Creates an orthogonal projection matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.Perspective(float fov,float aspect,float zNear,float zFar)">
      <summary>Creates a perspective projection matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.Scale(Vector3 v)">
      <summary>Creates a scaling matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Matrix4x4.TRS(Vector3 pos,Quaternion q,Vector3 s)">
      <summary>Creates a translation, rotation and scaling matrix.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AnimatorStateInfo">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.length">
      <summary>Current duration of the state.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.loop">
      <summary>Is the state looping.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.nameHash">
      <summary>Name of the State.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.normalizedTime">
      <summary>Normalized time of the State.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.tagHash">
      <summary>The Tag of the State.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimatorStateInfo.IsName(string name)">
      <summary>Does name match the name of the active state in the statemachine?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimatorStateInfo.IsTag(string tag)">
      <summary>Does tag match the tag of the active state in the statemachine.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.iPhone">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.iPhone.ResetNoBackupFlag(string path)">
      <summary>Reset "no backup" file flag: file will be synced with iCloud/iTunes backup and can be deleted by OS in low storage situations.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.iPhone.SetNoBackupFlag(string path)">
      <summary>Set file flag to be excluded from iCloud/iTunes backup.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Particle">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.angularVelocity">
      <summary>The angular velocity of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.color">
      <summary>The initial color of the particle. The current color of the particle is calculated procedurally based on this value and the active color modules.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.lifetime">
      <summary>The lifetime of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.position">
      <summary>The position of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.randomSeed">
      <summary>The random seed of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.rotation">
      <summary>The rotation of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.size">
      <summary>The initial size of the particle. The current size of the particle is calculated procedurally based on this value and the active size modules.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.startLifetime">
      <summary>The starting lifetime of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.velocity">
      <summary>The velocity of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SpriteRenderer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SpriteRenderer.color">
      <summary>Rendering color for the Sprite graphic.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SpriteRenderer.sprite">
      <summary>The Sprite to render.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.LODGroup">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LODGroup.enabled">
      <summary>Enable / Disable the LODGroup - Disabling will turn off all renderers.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LODGroup.localReferencePoint">
      <summary>The local reference point against which the LOD distance is calculated.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LODGroup.lodCount">
      <summary>The number of LOD levels.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LODGroup.size">
      <summary>The size of the LOD object in local space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.LODGroup.ForceLOD(int index)">
      <summary></summary>
      <remarks></remarks>
      <param name="index">The LOD level to use. Passing index &lt; 0 will return to standard LOD processing.</param>
    </member>
    <member name="M:UnityEngine.LODGroup.RecalculateBounds()">
      <summary>Recalculate the bounding region for the LODGroup (Relatively slow, do not call often).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.LODGroup.SetLODS(LOD[] scriptingLODs)">
      <summary>Set the LODs for the LOD group. This will remove any existing LODs configured on the LODGroup.</summary>
      <remarks></remarks>
      <param name="scriptingLODs">The LODs to use for this group.</param>
    </member>
    <member name="T:UnityEngine.SpringJoint2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.anchor">
      <summary>The joint's anchor point on the object that has the SpringJoint2D component.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.connectedAnchor">
      <summary>The joint's anchor point on the second object (ie, the one which doesn't have the component).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.dampingRatio">
      <summary>The amount by which the spring force is reduced in proportion to the movement speed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.distance">
      <summary>The distance the spring will try to keep between the two objects.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.frequency">
      <summary>The frequency at which the spring oscillates around the distance distance between the objects.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Ray2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Ray2D.direction">
      <summary>The direction of the ray in world space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Ray2D.origin">
      <summary>The starting point of the ray in world space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Ray2D.GetPoint(float distance)">
      <summary>Get a point that lies a given distance along a ray.</summary>
      <remarks></remarks>
      <param name="distance">Distance of the desired point along the path of the ray.</param>
    </member>
    <member name="T:UnityEngine.AssetBundleCreateRequest">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AssetBundleCreateRequest.assetBundle">
      <summary>Asset object being loaded (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SecondaryTileData">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.SecondaryTileData(string id,&#13;&#10;string displayName)">
      <summary>Constructor for SecondaryTileData, sets default values for all members.</summary>
      <remarks></remarks>
      <param name="id"></param>
      <param name="displayName)"></param>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.arguments">
      <summary>Arguments to be passed for application when secondary tile is activated.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.backgroundColor">
      <summary>Defines background color for secondary tile.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.backgroundColorSet">
      <summary>Defines, whether backgroundColor should be used.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.displayName">
      <summary>Display name for secondary tile.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.foregroundText">
      <summary>Defines the style for foreground text on a secondary tile.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.lockScreenBadgeLogo">
      <summary>Uri to logo, shown for secondary tile on lock screen.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.lockScreenDisplayBadgeAndTileText">
      <summary>Whether to show secondary tile on lock screen.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.phoneticName">
      <summary>Phonetic name for secondary tile.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.roamingEnabled">
      <summary>Defines whether secondary tile is copied to another device when application is installed by the same users account.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.showNameOnSquare150x150Logo">
      <summary>Defines whether the displayName should be shown on a medium secondary tile.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.showNameOnSquare310x310Logo">
      <summary>Defines whether the displayName should be shown on a large secondary tile.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.showNameOnWide310x150Logo">
      <summary>Defines whether the displayName should be shown on a wide secondary tile.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.square150x150Logo">
      <summary>Uri to the logo for medium size tile.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.square30x30Logo">
      <summary>Uri to the logo shown on tile</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.square310x310Logo">
      <summary>Uri to the logo for large size tile.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.square70x70Logo">
      <summary>Uri to the logo for small size tile.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.tileId">
      <summary>Unique identifier within application for a secondary tile.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SecondaryTileData.wide310x150Logo">
      <summary>Uri to the logo for wide tile.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Compass">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Compass.enabled">
      <summary>Used to enable or disable compass. Note, that if you want Input.compass.trueHeading property to contain a valid value, you must also enable location updates by calling Input.location.Start().</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Compass.magneticHeading">
      <summary>The heading in degrees relative to the magnetic North Pole. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Compass.rawVector">
      <summary>The raw geomagnetic data measured in microteslas. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Compass.timestamp">
      <summary>Timestamp (in seconds since 1970) when the heading was last time updated. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Compass.trueHeading">
      <summary>The heading in degrees relative to the geographic North Pole. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Rect">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Rect(float left,&#13;&#10;float top,&#13;&#10;float width,&#13;&#10;float height)">
      <summary>Creates a new rectangle.</summary>
      <remarks></remarks>
      <param name="left"></param>
      <param name="top"></param>
      <param name="width"></param>
      <param name="height)"></param>
    </member>
    <member name="P:UnityEngine.Rect.center">
      <summary>Center coordinate of the rectangle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rect.height">
      <summary>Height of the rectangle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rect.width">
      <summary>Width of the rectangle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rect.x">
      <summary>Left coordinate of the rectangle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rect.xMax">
      <summary>Right coordinate of the rectangle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rect.xMin">
      <summary>Left coordinate of the rectangle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rect.y">
      <summary>Top coordinate of the rectangle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rect.yMax">
      <summary>Bottom coordinate of the rectangle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Rect.yMin">
      <summary>Top coordinate of the rectangle.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rect.Contains(Vector2 point)">
      <summary>Returns true if the x and y components of point is a point inside this rectangle. If allowInverse is present and true, the width and height of the Rect are allowed to take negative values (ie, the min value is greater than the max), and the test will still work.</summary>
      <remarks></remarks>
      <param name="point">Point to test.</param>
      <param name="allowInverse">Does the test allow the Rect's width and height to be negative?</param>
    </member>
    <member name="M:UnityEngine.Rect.Set(float left,float top,float width,float height)">
      <summary>Set components of an existing Rect.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rect.ToString()">
      <summary>Returns a nicely formatted string for this Rect.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Rect.MinMaxRect(float left,float top,float right,float bottom)">
      <summary>Creates a rectangle from min/max coordinate values.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SoftJointLimit">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SoftJointLimit.bounciness">
      <summary>When the joint hits the limit, it can be made to bounce off it.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SoftJointLimit.damper">
      <summary>If spring is greater than zero, the limit is soft.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SoftJointLimit.limit">
      <summary>The limit position/angle of the joint.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SoftJointLimit.spring">
      <summary>If greater than zero, the limit is soft. The spring will pull the joint back.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ParticleRenderer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.cameraVelocityScale">
      <summary>How much are the particles strected depending on the Camera's speed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.lengthScale">
      <summary>How much are the particles stretched in their direction of motion.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.maxParticleSize">
      <summary>Clamp the maximum particle size.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.particleRenderMode">
      <summary>How particles are drawn.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.uvAnimationCycles">
      <summary>Set uv animation cycles.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.uvAnimationXTile">
      <summary>Set horizontal tiling count.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.uvAnimationYTile">
      <summary>Set vertical tiling count.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.velocityScale">
      <summary>How much are the particles strectched depending on "how fast they move".</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Particle">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.angularVelocity">
      <summary>The angular velocity of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.color">
      <summary>The color of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.energy">
      <summary>The energy of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.position">
      <summary>The position of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.rotation">
      <summary>The rotation of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.size">
      <summary>The size of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.startEnergy">
      <summary>The starting energy of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Particle.velocity">
      <summary>The velocity of the particle.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AndroidInput">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidInput.GetSecondaryTouch(int index)">
      <summary>Returns object representing status of a specific touch on a secondary touchpad (Does not allocate temporary variables).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AnimatorOverrideController">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.clips">
      <summary>Returns the list of orignal clip from the controller and their override clip.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.runtimeAnimatorController">
      <summary>The Controller that the AnimatorOverrideController overrides.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.this[string]">
      <summary>Returns either the overriding clip if set or the original clip named name.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ClothSkinningCoefficient">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ClothSkinningCoefficient.collisionSphereDistance">
      <summary>Definition of a sphere a vertex is not allowed to enter. This allows collision against the animated cloth.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ClothSkinningCoefficient.collisionSphereRadius">
      <summary>Definition of a sphere a vertex is not allowed to enter. This allows collision against the animated cloth.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ClothSkinningCoefficient.maxDistance">
      <summary>Distance a vertex is allowed to travel from the skinned mesh vertex position.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ClothSkinningCoefficient.maxDistanceBias">
      <summary>Distorts the sphere defined by the maxDistance based on skinned mesh normals.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.YieldInstruction">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AudioSource">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.bypassEffects">
      <summary>Bypass effects (Applied from filter components or global listener filters).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.clip">
      <summary>The default AudioClip to play.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.dopplerLevel">
      <summary>Sets the Doppler scale for this AudioSource.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.ignoreListenerPause">
      <summary>Allows AudioSource to play even though AudioListener.pause is set to true. This is useful for the menu element sounds or background music in pause menus.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.ignoreListenerVolume">
      <summary>This makes the audio source not take into account the volume of the audio listener.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.isPlaying">
      <summary>Is the clip playing right now (Read Only)?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.loop">
      <summary>Is the audio clip looping?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.maxDistance">
      <summary>(Logarithmic rolloff) MaxDistance is the distance a sound stops attenuating at.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.minDistance">
      <summary>Within the Min distance the AudioSource will cease to grow louder in volume.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.mute">
      <summary>Un- / Mutes the AudioSource. Mute sets the volume=0, Un-Mute restore the original volume.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.pan">
      <summary>Sets a channels pan position linearly. Only works for 2D clips.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.panLevel">
      <summary>Sets how much the 3d engine has an effect on the channel.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.pitch">
      <summary>The pitch of the audio source.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.playOnAwake">
      <summary>If set to true, the audio source will automatically start playing on awake.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.priority">
      <summary>Sets the priority of the AudioSource.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.rolloffMode">
      <summary>Sets/Gets how the AudioSource attenuates over distance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.spread">
      <summary>Sets the spread angle a 3d stereo or multichannel sound in speaker space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.time">
      <summary>Playback position in seconds.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.timeSamples">
      <summary>Playback position in PCM samples.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.velocityUpdateMode">
      <summary>Whether the Audio Source should be updated in the fixed or dynamic update.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioSource.volume">
      <summary>The volume of the audio source (0.0 to 1.0).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AudioSource.Pause()">
      <summary>Pauses playing the clip.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AudioSource.Play(ulong delay = 0)">
      <summary>Plays the clip with an optional certain delay.</summary>
      <remarks></remarks>
      <param name="delay">Delay in number of samples, assuming a 44100Hz sample rate (meaning that Play(44100) will delay the playing by exactly 1 sec).</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayDelayed(float delay)">
      <summary>Plays the clip with a delay specified in seconds. Users are advised to use this function instead of the old Play(delay) function that took a delay specified in samples relative to a reference rate of 44.1 kHz as an argument.</summary>
      <remarks></remarks>
      <param name="delay">Delay time specified in seconds.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayOneShot(AudioClip clip,float volumeScale = 1.0F)">
      <summary>Plays an AudioClip, and scales the AudioSource volume by volumeScale.</summary>
      <remarks></remarks>
      <param name="clip">The clip being played.</param>
      <param name="volumeScale">The scale of the volume (0-1).</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayScheduled(double time)">
      <summary>Plays the clip at a specific time on the absolute time-line that AudioSettings.dspTime reads from.</summary>
      <remarks></remarks>
      <param name="time">Time in seconds on the absolute time-line that AudioSettings.dspTime refers to for when the sound should start playing.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.SetScheduledEndTime(double time)">
      <summary>Changes the time at which a sound that has already been scheduled to play will end. Notice that depending on the timing not all rescheduling requests can be fulfilled.</summary>
      <remarks></remarks>
      <param name="time">Time in seconds.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.SetScheduledStartTime(double time)">
      <summary>Changes the time at which a sound that has already been scheduled to play will start.</summary>
      <remarks></remarks>
      <param name="time">Time in seconds.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.Stop()">
      <summary>Stops playing the clip.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayClipAtPoint(AudioClip clip,Vector3 position,float volume = 1.0F)">
      <summary>Plays an AudioClip at a given position in world space.</summary>
      <remarks></remarks>
      <param name="clip">Audio data to play.</param>
      <param name="position">Position in world space from which sound originates.</param>
      <param name="volume">Playback volume.</param>
    </member>
    <member name="T:UnityEngine.TerrainCollider">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainCollider.terrainData">
      <summary>The terrain that stores the heightmap.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.CombineInstance">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CombineInstance.mesh">
      <summary>Mesh to combine.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CombineInstance.subMeshIndex">
      <summary>Submesh index of the mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CombineInstance.transform">
      <summary>Matrix to transform the mesh with before combining.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AnimationEvent">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.AnimationEvent()">
      <summary>Creates a new animation event.</summary>
      <remarks></remarks>
      <param name="AnimationEvent()"></param>
    </member>
    <member name="P:UnityEngine.AnimationEvent.animationState">
      <summary>The animation state that fired this event (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationEvent.floatParameter">
      <summary>Float parameter that is stored in the event and will be sent to the function.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationEvent.functionName">
      <summary>The name of the function that will be called.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationEvent.intParameter">
      <summary>Int parameter that is stored in the event and will be sent to the function.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationEvent.messageOptions">
      <summary>Function call options.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationEvent.objectReferenceParameter">
      <summary>Object reference parameter that is stored in the event and will be sent to the function.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationEvent.stringParameter">
      <summary>String parameter that is stored in the event and will be sent to the function.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationEvent.time">
      <summary>The time at which the event will be fired off.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AnimationInfo">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationInfo.clip">
      <summary>Animation clip that is played.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationInfo.weight">
      <summary>The weight of the animation clip.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Color32">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Color32(byte r,&#13;&#10;byte g,&#13;&#10;byte b,&#13;&#10;byte a)">
      <summary>Constructs a new Color with given r, g, b, a components.</summary>
      <remarks></remarks>
      <param name="r"></param>
      <param name="g"></param>
      <param name="b"></param>
      <param name="a)"></param>
    </member>
    <member name="P:UnityEngine.Color32.a">
      <summary>Alpha component of the color.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Color32.b">
      <summary>Blue component of the color.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Color32.g">
      <summary>Green component of the color.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Color32.r">
      <summary>Red component of the color.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Color32.ToString()">
      <summary>Returns a nicely formatted string of this color.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Color32.Lerp(Color32 a,Color32 b,float t)">
      <summary>Interpolates between colors a and b by t.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SkeletonBone">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkeletonBone.name">
      <summary>The name of the Transform mapped to the bone.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkeletonBone.position">
      <summary>The T-pose position of the bone in local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkeletonBone.rotation">
      <summary>The T-pose rotation of the bone in local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkeletonBone.scale">
      <summary>The T-pose scaling of the bone in local space.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Physics">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Physics.CapsuleCast(Vector3 point1,Vector3 point2,float radius,Vector3 direction,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Casts a capsule against all colliders in the scene and returns detailed information on what was hit.</summary>
      <remarks></remarks>
      <param name="point1">The start of the capsule.</param>
      <param name="point2">The end of the capsule.</param>
      <param name="radius">The radius of the capsule.</param>
      <param name="direction">The direction into which to sweep the capsule.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit (See Also: RaycastHit).</param>
      <param name="distance">The length of the sweep.</param>
      <param name="layerMask">A Layer mask that is used to selectively ignore colliders when casting a capsule.</param>
    </member>
    <member name="M:UnityEngine.Physics.CapsuleCastAll(Vector3 point1,Vector3 point2,float radius,Vector3 direction,float distance = Mathf.Infinity,int layermask = DefaultRaycastLayers)">
      <summary>Like Physics.CapsuleCast, but this function will return all hits the capsule sweep intersects.</summary>
      <remarks></remarks>
      <param name="point1">The start of the capsule.</param>
      <param name="point2">The end of the capsule.</param>
      <param name="radius">The radius of the capsule.</param>
      <param name="direction">The direction into which to sweep the capsule.</param>
      <param name="distance">The length of the sweep.</param>
      <param name="layerMask">A Layer mask that is used to selectively ignore colliders when casting a capsule.</param>
    </member>
    <member name="M:UnityEngine.Physics.CheckCapsule(Vector3 start,Vector3 end,float radius,int layermask = DefaultRaycastLayers)">
      <summary>Returns true if there are any colliders overlapping the capsule defined by the axis going from start and end and having radius in world coordinates.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Physics.CheckSphere(Vector3 position,float radius,int layerMask = DefaultRaycastLayers)">
      <summary>Returns true if there are any colliders overlapping the sphere defined by position and radius in world coordinates.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Physics.GetIgnoreLayerCollision(int layer1,int layer2)">
      <summary>Are collisions between layer1 and layer2 being ignored?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Physics.IgnoreCollision(Collider collider1,Collider collider2,bool ignore = true)">
      <summary>Makes the collision detection system ignore all collisions between collider1 and collider2.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Physics.IgnoreLayerCollision(int layer1,int layer2,bool ignore = true)">
      <summary>Makes the collision detection system ignore all collisions between any collider in layer1 and any collider in layer2.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Physics.Linecast(Vector3 start,Vector3 end,int layerMask = DefaultRaycastLayers)">
      <summary>Returns true if there is any collider intersecting the line between start and end.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Physics.Linecast(Vector3 start,Vector3 end,RaycastHit hitInfo,int layerMask = DefaultRaycastLayers)">
      <summary>Returns true if there is any collider intersecting the line between start and end.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Physics.OverlapSphere(Vector3 position,float radius,int layerMask = AllLayers)">
      <summary>Returns an array with all colliders touching or inside the sphere.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Physics.Raycast(Vector3 origin,Vector3 direction,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Casts a ray against all colliders in the scene.</summary>
      <remarks></remarks>
      <param name="origin">The starting point of the ray in world coordinates.</param>
      <param name="direction">The direction of the ray.</param>
      <param name="distance">The length of the ray.</param>
      <param name="layerMask">A Layer mask that is used to selectively ignore colliders when casting a ray.</param>
    </member>
    <member name="M:UnityEngine.Physics.Raycast(Vector3 origin,Vector3 direction,RaycastHit hitInfo,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Casts a ray against all colliders in the scene and returns detailed information on what was hit.</summary>
      <remarks></remarks>
      <param name="origin">The starting point of the ray in world coordinates.</param>
      <param name="direction">The direction of the ray.</param>
      <param name="distance">The length of the ray.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit (See Also: RaycastHit).</param>
      <param name="layerMask">A Layer mask that is used to selectively ignore colliders when casting a ray.</param>
    </member>
    <member name="M:UnityEngine.Physics.Raycast(Ray ray,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Same as above using /ray.origin/ and /ray.direction/ instead of origin and direction.</summary>
      <remarks></remarks>
      <param name="ray">The starting point and direction of the ray.</param>
      <param name="distance">The length of the ray.</param>
      <param name="layerMask">A Layer mask that is used to selectively ignore colliders when casting a ray.</param>
    </member>
    <member name="M:UnityEngine.Physics.Raycast(Ray ray,RaycastHit hitInfo,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Same as above using /ray.origin/ and /ray.direction/ instead of origin and direction.</summary>
      <remarks></remarks>
      <param name="ray">The starting point and direction of the ray.</param>
      <param name="distance">The length of the ray.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit (See Also: RaycastHit).</param>
      <param name="layerMask">A Layer mask that is used to selectively ignore colliders when casting a ray.</param>
    </member>
    <member name="M:UnityEngine.Physics.RaycastAll(Ray ray,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Casts a ray through the scene and returns all hits. Note that order is not guaranteed.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Physics.SphereCast(Vector3 origin,float radius,Vector3 direction,RaycastHit hitInfo,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Casts a sphere against all colliders in the scene and returns detailed information on what was hit.</summary>
      <remarks></remarks>
      <param name="origin">The center of the sphere at the start of the sweep.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="direction">The direction into which to sweep the sphere.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit (See Also: RaycastHit).</param>
      <param name="distance">The length of the sweep.</param>
      <param name="layerMask">A Layer mask that is used to selectively ignore colliders when casting a capsule.</param>
    </member>
    <member name="M:UnityEngine.Physics.SphereCast(Ray ray,float radius,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Casts a sphere against all colliders in the scene and returns detailed information on what was hit.</summary>
      <remarks></remarks>
      <param name="ray">The starting point and direction of the ray into which the sphere sweep is cast.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="direction">The direction into which to sweep the sphere.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit (See Also: RaycastHit).</param>
      <param name="distance">The length of the sweep.</param>
      <param name="layerMask">A Layer mask that is used to selectively ignore colliders when casting a capsule.</param>
    </member>
    <member name="M:UnityEngine.Physics.SphereCastAll(Vector3 origin,float radius,Vector3 direction,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Like Physics.SphereCast, but this function will return all hits the sphere sweep intersects.</summary>
      <remarks></remarks>
      <param name="origin">The center of the sphere at the start of the sweep.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="direction">The direction into which to sweep the sphere.</param>
      <param name="distance">The length of the sweep.</param>
      <param name="layerMask">A Layer mask that is used to selectively ignore colliders when casting a capsule.</param>
    </member>
    <member name="M:UnityEngine.Physics.SphereCastAll(Ray ray,float radius,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Like Physics.SphereCast, but this function will return all hits the sphere sweep intersects.</summary>
      <remarks></remarks>
      <param name="ray">The starting point and direction of the ray into which the sphere sweep is cast.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="distance">The length of the sweep.</param>
      <param name="layerMask">A Layer mask that is used to selectively ignore colliders when casting a capsule.</param>
    </member>
    <member name="T:UnityEngine.PhysicMaterial">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.PhysicMaterial()">
      <summary>Creates a new material.</summary>
      <remarks></remarks>
      <param name="PhysicMaterial()"></param>
    </member>
    <member name="C:UnityEngine.PhysicMaterial(string name)">
      <summary>Creates a new material named name.</summary>
      <remarks></remarks>
      <param name="name)"></param>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.bounceCombine">
      <summary>Determines how the bounciness is combined.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.bounciness">
      <summary>How bouncy is the surface? A value of 0 will not bounce. A value of 1 will bounce without any loss of energy.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.dynamicFriction">
      <summary>The friction used when already moving.  This value has to be between 0 and 1.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.dynamicFriction2">
      <summary>If anisotropic friction is enabled, dynamicFriction2 will be applied along frictionDirection2.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.frictionCombine">
      <summary>Determines how the friction is combined.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.frictionDirection2">
      <summary>The direction of anisotropy. Anisotropic friction is enabled if the vector is not zero.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.staticFriction">
      <summary>The friction coefficient used when an object is lying on a surface.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.staticFriction2">
      <summary>If anisotropic friction is enabled, staticFriction2 will be applied along frictionDirection2.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ILocalUser">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILocalUser.authenticated">
      <summary>Checks if the current user has been authenticated.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILocalUser.friends">
      <summary>The users friends list.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILocalUser.underage">
      <summary>Is the user underage?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ILocalUser.Authenticate(Action&lt;bool&gt; callback)">
      <summary>Authenticate the local user to the current active Social API implementation and fetch his profile data.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ILocalUser.LoadFriends(Action&lt;bool&gt; callback)">
      <summary>Fetches the friends list of the logged in user. The friends list on the Social.localUser instance is populated if this call succeeds.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Graphics">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Graphics.Blit(Texture source,RenderTexture dest)">
      <summary>Copies source texture into destination render texture.</summary>
      <remarks></remarks>
      <param name="source">Source texture.</param>
      <param name="dest">Destination RenderTexture, or null to blit directly to screen.</param>
      <param name="mat">Material to use for copying. Material's shader could do some post-processing effect, for example.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.BlitMultiTap(Texture source,RenderTexture dest,Material mat,params Vector2[] offsets)">
      <summary>Copies source texture into destination, for multi-tap shader.</summary>
      <remarks></remarks>
      <param name="source">Source texture.</param>
      <param name="dest">Destination RenderTexture, or null to blit directly to screen.</param>
      <param name="mat">Material to use for copying. Material's shader should do some post-processing effect.</param>
      <param name="offsets">Variable number of filtering offsets. Offsets are given in pixels.</param>
    </member>
    <member name="M:UnityEngine.Graphics.ClearRandomWriteTargets()">
      <summary>Clear random write targets for DX11 pixel shaders.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(Mesh mesh,Vector3 position,Quaternion rotation,Material material,int layer,Camera camera = null,int submeshIndex = 0,MaterialPropertyBlock properties = null)">
      <summary>Draw a mesh.</summary>
      <remarks></remarks>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer">Layer to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMeshNow(Mesh mesh,Vector3 position,Quaternion rotation)">
      <summary>Draw a mesh immediately.</summary>
      <remarks></remarks>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations). Note that the mesh will not be displayed correctly if matrix has negative scale.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawProcedural(MeshTopology topology,int vertexCount,int instanceCount = 1)">
      <summary>Draws a fully procedural geometry on the GPU.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Graphics.DrawProceduralIndirect(MeshTopology topology,ComputeBuffer bufferWithArgs,int argsOffset = 0)">
      <summary>Draws a fully procedural geometry on the GPU.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Graphics.DrawTexture(Rect screenRect,Texture texture,Material mat = null)">
      <summary>Draw a texture in screen coordinates.</summary>
      <remarks></remarks>
      <param name="screenRect">Rectangle on the screen to use for the texture. In pixel coordinates with (0,0) in the upper-left corner.</param>
      <param name="texture">Texture to draw.</param>
      <param name="sourceRect">Region of the texture to use. In normalized coordinates with (0,0) in the bottom-left corner.</param>
      <param name="leftBorder">Number of pixels from the left that are not affected by scale.</param>
      <param name="rightBorder">Number of pixels from the right that are not affected by scale.</param>
      <param name="topBorder">Number of pixels from the top that are not affected by scale.</param>
      <param name="bottomBorder">Number of pixels from the bottom that are not affected by scale.</param>
      <param name="color">Color that modulates the output. The neutral value is (0.5, 0.5, 0.5, 0.5). Set as vertex color for the shader.</param>
      <param name="mat">Custom Material that can be used to draw the texture. If null is passed, a default material with the Internal-GUITexture.shader is used.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRandomWriteTarget(int index,RenderTexture uav)">
      <summary>Set random write target for DX11 pixel shaders.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Graphics.SetRenderTarget(RenderTexture rt)">
      <summary>Sets current render target.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SliderJoint2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.anchor">
      <summary>The joint's anchor point on the object that has the HingeJoint2D component.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.angle">
      <summary>The angle of the line in space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.connectedAnchor">
      <summary>The joint's anchor point on the second object (ie, the one which doesn't have the component).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.limits">
      <summary>Restrictions on how far the joint can slide in each direction along the line.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.motor">
      <summary>Parameters for a motor force that is applied automatically to the Rigibody2D along the line.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.useLimits">
      <summary>Should motion limits be used?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.useMotor">
      <summary>Should a motor force be applied automatically to the Rigidbody2D?</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.NetworkViewID">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkViewID.isMine">
      <summary>True if instantiated by me.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkViewID.owner">
      <summary>The NetworkPlayer who owns the NetworkView. Could be the server.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NetworkViewID.ToString()">
      <summary>Returns a formatted string with details on this NetworkViewID.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.HostData">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HostData.comment">
      <summary>A miscellaneous comment (can hold data).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HostData.connectedPlayers">
      <summary>Currently connected players.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HostData.gameName">
      <summary>The name of the game (like John Doe's Game).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HostData.gameType">
      <summary>The type of the game (like "MyUniqueGameType").</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HostData.guid">
      <summary>The GUID of the host, needed when connecting with NAT punchthrough.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HostData.ip">
      <summary>Server IP address.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HostData.passwordProtected">
      <summary>Does the server require a password?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HostData.playerLimit">
      <summary>Maximum players limit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HostData.port">
      <summary>Server port.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HostData.useNat">
      <summary>Does this server require NAT punchthrough?</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.OffMeshLink">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLink.activated">
      <summary>Is link active.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLink.autoUpdatePositions">
      <summary>Automatically update endpoints.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLink.biDirectional">
      <summary>Can link be traversed in both directions.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLink.costOverride">
      <summary>Modify pathfinding cost for the link.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLink.endTransform">
      <summary>The transform representing link end position.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLink.navMeshLayer">
      <summary>NavMeshLayer for this OffMeshLink component.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLink.occupied">
      <summary>Is link occupied. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OffMeshLink.startTransform">
      <summary>The transform representing link start position.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.OffMeshLink.UpdatePositions()">
      <summary>Explicitly update the link endpoints.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Animation">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animation.animatePhysics">
      <summary>When turned on, animations will be executed in the physics loop. This is only useful in conjunction with kinematic rigidbodies.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animation.clip">
      <summary>The default animation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animation.cullingType">
      <summary>Controls culling of this Animation component.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animation.isPlaying">
      <summary>Are we playing any animations?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animation.localBounds">
      <summary>AABB of this Animation animation component in local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animation.playAutomatically">
      <summary>Should the default animation clip (Animation.clip) automatically start playing on startup.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animation.this[string]">
      <summary>Returns the animation state named name.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Animation.wrapMode">
      <summary>How should time beyond the playback range of the clip be treated?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.AddClip(AnimationClip clip,string newName)">
      <summary>Adds a clip to the animation with name newName.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.AddClip(AnimationClip clip,string newName,int firstFrame,int lastFrame,bool addLoopFrame = false)">
      <summary>Adds clip to the only play between firstFrame and lastFrame. The new clip will also be added to the animation with name newName.</summary>
      <remarks></remarks>
      <param name="addLoopFrame">Should an extra frame be inserted at the end that matches the first frame? Turn this on if you are making a looping animation.</param>
    </member>
    <member name="M:UnityEngine.Animation.Blend(string animation,float targetWeight = 1.0F,float fadeLength = 0.3F)">
      <summary>Blends the animation named animation towards targetWeight over the next time seconds.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.CrossFade(string animation,float fadeLength = 0.3F,PlayMode mode = PlayMode.StopSameLayer)">
      <summary>Fades the animation with name animation in over a period of time seconds and fades other animations out.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.CrossFadeQueued(string animation,float fadeLength = 0.3F,QueueMode queue = QueueMode.CompleteOthers,PlayMode mode = PlayMode.StopSameLayer)">
      <summary>Cross fades an animation after previous animations has finished playing.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.GetClipCount()">
      <summary>Get the number of clips currently assigned to this animation.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.IsPlaying(string name)">
      <summary>Is the animation named name playing?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.Play(PlayMode mode = PlayMode.StopSameLayer)">
      <summary>Plays animation without any blending.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.PlayQueued(string animation,QueueMode queue = QueueMode.CompleteOthers,PlayMode mode = PlayMode.StopSameLayer)">
      <summary>Plays an animation after previous animations has finished playing.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.RemoveClip(AnimationClip clip)">
      <summary>Remove clip from the animation list.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.RemoveClip(string clipName)">
      <summary>Remove clip from the animation list.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.Rewind(string name)">
      <summary>Rewinds the animation named name.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.Rewind()">
      <summary>Rewinds all animations.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.Sample()">
      <summary>Samples animations at the current state.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.Stop()">
      <summary>Stops all playing animations that were started with this Animation.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Animation.Stop(string name)">
      <summary>Stops an animation named name.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Gyroscope">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Gyroscope.attitude">
      <summary>Returns the attitude (ie, orientation in space) of the device.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Gyroscope.enabled">
      <summary>Sets or retrieves the enabled status of this gyroscope.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Gyroscope.gravity">
      <summary>Returns the gravity acceleration vector expressed in the device's reference frame.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Gyroscope.rotationRate">
      <summary>Returns rotation rate as measured by the device's gyroscope.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Gyroscope.rotationRateUnbiased">
      <summary>Returns unbiased rotation rate as measured by the device's gyroscope.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Gyroscope.updateInterval">
      <summary>Sets or retrieves gyroscope interval in seconds.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Gyroscope.userAcceleration">
      <summary>Returns the acceleration that the user is giving to the device.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.PlayerPrefs">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.DeleteAll()">
      <summary>Removes all keys and values from the preferences. Use with caution.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.DeleteKey(string key)">
      <summary>Removes key and its corresponding value from the preferences.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.GetFloat(string key,float defaultValue = 0.0F)">
      <summary>Returns the value corresponding to key in the preference file if it exists.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.GetInt(string key,int defaultValue = 0)">
      <summary>Returns the value corresponding to key in the preference file if it exists.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.GetString(string key,string defaultValue = &quot;&quot;)">
      <summary>Returns the value corresponding to key in the preference file if it exists.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.HasKey(string key)">
      <summary>Returns true if key exists in the preferences.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.Save()">
      <summary>Writes all modified preferences to disk.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.SetFloat(string key,float value)">
      <summary>Sets the value of the preference identified by key.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.SetInt(string key,int value)">
      <summary>Sets the value of the preference identified by key.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.SetString(string key,string value)">
      <summary>Sets the value of the preference identified by key.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Collider">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collider.attachedRigidbody">
      <summary>The rigidbody the collider is attached to.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collider.bounds">
      <summary>The world space bounding volume of the collider.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collider.enabled">
      <summary>Enabled Colliders will collide with other colliders, disabled Colliders won't.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collider.isTrigger">
      <summary>Is the collider a trigger?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collider.material">
      <summary>The material used by the collider.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collider.sharedMaterial">
      <summary>The shared physic material of this collider.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Collider.ClosestPointOnBounds(Vector3 position)">
      <summary>The closest point to the bounding box of the attached collider.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Collider.Raycast(Ray ray,RaycastHit hitInfo,float distance)">
      <summary>Casts a Ray that ignores all Colliders except this one.</summary>
      <remarks></remarks>
      <param name="ray">The starting point and direction of the ray.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit (See Also: RaycastHit).</param>
      <param name="distance">The length of the ray.</param>
    </member>
    <member name="T:UnityEngine.AnimationClip">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.AnimationClip()">
      <summary>Creates a new animation clip.</summary>
      <remarks></remarks>
      <param name="AnimationClip()"></param>
    </member>
    <member name="P:UnityEngine.AnimationClip.frameRate">
      <summary>Frame rate at which keyframes are sampled. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationClip.length">
      <summary>Animation length in seconds. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationClip.localBounds">
      <summary>AABB of this Animation Clip in local space of Animation component that it is attached too.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationClip.wrapMode">
      <summary>Sets the default wrap mode used in the animation state.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationClip.AddEvent(AnimationEvent evt)">
      <summary>Adds an animation event to the clip.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationClip.ClearCurves()">
      <summary>Clears all curves from the clip.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationClip.SetCurve(string relativePath,Type type,string propertyName,AnimationCurve curve)">
      <summary>Assigns the curve to animate a specific property.</summary>
      <remarks></remarks>
      <param name="type">The class type of the component that is animated.</param>
      <param name="propertyName">The name or path to the property being animated.</param>
      <param name="curve">The animation curve.</param>
      <param name="relativePath">Path to the game object this curve applies to. relativePath is formatted similar to a pathname, e.g. "rootspineleftArm".&#13;
If relativePath is empty it refers to the game object the animation clip is attached to.</param>
    </member>
    <member name="T:UnityEngine.HumanDescription">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanDescription.armStretch">
      <summary>Amount by which the arm's length is allowed to stretch when using IK.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanDescription.feetSpacing">
      <summary>Modification to the minimum distance between the feet of a humanoid model.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanDescription.human">
      <summary>Mapping between Mecanim bone names and bone names in the rig.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanDescription.legStretch">
      <summary>Amount by which the leg's length is allowed to stretch when using IK.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanDescription.lowerArmTwist">
      <summary>Defines how the lower arm's roll/twisting is distributed between the elbow and wrist joints.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanDescription.lowerLegTwist">
      <summary>Defines how the lower leg's roll/twisting is distributed between the knee and ankle.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanDescription.skeleton">
      <summary>List of bone Transforms to include in the model.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanDescription.upperArmTwist">
      <summary>Defines how the lower arm's roll/twisting is distributed between the shoulder and elbow joints.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanDescription.upperLegTwist">
      <summary>Defines how the upper leg's roll/twisting is distributed between the thigh and knee joints.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.RectOffset">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.RectOffset()">
      <summary>Creates a new rectangle with offsets.</summary>
      <remarks></remarks>
      <param name="RectOffset()"></param>
    </member>
    <member name="P:UnityEngine.RectOffset.bottom">
      <summary>Bottom edge size.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RectOffset.horizontal">
      <summary>Shortcut for left + right. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RectOffset.left">
      <summary>Left edge size.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RectOffset.right">
      <summary>Right edge size.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RectOffset.top">
      <summary>Top edge size.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RectOffset.vertical">
      <summary>Shortcut for top + bottom. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.RectOffset.Add(Rect rect)">
      <summary>Add the border offsets to a rect.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.RectOffset.Remove(Rect rect)">
      <summary>Remove the border offsets from a rect.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.WWWForm">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.WWWForm()">
      <summary>Creates an empty WWWForm object.</summary>
      <remarks></remarks>
      <param name="WWWForm()"></param>
    </member>
    <member name="P:UnityEngine.WWWForm.data">
      <summary>(Read Only) The raw data to pass as the POST request body when sending the form.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WWWForm.headers">
      <summary>(Read Only) Returns the correct request headers for posting the form using the WWW class.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WWWForm.AddBinaryData(string fieldName,byte[] contents,string fileName = null,string mimeType = null)">
      <summary>Add binary data to the form.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WWWForm.AddField(string fieldName,string value,Encoding e = System.Text.Encoding.UTF8)">
      <summary>Add a simple field to the form.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WWWForm.AddField(string fieldName,int i)">
      <summary>Adds a simple field to the form.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Application">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.CancelQuit()">
      <summary>Cancels quitting the application. This is useful for showing a splash screen at the end of a game.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.CanStreamedLevelBeLoaded(int levelIndex)">
      <summary>Can the streamed level be loaded?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.CanStreamedLevelBeLoaded(string levelName)">
      <summary>Can the streamed level be loaded?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.CaptureScreenshot(string filename,int superSize = 0)">
      <summary>Captures a screenshot at path filename as a PNG file.</summary>
      <remarks></remarks>
      <param name="filename">Pathname to save the screenshot file to.</param>
      <param name="superSize">Factor by which to increase resolution.</param>
    </member>
    <member name="M:UnityEngine.Application.ExternalCall(string functionName,params object[] args)">
      <summary>Calls a function in the containing web page (Web Player only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.ExternalEval(string script)">
      <summary>Evaluates script snippet in the containing web page (Web Player only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.GetStreamProgressForLevel(int levelIndex)">
      <summary>How far has the download progressed? [0...1].</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.GetStreamProgressForLevel(string levelName)">
      <summary>How far has the download progressed? [0...1].</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.HasProLicense()">
      <summary>Is Unity activated with the Pro license?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.HasUserAuthorization(UserAuthorization mode)">
      <summary>Check if the user has authorized use of the webcam or microphone in the Web Player.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.LoadLevel(int index)">
      <summary>Loads the level by its name or index.</summary>
      <remarks></remarks>
      <param name="index">The level to load.</param>
      <param name="name">The name of the level to load.</param>
    </member>
    <member name="M:UnityEngine.Application.LoadLevelAdditive(int index)">
      <summary>Loads a level additively.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.LoadLevelAdditiveAsync(int index)">
      <summary>Loads the level additively and asynchronously in the background.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.LoadLevelAsync(int index)">
      <summary>Loads the level asynchronously in the background.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.OpenURL(string url)">
      <summary>Opens the url in a browser.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.Quit()">
      <summary>Quits the player application. Quit is ignored in the editor or the web player.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.RegisterLogCallback(LogCallback handler)">
      <summary>Register a delegate to be called on log messages.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.RegisterLogCallbackThreaded(LogCallback handler)">
      <summary>Register a delegate to be called on log messages.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Application.RequestUserAuthorization(UserAuthorization mode)">
      <summary>Request authorization to use the webcam or microphone in the Web Player.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Plane">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Plane(Vector3 inNormal,&#13;&#10;Vector3 inPoint)">
      <summary>Creates a plane.</summary>
      <remarks></remarks>
      <param name="inNormal"></param>
      <param name="inPoint)"></param>
    </member>
    <member name="C:UnityEngine.Plane(Vector3 inNormal,&#13;&#10;float d)">
      <summary>Creates a plane.</summary>
      <remarks></remarks>
      <param name="inNormal"></param>
      <param name="d)"></param>
    </member>
    <member name="C:UnityEngine.Plane(Vector3 a,&#13;&#10;Vector3 b,&#13;&#10;Vector3 c)">
      <summary>Creates a plane.</summary>
      <remarks></remarks>
      <param name="a"></param>
      <param name="b"></param>
      <param name="c)"></param>
    </member>
    <member name="P:UnityEngine.Plane.distance">
      <summary>Distance from the origin to the plane.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Plane.normal">
      <summary>Normal vector of the plane.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Plane.GetDistanceToPoint(Vector3 inPt)">
      <summary>Returns a signed distance from plane to point.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Plane.GetSide(Vector3 inPt)">
      <summary>Is a point on the positive side of the plane?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Plane.Raycast(Ray ray,float enter)">
      <summary>Intersects a ray with the plane.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Plane.SameSide(Vector3 inPt0,Vector3 inPt1)">
      <summary>Are two points on the same side of the plane?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Plane.Set3Points(Vector3 a,Vector3 b,Vector3 c)">
      <summary>Sets a plane using three points that lie within it.  The points go around clockwise as you look down on the top surface of the plane.</summary>
      <remarks></remarks>
      <param name="a">First point in clockwise order.</param>
      <param name="b">Second point in clockwise order.</param>
      <param name="c">Third point in clockwise order.</param>
    </member>
    <member name="M:UnityEngine.Plane.SetNormalAndPosition(Vector3 inNormal,Vector3 inPoint)">
      <summary>Sets a plane using a point that lies within it along with a normal to orient it.</summary>
      <remarks></remarks>
      <param name="inNormal">The plane's normal vector.</param>
      <param name="inPoint">A point that lies on the plane.</param>
    </member>
    <member name="T:UnityEngine.AudioLowPassFilter">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioLowPassFilter.cutoffFrequency">
      <summary>Lowpass cutoff frequency in hz. 10.0 to 22000.0. Default = 5000.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioLowPassFilter.lowpassResonaceQ">
      <summary>Determines how much the filter's self-resonance is dampened.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.DetailPrototype">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DetailPrototype.bendFactor">
      <summary>Bend factor of the detailPrototype.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DetailPrototype.dryColor">
      <summary>Color when the DetailPrototypes are "dry".</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DetailPrototype.healthyColor">
      <summary>Color when the DetailPrototypes are "healthy".</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DetailPrototype.maxHeight">
      <summary>Maximum height of the grass billboards (if render mode is GrassBillboard).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DetailPrototype.maxWidth">
      <summary>Maximum width of the grass billboards (if render mode is GrassBillboard).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DetailPrototype.minHeight">
      <summary>Minimum height of the grass billboards (if render mode is GrassBillboard).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DetailPrototype.minWidth">
      <summary>Minimum width of the grass billboards (if render mode is GrassBillboard).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DetailPrototype.noiseSpread">
      <summary>How spread out is the noise for the DetailPrototype.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DetailPrototype.prototype">
      <summary>GameObject used by the DetailPrototype.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DetailPrototype.prototypeTexture">
      <summary>Texture used by the DetailPrototype.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DetailPrototype.renderMode">
      <summary>Render mode for the DetailPrototype.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AnimationState">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationState.blendMode">
      <summary>Which blend mode should be used?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationState.clip">
      <summary>The clip that is being played by this animation state.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationState.enabled">
      <summary>Enables / disables the animation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationState.length">
      <summary>The length of the animation clip in seconds.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationState.name">
      <summary>The name of the animation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationState.normalizedSpeed">
      <summary>The normalized playback speed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationState.normalizedTime">
      <summary>The normalized time of the animation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationState.speed">
      <summary>The playback speed of the animation. 1 is normal playback speed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationState.time">
      <summary>The current time of the animation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationState.weight">
      <summary>The weight of animation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationState.wrapMode">
      <summary>Wrapping mode of the animation.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationState.AddMixingTransform(Transform mix,bool recursive = true)">
      <summary>Adds a transform which should be animated. This allows you to reduce the number of animations you have to create.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationState.RemoveMixingTransform(Transform mix)">
      <summary>Removes a transform which should be animated.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.BitStream">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BitStream.isReading">
      <summary>Is the BitStream currently being read? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BitStream.isWriting">
      <summary>Is the BitStream currently being written? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(bool value)">
      <summary>Serializes different types of variables.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Directory">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Windows.Directory.CreateDirectory(string path)">
      <summary>Creates directory in the specified path.</summary>
      <remarks></remarks>
      <param name="path">The directory path to create.</param>
    </member>
    <member name="M:UnityEngine.Windows.Directory.Delete(string path)">
      <summary>Deletes a directory from a specified path.</summary>
      <remarks></remarks>
      <param name="path">The name of the directory to remove.</param>
    </member>
    <member name="M:UnityEngine.Windows.Directory.Exists(string path)">
      <summary>Determines whether the given path refers to an existing directory.</summary>
      <remarks></remarks>
      <param name="path">The path to test.</param>
    </member>
    <member name="T:UnityEngine.DistanceJoint2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DistanceJoint2D.anchor">
      <summary>The joint's anchor point on the object that has the DistanceJoint2D component.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DistanceJoint2D.connectedAnchor">
      <summary>The joint's anchor point on the second object (ie, the one which doesn't have the component).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.DistanceJoint2D.distance">
      <summary>The distance separating the two ends of the joint.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ILeaderboard">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILeaderboard.id">
      <summary>Unique identifier for this leaderboard.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILeaderboard.loading">
      <summary>The leaderboad is in the process of loading scores.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILeaderboard.localUserScore">
      <summary>The leaderboard score of the logged in user.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILeaderboard.maxRange">
      <summary>The total amount of scores the leaderboard contains.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILeaderboard.range">
      <summary>The rank range this leaderboard returns.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILeaderboard.scores">
      <summary>The leaderboard scores returned by a query.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILeaderboard.timeScope">
      <summary>The time period/scope searched by this leaderboard.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILeaderboard.title">
      <summary>The human readable title of this leaderboard.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ILeaderboard.userScope">
      <summary>The users scope searched by this leaderboard.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ILeaderboard.LoadScores(Action&lt;bool&gt; callback)">
      <summary>Load scores according to the filters set on this leaderboard.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ILeaderboard.SetUserFilter(string[] userIDs)">
      <summary>Only search for these user IDs.</summary>
      <remarks></remarks>
      <param name="userIDs">List of user ids.</param>
    </member>
    <member name="T:UnityEngine.ComputeBuffer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.ComputeBuffer(int count,&#13;&#10;int stride)">
      <summary>Create a Compute Buffer.</summary>
      <remarks></remarks>
      <param name="count"></param>
      <param name="stride)"></param>
    </member>
    <member name="P:UnityEngine.ComputeBuffer.count">
      <summary>Number of elements in the buffer (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ComputeBuffer.stride">
      <summary>Size of one element in the buffer (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.GetData(Array data)">
      <summary>Read data values from the buffer into an array.</summary>
      <remarks></remarks>
      <param name="data">An array to receive the data.</param>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.Release()">
      <summary>Release a Compute Buffer.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.SetData(Array data)">
      <summary>Set the buffer with values from an array.</summary>
      <remarks></remarks>
      <param name="data">Array of values to fill the buffer.</param>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.CopyCount(ComputeBuffer src,ComputeBuffer dst,int dstOffset)">
      <summary>Set buffer data.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ConstantForce">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConstantForce.force">
      <summary>The force applied to the rigidbody every frame.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConstantForce.relativeForce">
      <summary>The force - relative to the rigid bodies coordinate system - applied every frame.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConstantForce.relativeTorque">
      <summary>The torque - relative to the rigid bodies coordinate system - applied every frame.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConstantForce.torque">
      <summary>The torque applied to the rigidbody every frame.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AnimationClipPair">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationClipPair.originalClip">
      <summary>The original clip from the controller.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationClipPair.overrideClip">
      <summary>The override animation clip.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUILayoutUtility">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetAspectRect(float aspect)">
      <summary>Reserve layout space for a rectangle with a specific aspect ratio.</summary>
      <remarks></remarks>
      <param name="aspect">The aspect ratio of the element (width / height).</param>
      <param name="style">An optional style. If specified, the style's padding value will be added to the sizes of the returned rectangle &amp; the style's margin values will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetLastRect()">
      <summary>Get the rectangle last used by GUILayout for a control.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(GUIContent content,GUIStyle style)">
      <summary>Reserve layout space for a rectangle for displaying some contents with a specific style.</summary>
      <remarks></remarks>
      <param name="content">The content to make room for displaying.</param>
      <param name="style">The GUIStyle to layout for.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(float width,float height)">
      <summary>Reserve layout space for a rectangle with a fixed content area.</summary>
      <remarks></remarks>
      <param name="width">The width of the area you want.</param>
      <param name="height">The height of the area you want.</param>
      <param name="style">An optional GUIStyle to layout for. If specified, the style's padding value will be added to your sizes &amp; its margin value will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(float minWidth,float maxWidth,float minHeight,float maxHeight)">
      <summary>Reserve layout space for a flexible rect.</summary>
      <remarks></remarks>
      <param name="minWidth">The minimum width of the area passed back.</param>
      <param name="maxWidth">The maximum width of the area passed back.</param>
      <param name="minHeight">The minimum width of the area passed back.</param>
      <param name="maxHeight">The maximum width of the area passed back.</param>
      <param name="style">An optional style. If specified, the style's padding value will be added to the sizes requested &amp; the style's margin values will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="T:UnityEngine.RaycastHit2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.collider">
      <summary>The collider hit by the ray.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.fraction">
      <summary>Fraction of the distance along the ray that the hit occurred.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.normal">
      <summary>The normal vector of the surface hit by the ray.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.point">
      <summary>The point in world space where the ray hit the collider's surface.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.rigidbody">
      <summary>The Rigidbody2D attached to the object that was hit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.transform">
      <summary>The Transform of the object that was hit.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Material">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Material(string contents)">
      <summary>Create a temporary material from a shader source string.</summary>
      <remarks></remarks>
      <param name="contents)"></param>
    </member>
    <member name="C:UnityEngine.Material(Shader shader)">
      <summary>Create a temporary Material from a Shader.</summary>
      <remarks></remarks>
      <param name="shader)"></param>
    </member>
    <member name="C:UnityEngine.Material(Material source)">
      <summary>Create a temporary Material by copying the shader and all properties from the source Material.</summary>
      <remarks></remarks>
      <param name="source)"></param>
    </member>
    <member name="P:UnityEngine.Material.color">
      <summary>The main material's color.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Material.mainTexture">
      <summary>The material's texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Material.mainTextureOffset">
      <summary>The texture offset of the main texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Material.mainTextureScale">
      <summary>The texture scale of the main texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Material.passCount">
      <summary>How many passes are in this material (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Material.renderQueue">
      <summary>Render queue of this material.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Material.shader">
      <summary>The shader used by the material.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Material.shaderKeywords">
      <summary>Additional shader keywords set by this material.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.CopyPropertiesFromMaterial(Material mat)">
      <summary>Copy properties from other material into this material.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.DisableKeyword(string keyword)">
      <summary>Unset a shader keyword.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.EnableKeyword(string keyword)">
      <summary>Set a shader keyword that is enabled by this material.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.GetColor(string propertyName)">
      <summary>Get a named color value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.GetFloat(string propertyName)">
      <summary>Get a named float value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.GetInt(string propertyName)">
      <summary>Get a named integer value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.GetMatrix(string propertyName)">
      <summary>Get a named matrix value from the shader.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.GetTag(string tag,bool searchFallbacks,string defaultValue = &quot;&quot;)">
      <summary>Get the value of material's shader tag.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.GetTexture(string propertyName)">
      <summary>Get a named texture.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.GetTextureOffset(string propertyName)">
      <summary>Gets the placement offset of texture propertyName.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.GetTextureScale(string propertyName)">
      <summary>Gets the placement scale of texture propertyName.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.GetVector(string propertyName)">
      <summary>Get a named vector value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.HasProperty(string propertyName)">
      <summary>Checks if material's shader has a property of a given name.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.Lerp(Material start,Material end,float t)">
      <summary>Interpolate properties between two materials.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.SetBuffer(string propertyName,ComputeBuffer buffer)">
      <summary>Set a ComputeBuffer value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.SetColor(string propertyName,Color color)">
      <summary>Set a named color value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.SetFloat(string propertyName,float value)">
      <summary>Set a named float value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.SetInt(string propertyName,int value)">
      <summary>Set a named integer value.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.SetMatrix(string propertyName,Matrix4x4 matrix)">
      <summary>Set a named matrix for the shader.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.SetPass(int pass)">
      <summary>Activate the given pass for rendering.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.SetTexture(string propertyName,Texture texture)">
      <summary>Set a named texture.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.SetTextureOffset(string propertyName,Vector2 offset)">
      <summary>Sets the placement offset of texture propertyName.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.SetTextureScale(string propertyName,Vector2 scale)">
      <summary>Sets the placement scale of texture propertyName.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Material.SetVector(string propertyName,Vector4 vector)">
      <summary>Set a named vector value.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ISocialPlatform">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ISocialPlatform.localUser">
      <summary>See Social.localUser.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.CreateAchievement()">
      <summary>See Social.CreateAchievement.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.CreateLeaderboard()">
      <summary>See Social.CreateLeaderboard.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.LoadAchievementDescriptions(Action&lt;IAchievementDescription[]&gt; callback)">
      <summary>See Social.LoadAchievementDescriptions.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.LoadAchievements(Action&lt;IAchievement[]&gt; callback)">
      <summary>See Social.LoadAchievements.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.LoadScores(string leaderboardID,Action&lt;IScore[]&gt; callback)">
      <summary>See Social.LoadScores.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.LoadUsers(string[] userIDs,Action&lt;IUserProfile[]&gt; callback)">
      <summary>See Social.LoadUsers.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.ReportProgress(string achievementID,double progress,Action&lt;bool&gt; callback)">
      <summary>See Social.ReportProgress.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.ReportScore(long score,string board,Action&lt;bool&gt; callback)">
      <summary>See Social.ReportScore.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.ShowAchievementsUI()">
      <summary>See Social.ShowAchievementsUI.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.ShowLeaderboardUI()">
      <summary>See Social.ShowLeaderboardUI.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Font">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Font()">
      <summary>Create a new Font.</summary>
      <remarks></remarks>
      <param name="Font()"></param>
    </member>
    <member name="P:UnityEngine.Font.characterInfo">
      <summary>Access an array of all characters contained in the font texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Font.material">
      <summary>The material used for the font display.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Font.textureRebuildCallback">
      <summary>Set a function to be called when the dynamic font texture is rebuilt.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Font.GetCharacterInfo(char ch,characterInfo info,int size = 0,FontStyle style = FontStyle.Normal)">
      <summary>Get rendering info for a specific character.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Font.HasCharacter(char c)">
      <summary>Does this font have a specific character?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Font.RequestCharactersInTexture(string characters,int size = 0,FontStyle style = FontStyle.Normal)">
      <summary>Request characters to be added to the font texture (dynamic fonts only).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Transform">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.childCount">
      <summary>The number of children the Transform has.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.eulerAngles">
      <summary>The rotation as Euler angles in degrees.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.forward">
      <summary>The blue axis of the transform in world space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.hasChanged">
      <summary>Has the transform changed since the last time the flag was set to 'false'?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.localEulerAngles">
      <summary>The rotation as Euler angles in degrees relative to the parent transform's rotation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.localPosition">
      <summary>Position of the transform relative to the parent transform.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.localRotation">
      <summary>The rotation of the transform relative to the parent transform's rotation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.localScale">
      <summary>The scale of the transform relative to the parent.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.localToWorldMatrix">
      <summary>Matrix that transforms a point from local space into world space (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.lossyScale">
      <summary>The global scale of the object (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.parent">
      <summary>The parent of the transform.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.position">
      <summary>The position of the transform in world space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.right">
      <summary>The red axis of the transform in world space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.root">
      <summary>Returns the topmost transform in the hierarchy.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.rotation">
      <summary>The rotation of the transform in world space stored as a Quaternion.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.up">
      <summary>The green axis of the transform in world space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Transform.worldToLocalMatrix">
      <summary>Matrix that transforms a point from world space into local space (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.DetachChildren()">
      <summary>Unparents all children.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.Find(string name)">
      <summary>Finds a child by name and returns it.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.GetChild(int index)">
      <summary>Returns a transform child by index.</summary>
      <remarks></remarks>
      <param name="index">Index of the child transform to return. Must be smaller then Transform.childCount.</param>
    </member>
    <member name="M:UnityEngine.Transform.InverseTransformDirection(Vector3 direction)">
      <summary>Transforms a direction from world space to local space. The opposite of Transform.TransformDirection.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.InverseTransformDirection(float x,float y,float z)">
      <summary>Transforms the direction x, y, z from world space to local space. The opposite of Transform.TransformDirection.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.InverseTransformPoint(Vector3 position)">
      <summary>Transforms position from world space to local space. The opposite of Transform.TransformPoint.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.InverseTransformPoint(float x,float y,float z)">
      <summary>Transforms the position x, y, z from world space to local space. The opposite of Transform.TransformPoint.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.IsChildOf(Transform parent)">
      <summary>Is this transform a child of parent?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.LookAt(Transform target,Vector3 worldUp = Vector3.up)">
      <summary>Rotates the transform so the forward vector points at target's current position.</summary>
      <remarks></remarks>
      <param name="target">Object to point towards.</param>
      <param name="worldUp">Vector specifying the upward direction.</param>
    </member>
    <member name="M:UnityEngine.Transform.LookAt(Vector3 worldPosition,Vector3 worldUp = Vector3.up)">
      <summary>Rotates the transform so the forward vector points at worldPosition.</summary>
      <remarks></remarks>
      <param name="worldPosition">Point to look at.</param>
      <param name="worldUp">Vector specifying the upward direction.</param>
    </member>
    <member name="M:UnityEngine.Transform.Rotate(Vector3 eulerAngles,Space relativeTo = Space.Self)">
      <summary>Applies a rotation of /eulerAngles.z/ degrees around the z axis, /eulerAngles.x/ degrees around the x axis, and /eulerAngles.y/ degrees around the y axis (in that order).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.Rotate(float xAngle,float yAngle,float zAngle,Space relativeTo = Space.Self)">
      <summary>Applies a rotation of zAngle degrees around the z axis, xAngle degrees around the x axis, and yAngle degrees around the y axis (in that order).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.Rotate(Vector3 axis,float angle,Space relativeTo = Space.Self)">
      <summary>Rotates the transform around axis by angle degrees.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.RotateAround(Vector3 point,Vector3 axis,float angle)">
      <summary>Rotates the transform about axis passing through point in world coordinates by angle degrees.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.TransformDirection(Vector3 direction)">
      <summary>Transforms direction from local space to world space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.TransformDirection(float x,float y,float z)">
      <summary>Transforms direction x, y, z from local space to world space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.TransformPoint(Vector3 position)">
      <summary>Transforms position from local space to world space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.TransformPoint(float x,float y,float z)">
      <summary>Transforms the position x, y, z from local space to world space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.Translate(Vector3 translation,Space relativeTo = Space.Self)">
      <summary>Moves the transform in the direction and distance of translation.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.Translate(float x,float y,float z,Space relativeTo = Space.Self)">
      <summary>Moves the transform by x along the x axis, y along the y axis, and z along the z axis.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.Translate(Vector3 translation,Transform relativeTo)">
      <summary>Moves the transform in the direction and distance of translation.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Transform.Translate(float x,float y,float z,Transform relativeTo)">
      <summary>Moves the transform by x along the x axis, y along the y axis, and z along the z axis.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.CharacterJoint">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterJoint.highTwistLimit">
      <summary>The upper limit around the primary axis of the character joint.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterJoint.lowTwistLimit">
      <summary>The lower limit around the primary axis of the character joint.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterJoint.swing1Limit">
      <summary>The limit around the primary axis of the character joint.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterJoint.swing2Limit">
      <summary>The limit around the primary axis of the character joint.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterJoint.swingAxis">
      <summary>The secondary axis around which the joint can rotate.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ClothRenderer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ClothRenderer.pauseWhenNotVisible">
      <summary>Pause the cloth simulation, when the ClothRenderer is not currently visible.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AudioSettings">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AudioSettings.GetDSPBufferSize(int bufferLength,int numBuffers)">
      <summary>Get or set the mixer's buffer size in samples.</summary>
      <remarks></remarks>
      <param name="bufferLength">Is the length of each buffer in the ringbuffer.</param>
      <param name="numBuffers">Is number of buffers.</param>
    </member>
    <member name="M:UnityEngine.AudioSettings.SetDSPBufferSize(int bufferLength,int numBuffers)">
      <summary>Get or set the mixer's buffer size in samples.</summary>
      <remarks></remarks>
      <param name="bufferLength">Is the length of each buffer in the ringbuffer.</param>
      <param name="numBuffers">Is number of buffers.</param>
    </member>
    <member name="T:UnityEngine.WebCamTexture">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.WebCamTexture()">
      <summary>Create a WebCamTexture.</summary>
      <remarks></remarks>
      <param name="WebCamTexture()"></param>
    </member>
    <member name="P:UnityEngine.WebCamTexture.deviceName">
      <summary>Set this to specify the name of the device to use.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WebCamTexture.didUpdateThisFrame">
      <summary>Did the video buffer update this frame?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WebCamTexture.isPlaying">
      <summary>Returns if the camera is currently playing.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WebCamTexture.isReadable">
      <summary>Returns if the WebCamTexture is non-readable. (iOS only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WebCamTexture.requestedFPS">
      <summary>Set the requested frame rate of the camera device (in frames per second).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WebCamTexture.requestedHeight">
      <summary>Set the requested height of the camera device.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WebCamTexture.requestedWidth">
      <summary>Set the requested width of the camera device.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WebCamTexture.videoRotationAngle">
      <summary>Returns an clockwise angle, which can be used to rotate a polygon so camera contents are shown in correct orientation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WebCamTexture.videoVerticallyMirrored">
      <summary>Returns if the texture image is vertically flipped.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixel(int x,int y)">
      <summary>Returns pixel color at coordinates (x, y).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixels()">
      <summary>Get a block of pixel colors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixels(int x,int y,int blockWidth,int blockHeight)">
      <summary>Get a block of pixel colors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixels32(Color32[] colors = null)">
      <summary>Returns the pixels data in raw format.</summary>
      <remarks></remarks>
      <param name="colors">Optional array to receive pixel data.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.MarkNonReadable()">
      <summary>Marks WebCamTexture as unreadable (no GetPixel* functions will be available (iOS only)).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WebCamTexture.Pause()">
      <summary>Pauses the camera.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WebCamTexture.Play()">
      <summary>Starts the camera.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WebCamTexture.Stop()">
      <summary>Stops the camera.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Security">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Security.PrefetchSocketPolicy(string ip,int atPort,int timeout = 3000)">
      <summary>Prefetch the webplayer socket security policy from a non-default port number.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SpringJoint">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SpringJoint.damper">
      <summary>The damper force used to dampen the spring force.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SpringJoint.maxDistance">
      <summary>The maximum distance between the bodies relative to their initial distance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SpringJoint.minDistance">
      <summary>The minimum distance between the bodies relative to their initial distance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SpringJoint.spring">
      <summary>The spring force used to keep the two objects together.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.RenderSettings">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Application">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WSA.Application.InvokeOnAppThread(AppCallbackItem item,bool waitUntilDone)">
      <summary>Executes callback item on application thread.</summary>
      <remarks></remarks>
      <param name="item">Item to execute.</param>
      <param name="waitUntilDone">Wait until item is executed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Application.InvokeOnUIThread(AppCallbackItem item,bool waitUntilDone)">
      <summary>Executes callback item on UI thread.</summary>
      <remarks></remarks>
      <param name="item">Item to execute.</param>
      <param name="waitUntilDone">Wait until item is executed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Application.RunningOnAppThread()">
      <summary>Returns true if you're running on application thread.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WSA.Application.RunningOnUIThread()">
      <summary>Returns true if you're running on UI thread.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.LocalNotification">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.LocalNotification()">
      <summary>Creates a new local notification.</summary>
      <remarks></remarks>
      <param name="LocalNotification()"></param>
    </member>
    <member name="P:UnityEngine.LocalNotification.alertAction">
      <summary>The title of the action button or slider.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocalNotification.alertBody">
      <summary>The message displayed in the notification alert.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocalNotification.alertLaunchImage">
      <summary>Identifies the image used as the launch image when the user taps the action button.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocalNotification.applicationIconBadgeNumber">
      <summary>The number to display as the application's icon badge.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocalNotification.fireDate">
      <summary>The date and time when the system should deliver the notification.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocalNotification.hasAction">
      <summary>A boolean value that controls whether the alert action is visible or not.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocalNotification.repeatCalendar">
      <summary>The calendar type (Gregorian, Chinese, etc) to use for rescheduling the notification.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocalNotification.repeatInterval">
      <summary>The calendar interval at which to reschedule the notification.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocalNotification.soundName">
      <summary>The name of the sound file to play when an alert is displayed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocalNotification.timeZone">
      <summary>The time zone of the notification's fire date.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocalNotification.userInfo">
      <summary>A dictionary for passing custom information to the notified application.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Social">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Social.CreateAchievement()">
      <summary>Create an IAchievement instance.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Social.CreateLeaderboard()">
      <summary>Create an ILeaderboard instance.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Social.LoadAchievementDescriptions(Action&lt;IAchievementDescription[]&gt; callback)">
      <summary>Loads the achievement descriptions accociated with this application.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Social.LoadAchievements(Action&lt;IAchievement[]&gt; callback)">
      <summary>Load the achievements the logged in user has already achieved or reported progress on.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Social.LoadScores(string leaderboardID,Action&lt;IScore[]&gt; callback)">
      <summary>Load a default set of scores from the given leaderboard.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Social.LoadUsers(string[] userIDs,Action&lt;IUserProfile[]&gt; callback)">
      <summary>Load the user profiles accociated with the given array of user IDs.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Social.ReportProgress(string achievementID,double progress,Action&lt;bool&gt; callback)">
      <summary>Reports the progress of an achievement.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Social.ReportScore(long score,string board,Action&lt;bool&gt; callback)">
      <summary>Report a score to a specific leaderboard.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Social.ShowAchievementsUI()">
      <summary>Show a default/system view of the games achievements.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Social.ShowLeaderboardUI()">
      <summary>Show a default/system view of the games leaderboards.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Shader">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Shader.isSupported">
      <summary>Can this shader run on the end-users graphics card? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Shader.maximumLOD">
      <summary>Shader LOD level for this shader.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Shader.renderQueue">
      <summary>Render queue of this shader. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Shader.Find(string name)">
      <summary>Finds a shader with the given name.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Shader.PropertyToID(string name)">
      <summary>Gets unique identifier for a shader property name.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalColor(string propertyName,Color color)">
      <summary>Sets a global color property for all shaders.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalFloat(string propertyName,float value)">
      <summary>Sets a global float property for all shaders.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalMatrix(string propertyName,Matrix4x4 mat)">
      <summary>Sets a global matrix property for all shaders.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalTexture(string propertyName,Texture tex)">
      <summary>Sets a global texture property for all shaders.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalVector(string propertyName,Vector4 vec)">
      <summary>Sets a global vector property for all shaders.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Shader.WarmupAllShaders()">
      <summary>Fully load all shaders to prevent future performance hiccups.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AudioListener">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioListener.velocityUpdateMode">
      <summary>This lets you set whether the Audio Listener should be updated in the fixed or dynamic update.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ContactPoint2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.collider">
      <summary>The collider attached to the object receiving the collision message.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.normal">
      <summary>Surface normal at the contact point.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.otherCollider">
      <summary>The incoming collider involved in the collision at this contact point.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.point">
      <summary>The point of contact between the two colliders in world space.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ProceduralPropertyDescription">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralPropertyDescription.enumOptions">
      <summary>The available options for a ProceduralProperty of type Enum.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralPropertyDescription.group">
      <summary>The name of the GUI group. Used to display ProceduralProperties in groups.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralPropertyDescription.hasRange">
      <summary>If true, the Float or Vector property is constrained to values within a specified range.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralPropertyDescription.label">
      <summary>The label of the ProceduralProperty. Can contain space and be overall more user-friendly than the 'name' member.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralPropertyDescription.maximum">
      <summary>If hasRange is true, maximum specifies the maximum allowed value for this Float or Vector property.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralPropertyDescription.minimum">
      <summary>If hasRange is true, minimum specifies the minimum allowed value for this Float or Vector property.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralPropertyDescription.name">
      <summary>The name of the ProceduralProperty. Used to get and set the values.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralPropertyDescription.step">
      <summary>Specifies the step size of this Float or Vector property. Zero is no step.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralPropertyDescription.type">
      <summary>The ProceduralPropertyType describes what type of property this is.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUIText">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.alignment">
      <summary>The alignment of the text.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.anchor">
      <summary>The anchor of the text.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.color">
      <summary>The color used to render the text.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.font">
      <summary>The font used for the text.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.fontSize">
      <summary>The font size to use (for dynamic fonts).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.fontStyle">
      <summary>The font style to use (for dynamic fonts).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.lineSpacing">
      <summary>The line spacing multiplier.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.material">
      <summary>The Material to use for rendering.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.pixelOffset">
      <summary>The pixel offset of the text.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.richText">
      <summary>Enable HTML-style tags for Text Formatting Markup.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.tabSize">
      <summary>The tab width multiplier.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUIText.text">
      <summary>The text to display.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.TerrainData">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapHeight">
      <summary>Height of the alpha map.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapLayers">
      <summary>Number of alpha map layers.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapResolution">
      <summary>Resolution of the alpha map.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapWidth">
      <summary>Width of the alpha map.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.baseMapResolution">
      <summary>Resolution of the base map used for rendering far patches on the terrain.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.detailHeight">
      <summary>Detail height of the TerrainData.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.detailPrototypes">
      <summary>Contains the detail texture/meshes that the terrain has.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.detailResolution">
      <summary>Detail Resolution of the TerrainData.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.detailWidth">
      <summary>Detail width of the TerrainData.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapHeight">
      <summary>Height of the terrain in samples (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapResolution">
      <summary>Resolution of the heightmap.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapScale">
      <summary>The size of each heightmap sample.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapWidth">
      <summary>Width of the terrain in samples (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.physicMaterial">
      <summary>The physic material used by  TerrainCollider using this Terrain.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.size">
      <summary>The total size in world units of the terrain.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.splatPrototypes">
      <summary>Splat texture used by the terrain.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.treeInstances">
      <summary>Contains the current trees placed in the terrain.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.treePrototypes">
      <summary>The list of tree prototypes this are the ones available in the inspector.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassAmount">
      <summary>Amount of waving grass in the terrain.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassSpeed">
      <summary>Speed of the waving grass.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassStrength">
      <summary>Strength of the waving grass in the terrain.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassTint">
      <summary>Color of the waving grass that the terrain has.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.GetAlphamaps(int x,int y,int width,int height)">
      <summary>Returns the alpha map at a position x, y given a width and height.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.GetDetailLayer(int xBase,int yBase,int width,int height,int layer)">
      <summary>Returns a 2D array of the detail object density in the specific location.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.GetHeight(int x,int y)">
      <summary>Gets the height at a certain point x,y.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.GetHeights(int xBase,int yBase,int width,int height)">
      <summary>Get an array of heightmap samples..</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.GetInterpolatedHeight(float x,float y)">
      <summary>Gets an interpolated height at a point x,y.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.GetInterpolatedNormal(float x,float y)">
      <summary>Get an interpolated normal at a given location.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.GetSteepness(float x,float y)">
      <summary>Gets the gradient of the terrain at point &lt;x,y&gt;.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.GetSupportedLayers(int xBase,int yBase,int totalWidth,int totalHeight)">
      <summary>Returns an array of all supported detail layer indices in the area.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.RefreshPrototypes()">
      <summary>Reloads all the values of the available prototypes (ie, detail mesh assets) in the TerrainData Object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.SetAlphamaps(int x,int y,float[,,] map)">
      <summary>Assign all splat values in the given map area.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.SetDetailLayer(int xBase,int yBase,int layer,int[,] details)">
      <summary>Sets the detail layer density map.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.TerrainData.SetDetailResolution(int detailResolution,int resolutionPerPatch)">
      <summary>Set the resolution of the detail map.</summary>
      <remarks></remarks>
      <param name="detailResolution">Specifies the number of pixels in the detail resolution map. A larger detailResolution, leads to more accurate detail object painting.</param>
      <param name="resolutionPerPatch">Specifies the size in pixels of each individually rendered detail patch. A larger number reduces draw calls, but might increase triangle count since detail patches are culled on a per batch basis. A recommended value is 16. If you use a very large detail object distance and your grass is very sparse, it makes sense to increase the value.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetHeights(int xBase,int yBase,float[,] heights)">
      <summary>Set an array of heightmap samples.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.MeshFilter">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MeshFilter.mesh">
      <summary>Returns the instantiated Mesh assigned to the mesh filter.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MeshFilter.sharedMesh">
      <summary>Returns the shared mesh of the mesh filter.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Android">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Renderer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.bounds">
      <summary>The bounding volume of the renderer (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.castShadows">
      <summary>Does this object cast shadows?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.enabled">
      <summary>Makes the rendered 3D object visible if enabled.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.isPartOfStaticBatch">
      <summary>Has this renderer been statically batched with any other renderers?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.isVisible">
      <summary>Is this renderer visible in any camera? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.lightmapIndex">
      <summary>The index of the lightmap applied to this renderer.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.lightmapTilingOffset">
      <summary>The tiling &amp; offset used for lightmap.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.lightProbeAnchor">
      <summary>If set, Renderer will use this Transform's position to find the interpolated light probe.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.localToWorldMatrix">
      <summary>Matrix that transforms a point from local space into world space (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.material">
      <summary>The material of this object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.materials">
      <summary>All the materials of this object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.receiveShadows">
      <summary>Does this object receive shadows?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.sharedMaterial">
      <summary>The shared material of this object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.sharedMaterials">
      <summary>All the shared materials of this object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.useLightProbes">
      <summary>Use light probes for this Renderer.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Renderer.worldToLocalMatrix">
      <summary>Matrix that transforms a point from world space into local space (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Renderer.SetPropertyBlock(MaterialPropertyBlock properties)">
      <summary>Lets you add per-renderer material parameters without duplicating a material.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ProceduralMaterial">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.animationUpdateRate">
      <summary>Set or get the update rate in millisecond of the animated substance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.cacheSize">
      <summary>Set or get the Procedural cache budget.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.isLoadTimeGenerated">
      <summary>Should the ProceduralMaterial be generated at load time?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.isProcessing">
      <summary>Check if the ProceduralTextures from this ProceduralMaterial are currently being rebuilt.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.isReadable">
      <summary>Set or get the "Readable" flag for a ProceduralMaterial.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.loadingBehavior">
      <summary>Get ProceduralMaterial loading behavior.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.preset">
      <summary>Set or get an XML string of "input/value" pairs (settings the preset rebuilds the textures).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.CacheProceduralProperty(string inputName,bool value)">
      <summary>Specifies if a named ProceduralProperty should be cached for efficient runtime tweaking.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.ClearCache()">
      <summary>Clear the Procedural cache.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetGeneratedTexture(string textureName)">
      <summary>This allows to get a reference to a ProceduralTexture generated by a ProceduralMaterial using its name.</summary>
      <remarks></remarks>
      <param name="textureName">The name of the ProceduralTexture to get.</param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetGeneratedTextures()">
      <summary>Get generated textures.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralBoolean(string inputName)">
      <summary>Get a named Procedural boolean property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralColor(string inputName)">
      <summary>Get a named Procedural color property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralEnum(string inputName)">
      <summary>Get a named Procedural enum property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralFloat(string inputName)">
      <summary>Get a named Procedural float property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralPropertyDescriptions()">
      <summary>Get an array of descriptions of all the ProceduralProperties this ProceduralMaterial has.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralTexture(string inputName)">
      <summary>Get a named Procedural texture property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralVector(string inputName)">
      <summary>Get a named Procedural vector property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.HasProceduralProperty(string inputName)">
      <summary>Checks if the ProceduralMaterial has a ProceduralProperty of a given name.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.IsProceduralPropertyCached(string inputName)">
      <summary>Checks if a named ProceduralProperty is cached for efficient runtime tweaking.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.RebuildTextures()">
      <summary>Triggers an asynchronous rebuild of this ProceduralMaterial's dirty textures.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.RebuildTexturesImmediately()">
      <summary>Triggers an immediate (synchronous) rebuild of this ProceduralMaterial's dirty textures.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralBoolean(string inputName,bool value)">
      <summary>Set a named Procedural boolean property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralColor(string inputName,Color value)">
      <summary>Set a named Procedural color property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralEnum(string inputName,int value)">
      <summary>Set a named Procedural enum property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralFloat(string inputName,float value)">
      <summary>Set a named Procedural float property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralTexture(string inputName,Texture2D value)">
      <summary>Set a named Procedural texture property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralVector(string inputName,Vector4 value)">
      <summary>Set a named Procedural vector property.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.StopRebuilds()">
      <summary>Discard all the queued ProceduralMaterial rendering operations that have not started yet.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AnimatorTransitionInfo">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.nameHash">
      <summary>The unique name of the Transition.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.normalizedTime">
      <summary>Normalized time of the Transition.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.userNameHash">
      <summary>The user-specidied name of the Transition.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimatorTransitionInfo.IsName(string name)">
      <summary>Does name match the name of the active Transition.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimatorTransitionInfo.IsUserName(string name)">
      <summary>Does userName match the name of the active Transition.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.HumanLimit">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanLimit.axisLength">
      <summary>Length of the bone to which the limit is applied.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanLimit.center">
      <summary>The default orientation of a bone when no muscle action is applied.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanLimit.max">
      <summary>The maximum rotation away from the initial value that this muscle can apply.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanLimit.min">
      <summary>The maximum negative rotation away from the initial value that this muscle can apply.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HumanLimit.useDefaultValues">
      <summary>Should this limit use the default values?</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Mesh">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Mesh()">
      <summary>Creates an empty mesh.</summary>
      <remarks></remarks>
      <param name="Mesh()"></param>
    </member>
    <member name="P:UnityEngine.Mesh.bindposes">
      <summary>The bind poses. The bind pose at each index refers to the bone with the same index.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.blendShapeCount">
      <summary>Returns BlendShape count on this mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.boneWeights">
      <summary>The bone weights of each vertex.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.bounds">
      <summary>The bounding volume of the mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.colors">
      <summary>Vertex colors of the mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.colors32">
      <summary>Vertex colors of the mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.isReadable">
      <summary>Returns state of the Read/Write Enabled checkbox when model was imported.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.normals">
      <summary>The normals of the mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.subMeshCount">
      <summary>The number of submeshes. Every material has a separate triangle list.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.tangents">
      <summary>The tangents of the mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.triangles">
      <summary>An array containing all triangles in the mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.uv">
      <summary>The base texture coordinates of the mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.uv2">
      <summary>The second texture coordinate set of the mesh, if present.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.vertexCount">
      <summary>Returns the number of vertices in the mesh (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Mesh.vertices">
      <summary>Returns a copy of the vertex positions or assigns a new vertex positions array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mesh.Clear(bool keepVertexLayout = true)">
      <summary>Clears all vertex data and all triangle indices.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mesh.CombineMeshes(CombineInstance[] combine,bool mergeSubMeshes = true,bool useMatrices = true)">
      <summary>Combines several meshes into this mesh.</summary>
      <remarks></remarks>
      <param name="combine">Descriptions of the meshes to combine.</param>
      <param name="mergeSubMeshes">Should all meshes be combined into a single submesh?</param>
      <param name="useMatrices">Should the transforms supplied in the CombineInstance array be used or ignored?</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetBlendShapeName(int index)">
      <summary>Returns name of BlendShape by given index.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mesh.GetIndices(int submesh)">
      <summary>Returns the index buffer for the submesh.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mesh.GetTopology(int submesh)">
      <summary>Gets the topology of a submesh.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mesh.GetTriangles(int submesh)">
      <summary>Returns the triangle list for the submesh.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mesh.MarkDynamic()">
      <summary>Optimize mesh for frequent updates.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mesh.Optimize()">
      <summary>Optimizes the mesh for display.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mesh.RecalculateBounds()">
      <summary>Recalculate the bounding volume of the mesh from the vertices.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mesh.RecalculateNormals()">
      <summary>Recalculates the normals of the mesh from the triangles and vertices.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mesh.SetIndices(int[] indices,MeshTopology topology,int submesh)">
      <summary>Sets the index buffer for the submesh.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Mesh.SetTriangles(int[] triangles,int submesh)">
      <summary>Sets the triangle list for the submesh.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUIUtility">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(FocusType focus)">
      <summary>Get a unique ID for a control.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(int hint,FocusType focus)">
      <summary>Get a unique ID for a control, using an integer as a hint to help ensure correct matching of IDs to controls.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(GUIContent contents,FocusType focus)">
      <summary>Get a unique ID for a control, using a the label content as a hint to help ensure correct matching of IDs to controls.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetStateObject(Type t,int controlID)">
      <summary>Get a state object from a controlID.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIUtility.GUIToScreenPoint(Vector2 guiPoint)">
      <summary>Convert a point from GUI position to screen space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIUtility.QueryStateObject(Type t,int controlID)">
      <summary>Get an existing state object from a controlID.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIUtility.RotateAroundPivot(float angle,Vector2 pivotPoint)">
      <summary>Helper function to rotate the GUI around a point.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIUtility.ScaleAroundPivot(Vector2 scale,Vector2 pivotPoint)">
      <summary>Helper function to scale the GUI around a point.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUIUtility.ScreenToGUIPoint(Vector2 screenPoint)">
      <summary>Convert a point from screen space to GUI position.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Color">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Color(float r,&#13;&#10;float g,&#13;&#10;float b,&#13;&#10;float a)">
      <summary>Constructs a new Color with given r,g,b,a components.</summary>
      <remarks></remarks>
      <param name="r"></param>
      <param name="g"></param>
      <param name="b"></param>
      <param name="a)"></param>
    </member>
    <member name="C:UnityEngine.Color(float r,&#13;&#10;float g,&#13;&#10;float b)">
      <summary>Constructs a new Color with given r,g,b components and sets a to 1.</summary>
      <remarks></remarks>
      <param name="r"></param>
      <param name="g"></param>
      <param name="b)"></param>
    </member>
    <member name="P:UnityEngine.Color.a">
      <summary>Alpha component of the color.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Color.b">
      <summary>Blue component of the color.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Color.g">
      <summary>Green component of the color.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Color.gamma">
      <summary>A version of the color that has had the gamma curve applied.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Color.grayscale">
      <summary>The grayscale value of the color. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Color.linear">
      <summary>A version of the color that has had the inverse gamma curve applied.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Color.r">
      <summary>Red component of the color.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Color.this[int]">
      <summary>Access the r, g, b,a components using [0], [1], [2], [3] respectively.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Color.ToString()">
      <summary>Returns a nicely formatted string of this color.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Color.Lerp(Color a,Color b,float t)">
      <summary>Interpolates between colors a and b by t.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.LineRenderer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LineRenderer.useWorldSpace">
      <summary>If enabled, the lines are defined in world space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.LineRenderer.SetColors(Color start,Color end)">
      <summary>Set the line color at the start and at the end.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.LineRenderer.SetPosition(int index,Vector3 position)">
      <summary>Set the position of the vertex in the line.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.LineRenderer.SetVertexCount(int count)">
      <summary>Set the number of line segments.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.LineRenderer.SetWidth(float start,float end)">
      <summary>Set the line width at the start and at the end.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.JointDrive">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointDrive.maximumForce">
      <summary>Amount of force applied to push the object toward the defined direction.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointDrive.mode">
      <summary>Whether the drive should attempt to reach position, velocity, both or nothing.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointDrive.positionDamper">
      <summary>Resistance strength against the Position Spring. Only used if mode includes Position.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointDrive.positionSpring">
      <summary>Strength of a rubber-band pull toward the defined direction. Only used if mode includes Position.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.WSA.WindowSizeChanged.WindowSizeChanged">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GradientAlphaKey">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.GradientAlphaKey(float alpha,&#13;&#10;float time)">
      <summary>Gradient alpha key.</summary>
      <remarks></remarks>
      <param name="alpha"></param>
      <param name="time)"></param>
    </member>
    <member name="P:UnityEngine.GradientAlphaKey.alpha">
      <summary>Alpha alpha of key.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GradientAlphaKey.time">
      <summary>Time of the key (0 - 1).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.LightmapData">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LightmapData.lightmapFar">
      <summary>Lightmap storing the full incoming light.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LightmapData.lightmapNear">
      <summary>Lightmap storing only the indirect incoming light.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.RaycastHit">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit.barycentricCoordinate">
      <summary>The barycentric coordinate of the triangle we hit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit.collider">
      <summary>The Collider that was hit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit.distance">
      <summary>The distance from the ray's origin to the impact point.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit.lightmapCoord">
      <summary>The uv lightmap coordinate at the impact point.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit.normal">
      <summary>The normal of the surface the ray hit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit.point">
      <summary>The impact point in world space where the ray hit the collider.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit.rigidbody">
      <summary>The Rigidbody of the collider that was hit. If the collider is not attached to a rigidbody then it is null.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit.textureCoord">
      <summary>The uv texture coordinate at the impact point.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit.textureCoord2">
      <summary>The secondary uv texture coordinate at the impact point.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit.transform">
      <summary>The Transform of the rigidbody or collider that was hit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RaycastHit.triangleIndex">
      <summary>The index of the triangle that was hit.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GradientColorKey">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.GradientColorKey(Color col,&#13;&#10;float time)">
      <summary>Gradient color key.</summary>
      <remarks></remarks>
      <param name="col"></param>
      <param name="time)"></param>
    </member>
    <member name="P:UnityEngine.GradientColorKey.color">
      <summary>Color of key.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GradientColorKey.time">
      <summary>Time of the key (0 - 1).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.HingeJoint">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint.angle">
      <summary>The current angle in degrees of the joint relative to its rest position. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint.limits">
      <summary>Limit of angular rotation on the hinge joint.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint.motor">
      <summary>The motor will apply a force up to a maximum force to achieve the target velocity in degrees per second.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint.spring">
      <summary>The spring attempts to reach a target angle by adding spring and damping forces.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint.useLimits">
      <summary>Enables the joint's limits.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint.useMotor">
      <summary>Enables the joint's motor.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint.useSpring">
      <summary>Enables the joint's spring.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.HingeJoint.velocity">
      <summary>The angular velocity of the joint in degrees per second.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Avatar">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Avatar.isHuman">
      <summary>Return true if this avatar is a valid human avatar.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Avatar.isValid">
      <summary>Return true if this avatar is a valid mecanim avatar. It can be a generic avatar or a human avatar.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.FlashPlayer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.PolygonCollider2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.PolygonCollider2D.pathCount">
      <summary>The number of paths in the polygon.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.PolygonCollider2D.points">
      <summary>Corner points that define the collider's shape in local space.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.CreatePrimitive(int sides,Vector2 scale = Vector2.one,Vector2 offset = Vector2.zero)">
      <summary>Creates as regular primitive polygon with the specified number of sides.</summary>
      <remarks></remarks>
      <param name="sides">The number of sides in the polygon.  This must be greater than two.</param>
      <param name="scale">The X/Y scale of the polygon.  These must be greater than zero.</param>
      <param name="offset">The X/Y offset of the polygon.</param>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.GetPath(int index)">
      <summary>Get a path from the polygon by its index.</summary>
      <remarks></remarks>
      <param name="index">The index of the path to retrieve.</param>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.GetTotalPointCount()">
      <summary>Return the total number of points in the polygon in all paths.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.SetPath(int index,Vector2[] points)">
      <summary>Define a path by its constituent points.</summary>
      <remarks></remarks>
      <param name="index">Index of the path to set.</param>
      <param name="points">Points that define the path.</param>
    </member>
    <member name="T:UnityEngine.RuntimeAnimatorController">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AndroidJNIHelper">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.ConvertFromJNIArray(IntPtr array)">
      <summary>Creates a managed array from a Java array.</summary>
      <remarks></remarks>
      <param name="array">Java array object to be converted into a managed array.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.ConvertToJNIArray(Array array)">
      <summary>Creates a Java array from a managed array.</summary>
      <remarks></remarks>
      <param name="array">Managed array to be converted into a Java array object.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.CreateJavaProxy(AndroidJavaProxy proxy)">
      <summary>Creates a java proxy object which connects to the supplied proxy implementation.</summary>
      <remarks></remarks>
      <param name="proxy">An implementatinon of a java interface in c#.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.CreateJavaRunnable(AndroidJavaRunnable jrunnable)">
      <summary>Creates a UnityJavaRunnable object (implements java.lang.Runnable).</summary>
      <remarks></remarks>
      <param name="runnable">A delegate representing the java.lang.Runnable.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.CreateJNIArgArray(object[] args)">
      <summary>Creates the parameter array to be used as argument list when invoking Java code through CallMethod() in AndroidJNI.</summary>
      <remarks></remarks>
      <param name="args">An array of objects that should be converted to Call parameters.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.DeleteJNIArgArray(object[] args,jvalue[] jniArgs)">
      <summary>Deletes any local jni references previously allocated by CreateJNIArgArray().</summary>
      <remarks></remarks>
      <param name="args">The array of arguments used as a parameter to CreateJNIArgArray().</param>
      <param name="jniArgs">The array returned by CreateJNIArgArray().</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetConstructorID(IntPtr javaClass,string signature = &quot;&quot;)">
      <summary>Scans a particular Java class for a constructor method matching a signature.</summary>
      <remarks></remarks>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="signature">Constructor method signature (e.g. obtained by calling AndroidJNIHelper.GetSignature).</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetConstructorID(IntPtr jclass,object[] args)">
      <summary>Get a JNI method ID for a constructor based on calling arguments.</summary>
      <remarks></remarks>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="args">Array with parameters to be passed to the constructor when invoked.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetFieldID(IntPtr javaClass,string fieldName,string signature = &quot;&quot;,bool isStatic = false)">
      <summary>Scans a particular Java class for a field matching a name and a signature.</summary>
      <remarks></remarks>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="fieldName">Name of the field as declared in Java.</param>
      <param name="signature">Field signature (e.g. obtained by calling AndroidJNIHelper.GetSignature).</param>
      <param name="isStatic">Set to true for static fields; false for instance (nonstatic) fields.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetFieldID(IntPtr jclass,string fieldName,bool isStatic)">
      <summary>Get a JNI field ID based on type detection. Generic parameter represents the field type.</summary>
      <remarks></remarks>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="fieldName">Name of the field as declared in Java.</param>
      <param name="isStatic">Set to true for static fields; false for instance (nonstatic) fields.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetMethodID(IntPtr javaClass,string methodName,string signature = &quot;&quot;,bool isStatic = false)">
      <summary>Scans a particular Java class for a method matching a name and a signature.</summary>
      <remarks></remarks>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="methodName">Name of the method as declared in Java.</param>
      <param name="signature">Method signature (e.g. obtained by calling AndroidJNIHelper.GetSignature).</param>
      <param name="isStatic">Set to true for static methods; false for instance (nonstatic) methods.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetMethodID(IntPtr jclass,string methodName,object[] args,bool isStatic)">
      <summary>Get a JNI method ID based on calling arguments.</summary>
      <remarks></remarks>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="methodName">Name of the method as declared in Java.</param>
      <param name="args">Array with parameters to be passed to the method when invoked.</param>
      <param name="isStatic">Set to true for static methods; false for instance (nonstatic) methods.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetMethodID(IntPtr jclass,string methodName,object[] args,bool isStatic)">
      <summary>Get a JNI method ID based on calling arguments.</summary>
      <remarks></remarks>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="methodName">Name of the method as declared in Java.</param>
      <param name="args">Array with parameters to be passed to the method when invoked.</param>
      <param name="isStatic">Set to true for static methods; false for instance (nonstatic) methods.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetSignature(object obj)">
      <summary>Creates the JNI signature string for particular object type.</summary>
      <remarks></remarks>
      <param name="obj">Object for which a signature is to be produced.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetSignature(object[] args)">
      <summary>Creates the JNI signature string for an object parameter list.</summary>
      <remarks></remarks>
      <param name="args">Array of object for which a signature is to be produced.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetSignature(object[] args)">
      <summary>Creates the JNI signature string for an object parameter list.</summary>
      <remarks></remarks>
      <param name="args">Array of object for which a signature is to be produced.</param>
    </member>
    <member name="T:UnityEngine.Collision2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision2D.collider">
      <summary>The incoming Collider2D involved in the collision.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision2D.contacts">
      <summary>The specific points of contact with the incoming Collider2D.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision2D.gameObject">
      <summary>The incoming GameObject involved in the collision.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision2D.relativeVelocity">
      <summary>The relative linear velocity of the two colliding objects (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision2D.rigidbody">
      <summary>The incoming Rigidbody2D involved in the collision.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collision2D.transform">
      <summary>The Transform of the incoming object involved in the collision.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.OcclusionPortal">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.OcclusionPortal.open">
      <summary>Gets / sets the portal's open state.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.WheelHit">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelHit.collider">
      <summary>The other Collider the wheel is hitting.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelHit.force">
      <summary>The magnitude of the force being applied for the contact.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelHit.forwardDir">
      <summary>The direction the wheel is pointing in.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelHit.forwardSlip">
      <summary>Tire slip in the rolling direction. Acceleration slip is negative, braking slip is positive.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelHit.normal">
      <summary>The normal at the point of contact.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelHit.point">
      <summary>The point of contact between the wheel and the ground.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelHit.sidewaysDir">
      <summary>The sideways direction of the wheel.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelHit.sidewaysSlip">
      <summary>Tire slip in the sideways direction.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.HumanTrait">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.HumanTrait.BoneFromMuscle(int i)">
      <summary>Return the bone to which a particular muscle is connected.</summary>
      <remarks></remarks>
      <param name="i">Muscle index.</param>
    </member>
    <member name="M:UnityEngine.HumanTrait.GetMuscleDefaultMax(int i)">
      <summary>Get the default maximum value of rotation for a muscle in degrees.</summary>
      <remarks></remarks>
      <param name="i">Muscle index.</param>
    </member>
    <member name="M:UnityEngine.HumanTrait.GetMuscleDefaultMin(int i)">
      <summary>Get the default minimum value of rotation for a muscle in degrees.</summary>
      <remarks></remarks>
      <param name="i">Muscle index.</param>
    </member>
    <member name="M:UnityEngine.HumanTrait.MuscleFromBone(int i,int dofIndex)">
      <summary>Obtain the muscle index for a particular bone index and "degree of freedom".</summary>
      <remarks></remarks>
      <param name="i">Bone index.</param>
      <param name="dofIndex">Number representing a "degree of freedom": 0 for X-Axis, 1 for Y-Axis, 2 for Z-Axis.</param>
    </member>
    <member name="M:UnityEngine.HumanTrait.RequiredBone(int i)">
      <summary>Is the bone a member of the minimal set of bones that Mecanim requires for a human model?</summary>
      <remarks></remarks>
      <param name="i">Index of the bone to test.</param>
    </member>
    <member name="T:UnityEngine.NavMeshPath">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.NavMeshPath()">
      <summary>NavMeshPath constructor.</summary>
      <remarks></remarks>
      <param name="NavMeshPath()"></param>
    </member>
    <member name="P:UnityEngine.NavMeshPath.corners">
      <summary>Corner points of the path. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshPath.status">
      <summary>Status of the path. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NavMeshPath.ClearCorners()">
      <summary>Erase all corner points from path.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AudioReverbZone">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.decayHFRatio">
      <summary>High-frequency to mid-frequency decay time ratio.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.decayTime">
      <summary>Reverberation decay time at mid frequencies.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.density">
      <summary>Value that controls the modal density in the late reverberation decay.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.diffusion">
      <summary>Value that controls the echo density in the late reverberation decay.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.HFReference">
      <summary>Reference high frequency (hz).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.LFReference">
      <summary>Reference low frequency (hz).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.maxDistance">
      <summary>The distance from the centerpoint that the reverb will not have any effect. Default = 15.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.minDistance">
      <summary>The distance from the centerpoint that the reverb will have full effect at. Default = 10.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reflections">
      <summary>Early reflections level relative to room effect.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reflectionsDelay">
      <summary>Initial reflection delay time.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reverb">
      <summary>Late reverberation level relative to room effect.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reverbDelay">
      <summary>Late reverberation delay time relative to initial reflection.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reverbPreset">
      <summary>Set/Get reverb preset properties.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.room">
      <summary>Room effect level (at mid frequencies).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.roomHF">
      <summary>Relative room effect level at high frequencies.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.roomLF">
      <summary>Relative room effect level at low frequencies.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.roomRolloffFactor">
      <summary>Like rolloffscale in global settings, but for reverb room size effect.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.NavMeshObstacle">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshObstacle.carving">
      <summary>Should this obstacle make a cut-out in the navmesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshObstacle.carvingMoveThreshold">
      <summary>Threshold distance for updating a moving carved hole (when carving is enabled).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshObstacle.height">
      <summary>Height of the obstacle's cylinder shape.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshObstacle.radius">
      <summary>Radius of the obstacle's cylinder shape.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NavMeshObstacle.velocity">
      <summary>Velocity at which the obstacle moves around the NavMesh.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SkinnedMeshRenderer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkinnedMeshRenderer.bones">
      <summary>The bones used to skin the mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkinnedMeshRenderer.localBounds">
      <summary>AABB of this Skinned Mesh in its local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkinnedMeshRenderer.quality">
      <summary>The maximum number of bones affecting a single vertex.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkinnedMeshRenderer.sharedMesh">
      <summary>The mesh used for skinning.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.SkinnedMeshRenderer.updateWhenOffscreen">
      <summary>If enabled, the Skinned Mesh will be updated when offscreen. If disabled, this also disables updating animations.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SkinnedMeshRenderer.BakeMesh(Mesh mesh)">
      <summary>Creates a snapshot of SkinnedMeshRenderer and stores it in mesh.</summary>
      <remarks></remarks>
      <param name="mesh">A static mesh that will receive the snapshot of the skinned mesh.</param>
    </member>
    <member name="M:UnityEngine.SkinnedMeshRenderer.GetBlendShapeWeight(int index)">
      <summary>Returns weight of BlendShape on this renderer.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SkinnedMeshRenderer.SetBlendShapeWeight(int index,float value)">
      <summary>Sets weight of BlendShape on this renderer.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Media">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.MatchTargetWeightMask">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.MatchTargetWeightMask(Vector3 positionXYZWeight,&#13;&#10;float rotationWeight)">
      <summary>MatchTargetWeightMask contructor.</summary>
      <remarks></remarks>
      <param name="positionXYZWeight"></param>
      <param name="rotationWeight)"></param>
    </member>
    <member name="P:UnityEngine.MatchTargetWeightMask.positionXYZWeight">
      <summary>Position XYZ weight.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MatchTargetWeightMask.rotationWeight">
      <summary>Rotation weight.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AudioChorusFilter">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.delay">
      <summary>Chorus delay in ms. 0.1 to 100.0. Default = 40.0 ms.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.depth">
      <summary>Chorus modulation depth. 0.0 to 1.0. Default = 0.03.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.dryMix">
      <summary>Volume of original signal to pass to output. 0.0 to 1.0. Default = 0.5.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.rate">
      <summary>Chorus modulation rate in hz. 0.0 to 20.0. Default = 0.8 hz.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.wetMix1">
      <summary>Volume of 1st chorus tap. 0.0 to 1.0. Default = 0.5.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.wetMix2">
      <summary>Volume of 2nd chorus tap. This tap is 90 degrees out of phase of the first tap. 0.0 to 1.0. Default = 0.5.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.wetMix3">
      <summary>Volume of 3rd chorus tap. This tap is 90 degrees out of phase of the second tap. 0.0 to 1.0. Default = 0.5.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.CrashReport">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CrashReport.text">
      <summary>Crash report data as formatted text.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CrashReport.time">
      <summary>Time, when the crash occured.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.CrashReport.Remove()">
      <summary>Remove report from available reports list.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.CrashReport.RemoveAll()">
      <summary>Remove all reports from available reports list.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GameObject">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.GameObject(string name)">
      <summary>Creates a new game object, named name.</summary>
      <remarks></remarks>
      <param name="name)"></param>
    </member>
    <member name="C:UnityEngine.GameObject()">
      <summary>Creates a new game object.</summary>
      <remarks></remarks>
      <param name="GameObject()"></param>
    </member>
    <member name="C:UnityEngine.GameObject(string name,&#13;&#10;params Type[] components)">
      <summary>Creates a game object and attaches the specified components.</summary>
      <remarks></remarks>
      <param name="name"></param>
      <param name="components)"></param>
    </member>
    <member name="P:UnityEngine.GameObject.activeInHierarchy">
      <summary>Is the GameObject active in the scene?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.activeSelf">
      <summary>The local active state of this GameObject. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.animation">
      <summary>The Animation attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.audio">
      <summary>The AudioSource attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.camera">
      <summary>The Camera attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.collider">
      <summary>The Collider attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.collider2D">
      <summary>The Collider2D component attached to this object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.constantForce">
      <summary>The ConstantForce attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.guiText">
      <summary>The GUIText attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.guiTexture">
      <summary>The GUITexture attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.hingeJoint">
      <summary>The HingeJoint attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.isStatic">
      <summary>Editor only API that specifies if a game object is static.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.layer">
      <summary>The layer the game object is in. A layer is in the range [0...31].</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.light">
      <summary>The Light attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.networkView">
      <summary>The NetworkView attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.particleEmitter">
      <summary>The ParticleEmitter attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.particleSystem">
      <summary>The ParticleSystem attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.renderer">
      <summary>The Renderer attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.rigidbody">
      <summary>The Rigidbody attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.rigidbody2D">
      <summary>The Rigidbody2D component attached to this GameObject. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.tag">
      <summary>The tag of this game object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GameObject.transform">
      <summary>The Transform attached to this GameObject. (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.AddComponent(string className)">
      <summary>Adds a component class named className to the game object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.AddComponent(Type componentType)">
      <summary>Adds a component class of type componentType to the game object. C# Users can use a generic version.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.AddComponent()">
      <summary>Generic version. See the Generic Functions page for more details.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.BroadcastMessage(string methodName,object parameter = null,SendMessageOptions options = SendMessageOptions.RequireReceiver)">
      <summary>Calls the method named methodName on every MonoBehaviour in this game object or any of its children.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.CompareTag(string tag)">
      <summary>Is this game object tagged with tag?</summary>
      <remarks></remarks>
      <param name="tag">The tag to compare.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponent(Type type)">
      <summary>Returns the component of Type type if the game object has one attached, null if it doesn't. You can access both builtin components or scripts with this function.</summary>
      <remarks></remarks>
      <param name="type">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponent()">
      <summary>Generic version. See the Generic Functions page for more details.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponent(string type)">
      <summary>Returns the component with name type if the game object has one attached, null if it doesn't.</summary>
      <remarks></remarks>
      <param name="type">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentInChildren(Type type)">
      <summary>Returns the component of Type type in the GameObject or any of its children using depth first search.</summary>
      <remarks></remarks>
      <param name="type">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentInChildren()">
      <summary>Generic version. See the Generic Functions page for more details.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponents(Type type)">
      <summary>Returns all components of Type type in the GameObject.</summary>
      <remarks></remarks>
      <param name="type">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponents()">
      <summary>Generic version. See the Generic Functions page for more details.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInChildren(Type type,bool includeInactive = false)">
      <summary>Returns all components of Type type in the GameObject or any of its children.</summary>
      <remarks></remarks>
      <param name="type">The type of Component to retrieve.</param>
      <param name="includeInactive">Should inactive Components be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInChildren(bool includeInactive)">
      <summary>Generic version. See the Generic Functions page for more details.</summary>
      <remarks></remarks>
      <param name="includeInactive">Should inactive Components be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInChildren()">
      <summary>Generic version. See the Generic Functions page for more details.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.SampleAnimation(AnimationClip animation,float time)">
      <summary>Samples an animation at a given time for any animated properties.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.SendMessage(string methodName,object value = null,SendMessageOptions options = SendMessageOptions.RequireReceiver)">
      <summary>Calls the method named methodName on every MonoBehaviour in this game object.</summary>
      <remarks></remarks>
      <param name="methodName">The name of the method to call.</param>
      <param name="value">An optional parameter value to pass to the called method.</param>
      <param name="options">Should an error be raised if the method doesn't exist on the target object?</param>
    </member>
    <member name="M:UnityEngine.GameObject.SendMessageUpwards(string methodName,object value = null,SendMessageOptions options = SendMessageOptions.RequireReceiver)">
      <summary>Calls the method named methodName on every MonoBehaviour in this game object and on every ancestor of the behaviour.</summary>
      <remarks></remarks>
      <param name="methodName">The name of the method to call.</param>
      <param name="value">An optional parameter value to pass to the called method.</param>
      <param name="options">Should an error be raised if the method doesn't exist on the target object?</param>
    </member>
    <member name="M:UnityEngine.GameObject.SetActive(bool value)">
      <summary>Activates/Deactivates the GameObject.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.CreatePrimitive(PrimitiveType type)">
      <summary>Creates a game object with a primitive mesh renderer and appropriate collider.</summary>
      <remarks></remarks>
      <param name="type">The type of primitive object to create.</param>
    </member>
    <member name="M:UnityEngine.GameObject.Find(string name)">
      <summary>Finds a game object by name and returns it.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GameObject.FindGameObjectsWithTag(string tag)">
      <summary>Returns a list of active GameObjects tagged tag. Returns empty array if no GameObject was found.</summary>
      <remarks></remarks>
      <param name="tag">The name of the tag to search GameObjects for.</param>
    </member>
    <member name="M:UnityEngine.GameObject.FindWithTag(string tag)">
      <summary>Returns one active GameObject tagged tag. Returns null if no GameObject was found.</summary>
      <remarks></remarks>
      <param name="tag">The tag to search for.</param>
    </member>
    <member name="T:UnityEngine.Component">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.animation">
      <summary>The Animation attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.audio">
      <summary>The AudioSource attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.camera">
      <summary>The Camera attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.collider">
      <summary>The Collider attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.collider2D">
      <summary>The Collider2D component attached to the object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.constantForce">
      <summary>The ConstantForce attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.gameObject">
      <summary>The game object this component is attached to. A component is always attached to a game object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.guiText">
      <summary>The GUIText attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.guiTexture">
      <summary>The GUITexture attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.hingeJoint">
      <summary>The HingeJoint attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.light">
      <summary>The Light attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.networkView">
      <summary>The NetworkView attached to this GameObject (Read Only). (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.particleEmitter">
      <summary>The ParticleEmitter attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.particleSystem">
      <summary>The ParticleSystem attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.renderer">
      <summary>The Renderer attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.rigidbody">
      <summary>The Rigidbody attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.rigidbody2D">
      <summary>The Rigidbody2D that is attached to the Component's GameObject.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.tag">
      <summary>The tag of this game object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Component.transform">
      <summary>The Transform attached to this GameObject (null if there is none attached).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Component.BroadcastMessage(string methodName,object parameter = null,SendMessageOptions options = SendMessageOptions.RequireReceiver)">
      <summary>Calls the method named methodName on every MonoBehaviour in this game object or any of its children.</summary>
      <remarks></remarks>
      <param name="methodName">Name of the method to call.</param>
      <param name="parameter">Optional parameter to pass to the method (can be any value).</param>
      <param name="options">Should an error be raised if the method does not exist for a given target object?</param>
    </member>
    <member name="M:UnityEngine.Component.CompareTag(string tag)">
      <summary>Is this game object tagged with tag?</summary>
      <remarks></remarks>
      <param name="tag">The tag to compare.</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponent(Type type)">
      <summary>Returns the component of Type type if the game object has one attached, null if it doesn't.</summary>
      <remarks></remarks>
      <param name="type">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponent()">
      <summary>Generic version. See the Generic Functions page for more details.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Component.GetComponent(string type)">
      <summary>Returns the component with name type if the game object has one attached, null if it doesn't.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Component.GetComponentInChildren(Type t)">
      <summary>Returns the component of Type type in the GameObject or any of its children using depth first search.</summary>
      <remarks></remarks>
      <param name="t">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponentInChildren()">
      <summary>Generic version. See the Generic Functions page for more details.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Component.GetComponents(Type type)">
      <summary>Returns all components of Type type in the GameObject.</summary>
      <remarks></remarks>
      <param name="type">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponents()">
      <summary>Generic version. See the Generic Functions page for more details.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Component.GetComponentsInChildren(Type t,bool includeInactive = false)">
      <summary>Returns all components of Type type in the GameObject or any of its children.</summary>
      <remarks></remarks>
      <param name="t">The type of Component to retrieve.</param>
      <param name="includeInactive">Should inactive Components be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponentsInChildren(bool includeInactive)">
      <summary>Generic version. See the Generic Functions page for more details.</summary>
      <remarks></remarks>
      <param name="includeInactive">Should inactive Components be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponentsInChildren()">
      <summary>Generic version. See the Generic Functions page for more details.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Component.SendMessage(string methodName,object value = null,SendMessageOptions options = SendMessageOptions.RequireReceiver)">
      <summary>Calls the method named methodName on every MonoBehaviour in this game object.</summary>
      <remarks></remarks>
      <param name="methodName">Name of the method to call.</param>
      <param name="value">Optional parameter for the method.</param>
      <param name="options">Should an error be raised if the target object doesn't implement the method for the message?</param>
    </member>
    <member name="M:UnityEngine.Component.SendMessageUpwards(string methodName,SendMessageOptions options)">
      <summary>Calls the method named methodName on every MonoBehaviour in this game object and on every ancestor of the behaviour.</summary>
      <remarks></remarks>
      <param name="methodName">Name of method to call.</param>
      <param name="value">Optional parameter value for the method.</param>
      <param name="options">Should an error be raised if the method does not exist on the target object?</param>
    </member>
    <member name="T:UnityEngine.Random">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Random.Range(float min,float max)">
      <summary>Returns a random float number between and min [inclusive] and max [inclusive] (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Random.Range(int min,int max)">
      <summary>Returns a random integer number between min [inclusive] and max [exclusive] (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.NetworkView">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkView.group">
      <summary>The network group number of this network view.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkView.isMine">
      <summary>Is the network view controlled by this object?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkView.observed">
      <summary>The component the network view is observing.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkView.owner">
      <summary>The NetworkPlayer who owns this network view.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkView.stateSynchronization">
      <summary>The type of NetworkStateSynchronization set for this network view.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.NetworkView.viewID">
      <summary>The ViewID of this network view.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NetworkView.RPC(string name,RPCMode mode,params object[] args)">
      <summary>Call a RPC function on all connected peers.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NetworkView.RPC(string name,NetworkPlayer target,params object[] args)">
      <summary>Call a RPC function on a specific player.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NetworkView.SetScope(NetworkPlayer player,bool relevancy)">
      <summary>Set the scope of the network view in relation to a specific network player.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.NetworkView.Find(NetworkViewID viewID)">
      <summary>Find a network view based on a NetworkViewID.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.LightmapSettings">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Vector2">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Vector2(float x,&#13;&#10;float y)">
      <summary>Constructs a new vector with given x, y components.</summary>
      <remarks></remarks>
      <param name="x"></param>
      <param name="y)"></param>
    </member>
    <member name="P:UnityEngine.Vector2.magnitude">
      <summary>Returns the length of this vector (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector2.normalized">
      <summary>Returns this vector with a magnitude of 1 (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector2.sqrMagnitude">
      <summary>Returns the squared length of this vector (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector2.this[int]">
      <summary>Access the x or y component using [0] or [1] respectively.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector2.x">
      <summary>X component of the vector.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector2.y">
      <summary>Y component of the vector.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.Normalize()">
      <summary>Makes this vector have a magnitude of 1.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.Set(float new_x,float new_y)">
      <summary>Set x and y components of an existing Vector2.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.ToString()">
      <summary>Returns a nicely formatted string for this vector.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.Angle(Vector2 from,Vector2 to)">
      <summary>Returns the angle in degrees between from and to.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.ClampMagnitude(Vector2 vector,float maxLength)">
      <summary>Returns a copy of vector with its magnitude clamped to maxLength.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.Distance(Vector2 a,Vector2 b)">
      <summary>Returns the distance between a and b.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.Dot(Vector2 lhs,Vector2 rhs)">
      <summary>Dot Product of two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.Lerp(Vector2 from,Vector2 to,float t)">
      <summary>Linearly interpolates between two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.Max(Vector2 lhs,Vector2 rhs)">
      <summary>Returns a vector that is made from the largest components of two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.Min(Vector2 lhs,Vector2 rhs)">
      <summary>Returns a vector that is made from the smallest components of two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.MoveTowards(Vector2 current,Vector2 target,float maxDistanceDelta)">
      <summary>Moves a point current towards target.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.Scale(Vector2 a,Vector2 b)">
      <summary>Multiplies two vectors component-wise.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector2.Scale(Vector2 scale)">
      <summary>Multiplies every component of this vector by the same component of scale.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.EdgeCollider2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.edgeCount">
      <summary>Gets the number of edges.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.pointCount">
      <summary>Gets the number of points.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.points">
      <summary>Get or set the points defining multiple continuous edges.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.EdgeCollider2D.Reset()">
      <summary>Reset to a single edge consisting of two points.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUITexture">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUITexture.border">
      <summary>The border defines the number of pixels from the edge that are not affected by scale.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUITexture.color">
      <summary>The color of the GUI texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUITexture.pixelInset">
      <summary>Pixel inset used for pixel adjustments for size and position.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUITexture.texture">
      <summary>The texture used for drawing.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.File">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Windows.File.Delete(string path)">
      <summary>Deletes the specified file.</summary>
      <remarks></remarks>
      <param name="path">The name of the file to be deleted.</param>
    </member>
    <member name="M:UnityEngine.Windows.File.Exists(string path)">
      <summary>Determines whether the specified file exists.</summary>
      <remarks></remarks>
      <param name="path">The file to check.</param>
    </member>
    <member name="M:UnityEngine.Windows.File.ReadAllBytes(string path)">
      <summary>Opens a binary file, reads the contents of the file into a byte array, and then closes the file.</summary>
      <remarks></remarks>
      <param name="path">The file to open for reading.</param>
    </member>
    <member name="M:UnityEngine.Windows.File.WriteAllBytes(string path,byte[] bytes)">
      <summary>Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.</summary>
      <remarks></remarks>
      <param name="path">The file to write to.</param>
      <param name="bytes">The bytes to write to the file.</param>
    </member>
    <member name="T:UnityEngine.Joint">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Joint.anchor">
      <summary>The Position of the anchor around which the joints motion is constrained.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Joint.autoConfigureConnectedAnchor">
      <summary>Should the connectedAnchor be calculated automatically?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Joint.axis">
      <summary>The Direction of the axis around which the body is constrained.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Joint.breakForce">
      <summary>The force that needs to be applied for this joint to break.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Joint.breakTorque">
      <summary>The torque that needs to be applied for this joint to break.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Joint.connectedAnchor">
      <summary>Position of the anchor relative to the connected Rigidbody.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Joint.connectedBody">
      <summary>A reference to another rigidbody this joint connects to.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.RenderTexture">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.RenderTexture(int width,&#13;&#10;int height,&#13;&#10;int depth)">
      <summary>Creates a new RenderTexture object.</summary>
      <remarks></remarks>
      <param name="width"></param>
      <param name="height"></param>
      <param name="depth)"></param>
    </member>
    <member name="P:UnityEngine.RenderTexture.antiAliasing">
      <summary>The antialiasing level for the RenderTexture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.colorBuffer">
      <summary>Color buffer of the render texture (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.depth">
      <summary>The precision of the render texture's depth buffer in bits (0, 16, 24 are supported).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.depthBuffer">
      <summary>Depth buffer of the render texture (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.enableRandomWrite">
      <summary>Enable DX11 random access write into this render texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.format">
      <summary>The format of the render texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.height">
      <summary>The height of the render texture in pixels.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.isCubemap">
      <summary>If enabled, this Render Texture will be used as a Cubemap.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.isVolume">
      <summary>If enabled, this Render Texture will be used as a Texture3D.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.sRGB">
      <summary>Does this render texture use sRGB read / write (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.useMipMap">
      <summary>Generate mipmap levels?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.volumeDepth">
      <summary>Volume extent of a 3D render texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.RenderTexture.width">
      <summary>The width of the render texture in pixels.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.RenderTexture.Create()">
      <summary>Actually creates the RenderTexture.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.RenderTexture.DiscardContents()">
      <summary>Discards the contents of the RenderTexture.</summary>
      <remarks></remarks>
      <param name="discardColor">Should the colour buffer be discarded?</param>
      <param name="discardDepth">Should the depth buffer be discarded?</param>
    </member>
    <member name="M:UnityEngine.RenderTexture.IsCreated()">
      <summary>Is the render texture actually created?</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.RenderTexture.MarkRestoreExpected()">
      <summary>Indicate that there's a RenderTexture restore operation expected.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.RenderTexture.Release()">
      <summary>Releases the RenderTexture.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.RenderTexture.SetGlobalShaderProperty(string propertyName)">
      <summary>Assigns this RenderTexture as a global shader property named propertyName.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.RenderTexture.GetTemporary(int width,int height,int depthBuffer = 0,RenderTextureFormat format = RenderTextureFormat.Default,RenderTextureReadWrite readWrite = RenderTextureReadWrite.Default,int antiAliasing = 1)">
      <summary>Allocate a temporary render texture.</summary>
      <remarks></remarks>
      <param name="width">Width in pixels.</param>
      <param name="height">Height in pixels.</param>
      <param name="depthBuffer">Depth buffer bits (0, 16 or 24).</param>
      <param name="format">Render texture format.</param>
      <param name="readWrite">sRGB handling mode.</param>
      <param name="antiAliasing">Anti-aliasing (1,2,4,8).</param>
    </member>
    <member name="M:UnityEngine.RenderTexture.ReleaseTemporary(RenderTexture temp)">
      <summary>Release a temporary texture allocated with GetTemporary.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.RenderTexture.SupportsStencil(RenderTexture rt)">
      <summary>Does the RenderTexture have stencil buffer?</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.IAchievement">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievement.completed">
      <summary>Set to true when percentCompleted is 100.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievement.hidden">
      <summary>This achievement is currently hidden from the user.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievement.id">
      <summary>The unique identifier of this achievement.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievement.lastReportedDate">
      <summary>Set by server when percentCompleted is updated.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.IAchievement.percentCompleted">
      <summary>Progress for this achievement.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.IAchievement.ReportProgress(Action&lt;bool&gt; callback)">
      <summary>Send notification about progress on this achievement.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.WSA.WindowActivated.WindowActivated">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Screen">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Screen.SetResolution(int width,int height,bool fullscreen,int preferredRefreshRate = 0)">
      <summary>Switches the screen resolution.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AudioClip">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioClip.channels">
      <summary>Channels in audio clip. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioClip.frequency">
      <summary>Sample frequency. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioClip.isReadyToPlay">
      <summary>Is a streamed audio clip ready to play? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioClip.length">
      <summary>The length of the audio clip in seconds. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioClip.samples">
      <summary>The length of the audio clip in samples. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AudioClip.GetData(float[] data,int offsetSamples)">
      <summary>Fills an array with sample data from the clip. The samples are floats ranging from -1.0f to 1.0f. The sample count is determined by the length of the float array.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AudioClip.SetData(float[] data,int offsetSamples)">
      <summary>Set sample data in a clip. The samples should be floats ranging from 0.0f to 1.0f (exceeding these limits will lead to artifacts and undefined behaviour).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(string name,int lengthSamples,int channels,int frequency,bool _3D,bool stream)">
      <summary>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Caching">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Caching.Authorize(string name,string domain,long size,string signature)">
      <summary>(This is a WebPlayer-only function).</summary>
      <remarks></remarks>
      <param name="string">Signature The authentification signature provided by Unity.</param>
      <param name="int">Size The number of bytes allocated to this cache.</param>
    </member>
    <member name="M:UnityEngine.Caching.CleanCache()">
      <summary>Delete all AssetBundle content that has been cached by the current application.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Caching.IsVersionCached(string url,int version)">
      <summary>Checks if an AssetBundle is cached.</summary>
      <remarks></remarks>
      <param name="string">Url The filename of the AssetBundle. Domain and path information are stripped from this string automatically.</param>
      <param name="int">Version The version number of the AssetBundle to check for. Negative values are not allowed.</param>
    </member>
    <member name="M:UnityEngine.Caching.MarkAsUsed(string url,int version)">
      <summary>Bumps the timestamp of a cached file to be the current time.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AnimationCurve">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.AnimationCurve(params Keyframe[] keys)">
      <summary>Creates an animation curve from arbitrary number of keyframes.</summary>
      <remarks></remarks>
      <param name="keys)"></param>
    </member>
    <member name="C:UnityEngine.AnimationCurve()">
      <summary>Creates an empty animation curve.</summary>
      <remarks></remarks>
      <param name="AnimationCurve()"></param>
    </member>
    <member name="P:UnityEngine.AnimationCurve.keys">
      <summary>All keys defined in the animation curve.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationCurve.length">
      <summary>The number of keys in the curve. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationCurve.postWrapMode">
      <summary>The behaviour of the animation after the last keyframe.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationCurve.preWrapMode">
      <summary>The behaviour of the animation before the first keyframe.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AnimationCurve.this[int]">
      <summary>Retrieves the key at index. (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationCurve.AddKey(float time,float value)">
      <summary>Add a new key to the curve.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationCurve.AddKey(Keyframe key)">
      <summary>Add a new key to the curve.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationCurve.Evaluate(float time)">
      <summary>Evaluate the curve at time.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationCurve.MoveKey(int index,Keyframe key)">
      <summary>Removes the keyframe at index and inserts key.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationCurve.RemoveKey(int index)">
      <summary>Removes a key.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationCurve.SmoothTangents(int index,float weight)">
      <summary>Smooth the in and out tangents of the keyframe at index.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationCurve.EaseInOut(float timeStart,float valueStart,float timeEnd,float valueEnd)">
      <summary>An ease-in and out curve starting at timeStart, valueStart and ending at timeEnd, valueEnd.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.AnimationCurve.Linear(float timeStart,float valueStart,float timeEnd,float valueEnd)">
      <summary>A straight Line starting at timeStart, valueStart and ending at timeEnd, valueEnd.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.CharacterInfo">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterInfo.flipped">
      <summary>Is the character flipped?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterInfo.index">
      <summary>Unicode value of the character.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterInfo.size">
      <summary>The size of the character or 0 if it is the default font size.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterInfo.style">
      <summary>The style of the character.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterInfo.uv">
      <summary>UV coordinates for the character in the texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterInfo.vert">
      <summary>Screen coordinates for the character in generated text meshes.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CharacterInfo.width">
      <summary>How for to advance between the beginning of this charcater and the next.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AudioReverbFilter">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.decayHFRatio">
      <summary>Decay HF Ratio : High-frequency to low-frequency decay time ratio. Ranges from 0.1 to 2.0. Default is 0.5.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.decayTime">
      <summary>Reverberation decay time at low-frequencies in seconds. Ranges from 0.1 to 20.0. Default is 1.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.density">
      <summary>Reverberation density (modal density) in percent. Ranges from 0.0 to 100.0. Default is 100.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.diffusion">
      <summary>Reverberation diffusion (echo density) in percent. Ranges from 0.0 to 100.0. Default is 100.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.dryLevel">
      <summary>Mix level of dry signal in output in mB. Ranges from -10000.0 to 0.0. Default is 0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.hfReference">
      <summary>Reference high frequency in Hz. Ranges from 20.0 to 20000.0. Default is 5000.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.lFReference">
      <summary>Reference low-frequency in Hz. Ranges from 20.0 to 1000.0. Default is 250.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reflectionsDelay">
      <summary>Late reverberation level relative to room effect in mB. Ranges from -10000.0 to 2000.0. Default is 0.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reflectionsLevel">
      <summary>Early reflections level relative to room effect in mB. Ranges from -10000.0 to 1000.0. Default is -10000.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reverbDelay">
      <summary>Late reverberation delay time relative to first reflection in seconds. Ranges from 0.0 to 0.1. Default is 0.04.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reverbLevel">
      <summary>Late reverberation level relative to room effect in mB. Ranges from -10000.0 to 2000.0. Default is 0.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reverbPreset">
      <summary>Set/Get reverb preset properties.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.room">
      <summary>Room effect level at low frequencies in mB. Ranges from -10000.0 to 0.0. Default is 0.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.roomHF">
      <summary>Room effect high-frequency level re. low frequency level in mB. Ranges from -10000.0 to 0.0. Default is 0.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.roomLF">
      <summary>Room effect low-frequency level in mB. Ranges from -10000.0 to 0.0. Default is 0.0.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.roomRolloff">
      <summary>Rolloff factor for room effect. Ranges from 0.0 to 10.0. Default is 10.0.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.TreeInstance">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TreeInstance.color">
      <summary>Color of this instance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TreeInstance.heightScale">
      <summary>Height scale of this instance (compared to the prototype's size).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TreeInstance.lightmapColor">
      <summary>Lightmap color calculated for this instance.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TreeInstance.position">
      <summary>Position of the tree.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TreeInstance.prototypeIndex">
      <summary>Index of this instance in the TerrainData.treePrototypes array.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TreeInstance.widthScale">
      <summary>Width scale of this instance (compared to the prototype's size).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SleepTimeout">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUISettings">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISettings.cursorColor">
      <summary>The color of the cursor in text fields.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISettings.cursorFlashSpeed">
      <summary>The speed of text field cursor flashes.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISettings.doubleClickSelectsWord">
      <summary>Should double-clicking select words in text fields.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISettings.selectionColor">
      <summary>The color of the selection rect in text fields.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.GUISettings.tripleClickSelectsLine">
      <summary>Should triple-clicking select whole text in text fields.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Sprite">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Sprite.bounds">
      <summary>Bounds of the Sprite, specified by its center and extents in world space units.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Sprite.packed">
      <summary>Returns true if this Sprite is packed in an atlas.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Sprite.packingMode">
      <summary>If Sprite is packed (see Sprite.packed), returns its SpritePackingMode.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Sprite.packingRotation">
      <summary>If Sprite is packed (see Sprite.packed), returns its SpritePackingRotation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Sprite.rect">
      <summary>Location of the Sprite on the original Texture, specified in pixels.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.LocationService">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocationService.isEnabledByUser">
      <summary>Specifies whether location service is enabled in user settings.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocationService.lastData">
      <summary>Last measured device geographical location.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LocationService.status">
      <summary>Returns location service status.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.LocationService.Start(float desiredAccuracyInMeters = 10f,float updateDistanceInMeters = 10f)">
      <summary>Starts location service updates.  Last location coordinates could be.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.LocationService.Stop()">
      <summary>Stops location service updates. This could be useful for saving battery life.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Time">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.InteractiveCloth">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.InteractiveCloth.attachmentResponse">
      <summary>How much force will be applied to attached rigidbodies?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.InteractiveCloth.attachmentTearFactor">
      <summary>How far attached rigid bodies need to be stretched, before they will tear off.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.InteractiveCloth.collisionResponse">
      <summary>How much force will be applied to colliding rigidbodies?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.InteractiveCloth.density">
      <summary>The density of the cloth.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.InteractiveCloth.friction">
      <summary>The friction of the cloth.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.InteractiveCloth.isTeared">
      <summary>Did the cloth tear? (Read Only)</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.InteractiveCloth.mesh">
      <summary>The mesh used as base for the cloth object.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.InteractiveCloth.pressure">
      <summary>The pressure inside the cloth.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.InteractiveCloth.tearFactor">
      <summary>How far cloth vertices need to be stretched, before the cloth will tear.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.InteractiveCloth.AddForceAtPosition(Vector3 force,Vector3 position,float radius,ForceMode mode = ForceMode.Force)">
      <summary>Adds force force to all vertices of the cloth mesh which are with radius distance of position.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.InteractiveCloth.AttachToCollider(Collider collider,bool tearable = false,bool twoWayInteraction = false)">
      <summary>Attaches a collider to the cloth object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.InteractiveCloth.DetachFromCollider(Collider collider)">
      <summary>Detaches a collider from the cloth object.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.TextMesh">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.alignment">
      <summary>How lines of text are aligned (Left, Right, Center).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.anchor">
      <summary>Which point of the text shares the position of the Transform.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.characterSize">
      <summary>The size of each character (This scales the whole text).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.color">
      <summary>The color used to render the text.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.font">
      <summary>The Font used.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.fontSize">
      <summary>The font size to use (for dynamic fonts).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.fontStyle">
      <summary>The font style to use (for dynamic fonts).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.lineSpacing">
      <summary>How much space will be in-between lines of text.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.offsetZ">
      <summary>How far should the text be offset from the transform.position.z when drawing.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.richText">
      <summary>Enable HTML-style tags for Text Formatting Markup.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.tabSize">
      <summary>How much space will be inserted for a tab '\t' character. This is a multiplum of the 'spacebar' character offset.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.TextMesh.text">
      <summary>The text that is displayed.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.iOS">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.BoneWeight">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoneWeight.boneIndex0">
      <summary>Index of first bone.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoneWeight.boneIndex1">
      <summary>Index of second bone.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoneWeight.boneIndex2">
      <summary>Index of third bone.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoneWeight.boneIndex3">
      <summary>Index of fourth bone.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoneWeight.weight0">
      <summary>Skinning weight for first bone.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoneWeight.weight1">
      <summary>Skinning weight for second bone.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoneWeight.weight2">
      <summary>Skinning weight for third bone.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoneWeight.weight3">
      <summary>Skinning weight for fourth bone.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.JointLimits">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointLimits.max">
      <summary>The upper limit of the joint.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointLimits.maxBounce">
      <summary>The bounciness of the joint when hitting the upper limit of the joint.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointLimits.min">
      <summary>The lower limit of the joint.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.JointLimits.minBounce">
      <summary>The bounciness of the joint when hitting the lower limit of the joint.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Touch">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Touch.deltaPosition">
      <summary>The position delta since last change.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Touch.deltaTime">
      <summary>Amount of time that has passed since the last recorded change in Touch values.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Touch.fingerId">
      <summary>The unique index for the touch.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Touch.phase">
      <summary>Describes the phase of the touch.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Touch.position">
      <summary>The position of the touch in pixel coordinates.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Touch.tapCount">
      <summary>Number of taps.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Ping">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Ping(string address)">
      <summary>Perform a ping to the supplied target IP address.</summary>
      <remarks></remarks>
      <param name="address)"></param>
    </member>
    <member name="P:UnityEngine.Ping.ip">
      <summary>The IP target of the ping.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Ping.isDone">
      <summary>Has the ping function completed?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Ping.time">
      <summary>This property contains the ping time result after isDone returns true.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Coroutine">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.WaitForEndOfFrame">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Joint2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Joint2D.collideConnected">
      <summary>Can the joint collide with the other Rigidbody2D object to which it is attached?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Joint2D.connectedBody">
      <summary>The Rigidbody2D object to which the other end of the joint is attached (ie, the object without the joint component).</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Resources">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Resources.FindObjectsOfTypeAll(Type type)">
      <summary>Returns a list of all objects of Type type.</summary>
      <remarks></remarks>
      <param name="type">Type of the class to match while searching.</param>
    </member>
    <member name="M:UnityEngine.Resources.FindObjectsOfTypeAll()">
      <summary>Returns a list of all objects of Type T.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Resources.Load(string path)">
      <summary>Loads an asset stored at path in a Resources folder.</summary>
      <remarks></remarks>
      <param name="path">Pathname of the target folder.</param>
      <param name="systemTypeInstance">Type filter for objects returned.</param>
    </member>
    <member name="M:UnityEngine.Resources.Load(string path)">
      <summary>Loads an asset stored at path in a Resources folder.</summary>
      <remarks></remarks>
      <param name="path">Pathname of the target folder.</param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAll(string path)">
      <summary>Loads all assets in a folder or file at path in a Resources folder.</summary>
      <remarks></remarks>
      <param name="path">Pathname of the target folder.</param>
      <param name="systemTypeInstance">Type filter for objects returned.</param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAll(string path)">
      <summary>Loads all assets in a folder or file at path in a Resources folder.</summary>
      <remarks></remarks>
      <param name="path">Pathname of the target folder.</param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAssetAtPath(string assetPath,Type type)">
      <summary>Returns a resource at an asset path (Editor Only).</summary>
      <remarks></remarks>
      <param name="assetPath">Pathname of the target asset.</param>
      <param name="type">Type filter for objects returned.</param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAssetAtPath(string assetPath)">
      <summary>Returns a resource at an asset path (Editor Only).</summary>
      <remarks></remarks>
      <param name="assetPath">Pathname of the target asset.</param>
    </member>
    <member name="M:UnityEngine.Resources.UnloadAsset(Object assetToUnload)">
      <summary>Unloads assetToUnload from memory.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Resources.UnloadUnusedAssets()">
      <summary>Unloads assets that are not used.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AudioDistortionFilter">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AudioDistortionFilter.distortionLevel">
      <summary>Distortion value. 0.0 to 1.0. Default = 0.5.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.MeshCollider">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MeshCollider.convex">
      <summary>Use a convex collider from the mesh.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MeshCollider.sharedMesh">
      <summary>The mesh object used for collision detection.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MeshCollider.smoothSphereCollisions">
      <summary>Uses interpolated normals for sphere collisions instead of flat polygonal normals.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Wii">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Object">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Object.hideFlags">
      <summary>Should the object be hidden, saved with the scene or modifiable by the user?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Object.name">
      <summary>The name of the object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Object.GetInstanceID()">
      <summary>Returns the instance id of the object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Object.ToString()">
      <summary>Returns the name of the game object.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Object.Destroy(Object obj,float t = 0.0F)">
      <summary>Removes a gameobject, component or asset.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Object.DestroyImmediate(Object obj,bool allowDestroyingAssets = false)">
      <summary>Destroys the object obj immediately. You are strongly recommended to use Destroy instead.</summary>
      <remarks></remarks>
      <param name="obj">Object to be destroyed.</param>
      <param name="allowDestroyingAssets">Set to true to allow assets to be destoyed.</param>
    </member>
    <member name="M:UnityEngine.Object.DontDestroyOnLoad(Object target)">
      <summary>Makes the object target not be destroyed automatically when loading a new scene.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Object.FindObjectOfType(Type type)">
      <summary>Returns the first active loaded object of Type type.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Object.FindObjectsOfType(Type type)">
      <summary>Returns a list of all active loaded objects of Type type.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Object.Instantiate(Object original,Vector3 position,Quaternion rotation)">
      <summary>Clones the object original and returns the clone.</summary>
      <remarks></remarks>
      <param name="original">An existing object that you want to make a copy of.</param>
      <param name="position">Position for the new object.</param>
      <param name="rotation">Orientation of the new object.</param>
    </member>
    <member name="T:UnityEngine.LightProbeGroup">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.LightProbeGroup.probePositions">
      <summary>Editor only function to access and modify probe positions.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUILayoutOption">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.FixedJoint">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.BoxCollider2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoxCollider2D.center">
      <summary>The center point of the rectangle in local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.BoxCollider2D.size">
      <summary>The width and height of the rectangle.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Flare">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.GUILayout">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(Rect screenRect)">
      <summary>Begin a GUILayout block of GUI controls in a fixed screen area.</summary>
      <remarks></remarks>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginHorizontal(params GUILayoutOption[] options)">
      <summary>Begin a Horizontal control group.</summary>
      <remarks></remarks>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(Vector2 scrollPosition,params GUILayoutOption[] options)">
      <summary>Begin an automatically laid out scrollview.</summary>
      <remarks></remarks>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginVertical(params GUILayoutOption[] options)">
      <summary>Begin a vertical control group.</summary>
      <remarks></remarks>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(Texture image,params GUILayoutOption[] options)">
      <summary>Make an auto-layout box.</summary>
      <remarks></remarks>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(Texture image,params GUILayoutOption[] options)">
      <summary>Make a single press button. The user clicks them and something happens immediately.</summary>
      <remarks></remarks>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.EndArea()">
      <summary>Close a GUILayout block started with BeginArea.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.EndHorizontal()">
      <summary>Close a group started with BeginHorizontal.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.EndScrollView()">
      <summary>End a scroll view begun with a call to BeginScrollView.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.EndVertical()">
      <summary>Close a group started with BeginVertical.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.ExpandHeight(bool expand)">
      <summary>Option passed to a control to allow or disallow vertical expansion.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.ExpandWidth(bool expand)">
      <summary>Option passed to a control to allow or disallow horizontal expansion.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.FlexibleSpace()">
      <summary>Insert a flexible space element.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.Height(float height)">
      <summary>Option passed to a control to give it an absolute height.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScrollbar(float value,float size,float leftValue,float rightValue,params GUILayoutOption[] options)">
      <summary>Make a horiztonal scrollbar.</summary>
      <remarks></remarks>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="leftValue">The value at the left end of the scrollbar.</param>
      <param name="rightValue">The value at the right end of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalSlider(float value,float leftValue,float rightValue,params GUILayoutOption[] options)">
      <summary>A horizontal slider the user can drag to change a value between a min and a max.</summary>
      <remarks></remarks>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(Texture image,params GUILayoutOption[] options)">
      <summary>Make an auto-layout label.</summary>
      <remarks></remarks>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.MaxHeight(float maxHeight)">
      <summary>Option passed to a control to specify a maximum height.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.MaxWidth(float maxWidth)">
      <summary>Option passed to a control to specify a maximum width.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.MinHeight(float minHeight)">
      <summary>Option passed to a control to specify a minimum height.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.MinWidth(float minWidth)">
      <summary>Option passed to a control to specify a minimum width.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.PasswordField(string password,char maskChar,params GUILayoutOption[] options)">
      <summary>Make a text field where the user can enter a password.</summary>
      <remarks></remarks>
      <param name="password">Password to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maskChar">Character to mask the password with.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(Texture image,params GUILayoutOption[] options)">
      <summary>Make a repeating button. The button returns true as long as the user holds down the mouse.</summary>
      <remarks></remarks>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(int selected,string[] texts,int xCount,params GUILayoutOption[] options)">
      <summary>Make a Selection Grid.</summary>
      <remarks></remarks>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The elements will be scaled to fit unless the style defines a fixedWidth to use. The height of the control will be determined from the number of elements.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Space(float pixels)">
      <summary>Insert a space in the current layout group.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.TextArea(string text,params GUILayoutOption[] options)">
      <summary>Make a multi-line text field where the user can edit a string.</summary>
      <remarks></remarks>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.TextField(string text,params GUILayoutOption[] options)">
      <summary>Make a single-line text field where the user can edit a string.</summary>
      <remarks></remarks>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textArea style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(bool value,Texture image,params GUILayoutOption[] options)">
      <summary>Make an on/off toggle button.</summary>
      <remarks></remarks>
      <param name="value">Is the button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(int selected,string[] texts,params GUILayoutOption[] options)">
      <summary>Make a toolbar.</summary>
      <remarks></remarks>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScrollbar(float value,float size,float topValue,float bottomValue,params GUILayoutOption[] options)">
      <summary>Make a vertical scrollbar.</summary>
      <remarks></remarks>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="topValue">The value at the top end of the scrollbar.</param>
      <param name="bottomValue">The value at the bottom end of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalSlider(float value,float leftValue,float rightValue,params GUILayoutOption[] options)">
      <summary>A vertical slider the user can drag to change a value between a min and a max.</summary>
      <remarks></remarks>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="topValue">The value at the top end of the slider.</param>
      <param name="bottomValue">The value at the bottom end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Width(float width)">
      <summary>Option passed to a control to give it an absolute width.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(int id,Rect screenRect,WindowFunction func,string text,params GUILayoutOption[] options)">
      <summary>Make a popup window that layouts its contents automatically.</summary>
      <remarks></remarks>
      <param name="id">A unique ID to use for each window. This is the ID you'll use to interface to it.</param>
      <param name="screenRect">Rectangle on the screen to use for the window. The layouting system will attempt to fit the window inside it - if that cannot be done, it will adjust the rectangle to fit.</param>
      <param name="func">The function that creates the GUI inside the window. This function must take one parameter - the id of the window it's currently making GUI for.</param>
      <param name="text">Text to display as a title for the window.</param>
      <param name="image">Texture to display an image in the titlebar.</param>
      <param name="content">Text, image and tooltip for this window.</param>
      <param name="style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style or the screenRect you pass in.&#13;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, &#13;
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="T:UnityEngine.Collider2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collider2D.attachedRigidbody">
      <summary>The Rigidbody2D attached to the Collider2D's GameObject.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collider2D.isTrigger">
      <summary>Is this collider configured as a trigger?</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collider2D.shapeCount">
      <summary>The number of separate shaped regions in the collider.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Collider2D.sharedMaterial">
      <summary>The PhysicsMaterial2D that is applied to this collider.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Collider2D.OverlapPoint(Vector2 point)">
      <summary>Check if a collider overlaps a point in space.</summary>
      <remarks></remarks>
      <param name="point">A point in world space.</param>
    </member>
    <member name="T:UnityEngine.Vector4">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Vector4(float x,&#13;&#10;float y,&#13;&#10;float z,&#13;&#10;float w)">
      <summary>Creates a new vector with given x, y, z, w components.</summary>
      <remarks></remarks>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
      <param name="w)"></param>
    </member>
    <member name="C:UnityEngine.Vector4(float x,&#13;&#10;float y,&#13;&#10;float z)">
      <summary>Creates a new vector with given x, y, z components and sets w to zero.</summary>
      <remarks></remarks>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z)"></param>
    </member>
    <member name="C:UnityEngine.Vector4(float x,&#13;&#10;float y)">
      <summary>Creates a new vector with given x, y components and sets z and w to zero.</summary>
      <remarks></remarks>
      <param name="x"></param>
      <param name="y)"></param>
    </member>
    <member name="P:UnityEngine.Vector4.magnitude">
      <summary>Returns the length of this vector (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector4.normalized">
      <summary>Returns this vector with a magnitude of 1 (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector4.sqrMagnitude">
      <summary>Returns the squared length of this vector (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector4.this[int]">
      <summary>Access the x, y, z, w components using [0], [1], [2], [3] respectively.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector4.w">
      <summary>W component of the vector.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector4.x">
      <summary>X component of the vector.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector4.y">
      <summary>Y component of the vector.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Vector4.z">
      <summary>Z component of the vector.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.Set(float new_x,float new_y,float new_z,float new_w)">
      <summary>Set x, y, z and w components of an existing Vector4.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.ToString()">
      <summary>Returns a nicely formatted string for this vector.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.Distance(Vector4 a,Vector4 b)">
      <summary>Returns the distance between a and b.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.Dot(Vector4 a,Vector4 b)">
      <summary>Dot Product of two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.Lerp(Vector4 from,Vector4 to,float t)">
      <summary>Linearly interpolates between two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.Max(Vector4 lhs,Vector4 rhs)">
      <summary>Returns a vector that is made from the largest components of two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.Min(Vector4 lhs,Vector4 rhs)">
      <summary>Returns a vector that is made from the smallest components of two vectors.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.MoveTowards(Vector4 current,Vector4 target,float maxDistanceDelta)">
      <summary>Moves a point current towards target.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.Normalize()">
      <summary>Makes this vector have a magnitude of 1.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.Project(Vector4 a,Vector4 b)">
      <summary>Projects a vector onto another vector.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.Scale(Vector4 a,Vector4 b)">
      <summary>Multiplies two vectors component-wise.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Vector4.Scale(Vector4 scale)">
      <summary>Multiplies every component of this vector by the same component of scale.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ConfigurableJoint">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularXDrive">
      <summary>Definition of how the joint's rotation will behave around its local X axis. Only used if Rotation Drive Mode is Swing &amp; Twist.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularXMotion">
      <summary>Allow rotation around the X axis to be Free, completely Locked, or Limited according to Low and High Angular XLimit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularYLimit">
      <summary>Boundary defining rotation restriction, based on delta from original rotation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularYMotion">
      <summary>Allow rotation around the Y axis to be Free, completely Locked, or Limited according to Angular YLimit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularYZDrive">
      <summary>Definition of how the joint's rotation will behave around its local Y and Z axes. Only used if Rotation Drive Mode is Swing &amp; Twist.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularZLimit">
      <summary>Boundary defining rotation restriction, based on delta from original rotation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularZMotion">
      <summary>Allow rotation around the Z axis to be Free, completely Locked, or Limited according to Angular ZLimit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.configuredInWorldSpace">
      <summary>If enabled, all Target values will be calculated in world space instead of the object's local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.highAngularXLimit">
      <summary>Boundary defining upper rotation restriction, based on delta from original rotation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.linearLimit">
      <summary>Boundary defining movement restriction, based on distance from the joint's origin.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.lowAngularXLimit">
      <summary>Boundary defining lower rotation restriction, based on delta from original rotation.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.projectionAngle">
      <summary>Difference in angle from the Connected Body that must be exceeded before the object snaps back to an acceptable position.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.projectionDistance">
      <summary>Distance from the Connected Body that must be exceeded before the object snaps back to an acceptable position.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.projectionMode">
      <summary>Properties to track to snap the object back to its constrained position when it drifts off too much.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.rotationDriveMode">
      <summary>Control the object's rotation with either X &amp; YZ or Slerp Drive by itself.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.secondaryAxis">
      <summary>The joint's secondary axis.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.slerpDrive">
      <summary>Definition of how the joint's rotation will behave around all local axes. Only used if Rotation Drive Mode is Slerp Only.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.swapBodies">
      <summary>If enabled, the two connected rigidbodies will be swapped, as if the joint was attached to the other body.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.targetAngularVelocity">
      <summary>This is a Vector3. It defines the desired angular velocity that the joint should rotate into.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.targetPosition">
      <summary>The desired position that the joint should move into.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.targetRotation">
      <summary>This is a Quaternion. It defines the desired rotation that the joint should rotate into.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.targetVelocity">
      <summary>The desired velocity that the joint should move along.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.xDrive">
      <summary>Definition of how the joint's movement will behave along its local X axis.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.xMotion">
      <summary>Allow movement along the X axis to be Free, completely Locked, or Limited according to Linear Limit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.yDrive">
      <summary>Definition of how the joint's movement will behave along its local Y axis.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.yMotion">
      <summary>Allow movement along the Y axis to be Free, completely Locked, or Limited according to Linear Limit.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.zDrive">
      <summary>Definition of how the joint's movement will behave along its local Z axis.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.zMotion">
      <summary>Allow movement along the Z axis to be Free, completely Locked, or Limited according to Linear Limit.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.MovieTexture">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MovieTexture.audioClip">
      <summary>Returns the AudioClip belonging to the MovieTexture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MovieTexture.duration">
      <summary>The time, in seconds, that the movie takes to play back completely.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MovieTexture.isPlaying">
      <summary>Returns whether the movie is playing or not.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MovieTexture.isReadyToPlay">
      <summary>If the movie is downloading from a web site, this returns if enough data has been downloaded so playback should be able to start without interruptions.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.MovieTexture.loop">
      <summary>Set this to true to make the movie loop.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MovieTexture.Pause()">
      <summary>Pauses playing the movie.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MovieTexture.Play()">
      <summary>Starts playing the movie.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.MovieTexture.Stop()">
      <summary>Stops playing the movie, and rewinds it to the beginning.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ActionScript">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Flash.ActionScript.Expression(string formatString,params object[] arguments)">
      <summary>Emits an ActionScript expression translating variable and field references to their ActionScript names.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Flash.ActionScript.Import(string package)">
      <summary>Causes an import directive to be emitted in the ActionScript code generated for the current type.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Flash.ActionScript.Statement(string formatString,params object[] arguments)">
      <summary>Emits a block of ActionScript code in the current method translating variable and field references to their ActionScript names.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Physics2D">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Physics2D.GetIgnoreLayerCollision(int layer1,int layer2)">
      <summary>Should collisions between the specified layers be ignored?</summary>
      <remarks></remarks>
      <param name="layer1">ID of first layer.</param>
      <param name="layer2">ID of second layer.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.GetRayIntersection(Ray ray,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Cast a 3D ray against the colliders in the scene returning the first collider along the ray.</summary>
      <remarks></remarks>
      <param name="ray">The 3D ray defining origin and direction to test.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to detect colliders only on certain layers.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.GetRayIntersectionAll(Ray ray,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Cast a 3D ray against the colliders in the scene returning all the colliders along the ray.</summary>
      <remarks></remarks>
      <param name="ray">The 3D ray defining origin and direction to test.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to detect colliders only on certain layers.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.GetRayIntersectionNonAlloc(Ray ray,RaycastHit2D[] results,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers)">
      <summary>Cast a 3D ray against the colliders in the scene returning the colliders along the ray.</summary>
      <remarks></remarks>
      <param name="ray">The 3D ray defining origin and direction to test.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to detect colliders only on certain layers.</param>
      <param name="results">Array to receive results.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.IgnoreLayerCollision(int layer1,int layer2,bool ignore = true)">
      <summary>Choose whether to detect or ignore collisions between a specified pair of layers.</summary>
      <remarks></remarks>
      <param name="layer1">ID of the first layer.</param>
      <param name="layer2">ID of the second layer.</param>
      <param name="ignore">Should collisions between these layers be ignored?</param>
    </member>
    <member name="M:UnityEngine.Physics2D.Linecast(Vector2 start,Vector2 end,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Casts a line against colliders in the scene.</summary>
      <remarks></remarks>
      <param name="start">The start point of the line in world space.</param>
      <param name="end">The end point of the line in world space.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.LinecastAll(Vector2 start,Vector2 end,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Casts a line against colliders in the scene.</summary>
      <remarks></remarks>
      <param name="start">The start point of the line in world space.</param>
      <param name="end">The end point of the line in world space.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.LinecastNonAlloc(Vector2 start,Vector2 end,RaycastHit2D[] results,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Casts a line against colliders in the scene.</summary>
      <remarks></remarks>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <param name="start">The start point of the line in world space.</param>
      <param name="end">The end point of the line in world space.</param>
      <param name="results">Returned array of objects that intersect the line.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapArea(Vector2 pointA,Vector2 pointB,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Check if a collider falls within a rectangular area.</summary>
      <remarks></remarks>
      <param name="pointA">One corner of the rectangle.</param>
      <param name="pointB">Diagonally opposite corner of the rectangle.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapAreaAll(Vector2 pointA,Vector2 pointB,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Get a list of all colliders that fall within a rectangular area.</summary>
      <remarks></remarks>
      <param name="pointA">One corner of the rectangle.</param>
      <param name="pointB">Diagonally opposite corner of the rectangle.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapAreaNonAlloc(Vector2 pointA,Vector2 pointB,Collider2D[] results,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Get a list of all colliders that fall within a specified area.</summary>
      <remarks></remarks>
      <param name="pointA">One corner of the rectangle.</param>
      <param name="pointB">Diagonally opposite corner of the rectangle.</param>
      <param name="results">Array to receive results.</param>
      <param name="layerMask">Filter to check objects only on specified layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircle(Vector2 point,float radius,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Check if a collider falls within a circular area.</summary>
      <remarks></remarks>
      <param name="point">Centre of the circle.</param>
      <param name="radius">Radius of the circle.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircleAll(Vector2 point,float radius,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Get a list of all colliders that fall within a circular area.</summary>
      <remarks></remarks>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <param name="point">Center of the circle.</param>
      <param name="radius">Radius of the circle.</param>
      <param name="layerMask">Filter to check objects only on specified layers.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircleNonAlloc(Vector2 point,float radius,Collider2D[] results,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Get a list of all colliders that fall within a circular area.</summary>
      <remarks></remarks>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <param name="point">Center of the circle.</param>
      <param name="radius">Radius of the circle.</param>
      <param name="results">Array to receive results.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPoint(Vector2 point,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Check if a collider overlaps a point in space.</summary>
      <remarks></remarks>
      <param name="point">A point in world space.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPointAll(Vector2 point,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Get a list of all colliders that overlap a point in space.</summary>
      <remarks></remarks>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <param name="point">A point in space.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPointNonAlloc(Vector2 point,Collider2D[] results,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Get a list of all colliders that overlap a point in space.</summary>
      <remarks></remarks>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <param name="point">A point in space.</param>
      <param name="results">Array to receive results.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.Raycast(Vector2 origin,Vector2 direction,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Casts a ray against colliders in the scene.</summary>
      <remarks></remarks>
      <param name="origin">The point in 2D space where the ray originates.</param>
      <param name="direction">Vector representing the direction of the ray.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.RaycastAll(Vector2 origin,Vector2 direction,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Casts a ray against colliders in the scene, returning all colliders that contact with it.</summary>
      <remarks></remarks>
      <param name="origin">The point in 2D space where the ray originates.</param>
      <param name="direction">Vector representing the direction of the ray.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.RaycastNonAlloc(Vector2 origin,Vector2 direction,RaycastHit2D[] results,float distance = Mathf.Infinity,int layerMask = DefaultRaycastLayers,float minDepth = -Mathf.Infinity,float maxDepth = Mathf.Infinity)">
      <summary>Casts a ray into the scene.</summary>
      <remarks></remarks>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <param name="origin">The point in 2D space where the ray originates.</param>
      <param name="direction">Vector representing the direction of the ray.</param>
      <param name="results">Array to receive results.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
    </member>
    <member name="T:UnityEngine.CapsuleCollider">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CapsuleCollider.center">
      <summary>The center of the capsule, measured in the object's local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CapsuleCollider.direction">
      <summary>The direction of the capsule.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CapsuleCollider.height">
      <summary>The height of the capsule meased in the object's local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.CapsuleCollider.radius">
      <summary>The radius of the sphere, measured in the object's local space.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.WaitForSeconds">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.WaitForSeconds(float seconds)">
      <summary>Creates a yield instruction to wait for a given number of seconds.</summary>
      <remarks></remarks>
      <param name="seconds)"></param>
    </member>
    <member name="T:UnityEngine.Cubemap">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Cubemap(int size,&#13;&#10;TextureFormat format,&#13;&#10;bool mipmap)">
      <summary>Create a new empty cubemap texture.</summary>
      <remarks></remarks>
      <param name="size"></param>
      <param name="format"></param>
      <param name="mipmap)"></param>
    </member>
    <member name="P:UnityEngine.Cubemap.format">
      <summary>The format of the pixel data in the texture (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Cubemap.Apply(bool updateMipmaps = true,bool makeNoLongerReadable = false)">
      <summary>Actually apply all previous SetPixel and SetPixels changes.</summary>
      <remarks></remarks>
      <param name="updateMipmaps">Should all mipmap levels be updated?</param>
      <param name="makeNoLongerReadable">Should the Cubemap texture data be readable/modifiable after changes are applied?</param>
    </member>
    <member name="M:UnityEngine.Cubemap.GetPixel(CubemapFace face,int x,int y)">
      <summary>Returns pixel color at coordinates (face, x, y).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Cubemap.GetPixels(CubemapFace face,int miplevel = 0)">
      <summary>Returns pixel colors of a cubemap face.</summary>
      <remarks></remarks>
      <param name="face">The face from which pixel data is taken.</param>
      <param name="miplevel">Mipmap level for the chosen face.</param>
    </member>
    <member name="M:UnityEngine.Cubemap.SetPixel(CubemapFace face,int x,int y,Color color)">
      <summary>Sets pixel color at coordinates (face, x, y).</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Cubemap.SetPixels(Color[] colors,CubemapFace face,int miplevel = 0)">
      <summary>Sets pixel colors of a cubemap face.</summary>
      <remarks></remarks>
      <param name="colors">Pixel data for the Cubemap face.</param>
      <param name="face">The face to which the new data should be applied.</param>
      <param name="miplevel">The mipmap level for the face.</param>
    </member>
    <member name="M:UnityEngine.Cubemap.SmoothEdges(int smoothRegionWidthInPixels = 1)">
      <summary>Performs smoothing of near edge regions.</summary>
      <remarks></remarks>
      <param name="smoothRegionWidthInPixels">Pixel distance at edges over which to apply smoothing.</param>
    </member>
    <member name="T:UnityEngine.Resolution">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Resolution.height">
      <summary>Resolution height in pixels.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Resolution.refreshRate">
      <summary>Resolution's vertical refresh rate in Hz.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Resolution.width">
      <summary>Resolution width in pixels.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.AccelerationEvent">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AccelerationEvent.acceleration">
      <summary>Value of acceleration.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.AccelerationEvent.deltaTime">
      <summary>Amount of time passed since last accelerometer measurement.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.ParticleSystemRenderer">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.cameraVelocityScale">
      <summary>How much are the particles strected depending on the Camera's speed.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.lengthScale">
      <summary>How much are the particles stretched in their direction of motion.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.maxParticleSize">
      <summary>Clamp the maximum particle size.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.mesh">
      <summary>Mesh used as particle instead of billboarded texture.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.renderMode">
      <summary>How particles are drawn.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.velocityScale">
      <summary>How much are the particles strectched depending on "how fast they move".</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.SystemInfo">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.SystemInfo.SupportsRenderTextureFormat(RenderTextureFormat format)">
      <summary>Is render texture format supported?</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.Ray">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="C:UnityEngine.Ray(Vector3 origin,&#13;&#10;Vector3 direction)">
      <summary>Creates a ray starting at origin along direction.</summary>
      <remarks></remarks>
      <param name="origin"></param>
      <param name="direction)"></param>
    </member>
    <member name="P:UnityEngine.Ray.direction">
      <summary>The direction of the ray.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.Ray.origin">
      <summary>The origin point of the ray.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Ray.GetPoint(float distance)">
      <summary>Returns a point at distance units along the ray.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.Ray.ToString()">
      <summary>Returns a nicely formatted string for this ray.</summary>
      <remarks></remarks>
    </member>
    <member name="T:UnityEngine.WheelCollider">
      <summary></summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.brakeTorque">
      <summary>Brake torque. Must be positive.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.center">
      <summary>The center of the wheel, measured in the object's local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.forwardFriction">
      <summary>Properties of tire friction in the direction the wheel is pointing in.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.isGrounded">
      <summary>Indicates whether the wheel currently collides with something (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.mass">
      <summary>The mass of the wheel. Must be larger than zero.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.motorTorque">
      <summary>Motor torque on the wheel axle. Positive or negative depending on direction.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.radius">
      <summary>The radius of the wheel, measured in local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.rpm">
      <summary>Current wheel axle rotation speed, in rotations per minute (Read Only).</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.sidewaysFriction">
      <summary>Properties of tire friction in the sideways direction.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.steerAngle">
      <summary>Steering angle in degrees, always around the local y-axis.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.suspensionDistance">
      <summary>Maximum extension distance of wheel suspension, measured in local space.</summary>
      <remarks></remarks>
    </member>
    <member name="P:UnityEngine.WheelCollider.suspensionSpring">
      <summary>The parameters of wheel's suspension. The suspension attempts to reach a target position.</summary>
      <remarks></remarks>
    </member>
    <member name="M:UnityEngine.WheelCollider.GetGroundHit(WheelHit hit)">
      <summary>Gets ground collision data for the wheel.</summary>
      <remarks></remarks>
    </member>
  </members>
</doc>
